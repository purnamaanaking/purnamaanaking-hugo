[{"section":"Blog","slug":"/blog/langkah-deploy-laravel-project-ke-vercel/","title":"Langkah-langkah Deploy Project Laravel ke Vercel","description":"Langkah-langkah Deploy Project Laravel ke Vercel","date":"June 20, 2024","image":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n  \n    \n      \n    \n\n\n    \n    \n\n\n    \n    \n      \n      \n    \n    \n    \n\n\n    \n    \n      \n      \n        \n        \n        \n        \n        \n        \n\n\n        \n        \n\n\n        \u003cimg\n          \n            src=\"/images/blog/laravel-vercel-github_hua03eadc544d0c0975f6640d82b365694_51542_420x0_resize_q90_h2_lanczos_3.webp\" loading=\"lazy\" decoding=\"async\"\n          \n\n          alt=\"\"\n          class=\"  img\"\n          width=\"420\"\n          height=\"236\"\n          onerror=\"this.onerror='null';this.src='\\/images\\/blog\\/laravel-vercel-github_hua03eadc544d0c0975f6640d82b365694_51542_420x0_resize_lanczos_3.png';\" /\u003e\n\n        \n      \n      \n    \n    \n  \n\n\n  \n","imageSM":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n  \n    \n      \n    \n\n\n    \n    \n\n\n    \n    \n      \n      \n    \n    \n    \n\n\n    \n    \n      \n      \n        \n        \n        \n        \n        \n        \n          \n          \n          \n          \n        \n\n\n        \n        \n\n\n        \u003cimg\n          \n            src=\"/images/blog/laravel-vercel-github_hua03eadc544d0c0975f6640d82b365694_51542_100x100_fill_q90_h2_lanczos_smart1_3.webp\" loading=\"lazy\" decoding=\"async\"\n          \n\n          alt=\"\"\n          class=\"  img\"\n          width=\"100\"\n          height=\"100\"\n          onerror=\"this.onerror='null';this.src='\\/images\\/blog\\/laravel-vercel-github_hua03eadc544d0c0975f6640d82b365694_51542_100x100_fill_lanczos_smart1_3.png';\" /\u003e\n\n        \n      \n      \n    \n    \n  \n\n\n  \n","searchKeyword":"","categories":"Technology","tags":"framework, laravel, deploy, vercel, github","content":"Untuk kamu yang mau buat aplikasi berbasis web menggunakan laravel dan ingin di-online-kan, salah satu alternatif yang bisa dilakukan adalah men-deploy-nya ke platform Vercel https://vercel.com . Berikut ini adalah langkah-langkah yang pernah saya lakukan, check it out!\n1. Setup dan Konfigurasi Project Laravel 1.1. Buat project Laravel baru Buka terminal, saya buat project baru Laravel via composer dengan nama laravel-on, dengan command berikut. Engine php yang saya pakai masih php7, jadi project laravel yang terinstal adalah laravel 8. Nama project laravel silakan bisa disesuaikan dengan nama yang lain. composer create-project laravel/laravel laravel-on Masuk pada project laravel yang baru saja dibuat. Cek versi project laravel yang terinstal, dengan command berikut: cd laravel-on php artisan --version 1.2. Generate application key untuk project laravel Generate application key dengan menjalankan command berikut: php artisan key:generate Buka file .env. nano .env Jika berhasil pada file .env maka akan tergenerate string key pada APP_KEY. Contohnya seperti gambar di bawah ini.\n1.3. Buat entry point untuk vercel Buat folder /api. mkdir api Buat file index.php pada folder /api. touch api/index.php Buka file /api/index.php nano api/index.php Forward entry-point vercel ke public/index.php (entry-point default project laravel) dengan menuliskan kode di bawah ini pada file /api/index.php: \u0026lt;?php require __DIR__ . \u0026#34;/../public/index.php\u0026#34;; 1.4. Buat file .vercelignore Buat dan buka file .vercelignore touch .vercelignore nano .vercelignore Isikan dengan kode di bawah ini: /vendor 1.5. Setup file untuk konfigurasi Vercel Buat file vercel.json. Isi dengan kode di bawah ini: touch vercel.json Buka file vercel.json yang baru saja dibuat. nano vercel.json Setup konfigurasi vercel dengan menulis kode di bawah ini pada file vercel.json. Pada bagian APP_KEY sesuaikan value nya dengan value APP_KEY pada file .env.\nHati-hati pada pemilihan versi vercel-php pada bagian functions runtime. Pemilihan versi vercel-php saya merujuk pada stackoverflow berikut: https://stackoverflow.com/questions/78242231/error-while-deploying-laravel-app-on-vercel-project . Saya menggunakan vercel-php versi 0.3.5 karna php yang saya pakai versi 7.4.x.\n{ \u0026#34;version\u0026#34;: 2, \u0026#34;framework\u0026#34;: null, \u0026#34;functions\u0026#34;: { \u0026#34;api/index.php\u0026#34;: { \u0026#34;runtime\u0026#34;: \u0026#34;vercel-php@0.3.5\u0026#34; } }, \u0026#34;routes\u0026#34;: [{ \u0026#34;src\u0026#34;: \u0026#34;/(.*)\u0026#34;, \u0026#34;dest\u0026#34;: \u0026#34;/api/index.php\u0026#34; }], \u0026#34;env\u0026#34;: { \u0026#34;APP_ENV\u0026#34;: \u0026#34;production\u0026#34;, \u0026#34;APP_DEBUG\u0026#34;: \u0026#34;true\u0026#34;, \u0026#34;APP_URL\u0026#34;: \u0026#34;https://yourprojectdomain.com\u0026#34;, \u0026#34;APP_KEY\u0026#34;: \u0026#34;your_application_key\u0026#34;, \u0026#34;APP_CONFIG_CACHE\u0026#34;: \u0026#34;/tmp/config.php\u0026#34;, \u0026#34;APP_EVENTS_CACHE\u0026#34;: \u0026#34;/tmp/events.php\u0026#34;, \u0026#34;APP_PACKAGES_CACHE\u0026#34;: \u0026#34;/tmp/packages.php\u0026#34;, \u0026#34;APP_ROUTES_CACHE\u0026#34;: \u0026#34;/tmp/routes.php\u0026#34;, \u0026#34;APP_SERVICES_CACHE\u0026#34;: \u0026#34;/tmp/services.php\u0026#34;, \u0026#34;VIEW_COMPILED_PATH\u0026#34;: \u0026#34;/tmp\u0026#34;, \u0026#34;CACHE_DRIVER\u0026#34;: \u0026#34;array\u0026#34;, \u0026#34;LOG_CHANNEL\u0026#34;: \u0026#34;stderr\u0026#34;, \u0026#34;SESSION_DRIVER\u0026#34;: \u0026#34;cookie\u0026#34; } } 1.6. Setup versi Node.js yang digunakan By default vercel menggunakan Node.js versi 20.x. Karna saya menggunakan Node.js versi 18, maka kita bisa override konfigurasi tersebut dengan membuka file package.json kemudian tambahkan kode di bawah ini: \u0026#34;engines\u0026#34;: { \u0026#34;node\u0026#34;: \u0026#34;18.x\u0026#34; } 2. Setup Vercel dan Deploy 2.1. Setup Vercel via CLI install vercel via terminal npm install -g vercel login Vercel via terminal. Saya memilih akun github untuk login. vercel login 2.2. Deploy project Laravel ke Vercel Untuk deploy project laravel ke Vercel, jalankan command di bawah ini: vercel --prod Project laravel hasil deployment bisa diakses melalui URL production yang tampak pada gambar di atas. Atau bisa kita ubah via website vercel. Masuk ke project vercel yang sudah terbuat di dashboard website vercel, masuk pada bagian Setting \u0026gt; Domains. Klik tombol Edit, maka akan muncul tampilan seperti gambar di bawah ini. By default nama domain mengikuti sama dengan nama project vercel yang kita definisikan ketika deploy. Maka domain yang saya miliki adalah laravel-on.vercel.app. Jika kita akses url https://laravel-on.vercel.app maka akan muncul welcome page project laravel seperti di bawah ini. Kita sudah berhasil deploy project laravel ke vercel sehingga project laravel kita bisa diakses secara online. Selanjutnya kita bisa koneksikan project laravel kita di vercel ke Github repository untuk memudahkan kita melakukan re-deployment setelah proses development atau setelah melakukan perubahan kode program di local computer.\n3. Konek ke Github 3.1 Buat Repository Baru Github Masuk ke akun Github yang dimiliki. https://github.com/ Klik menu New Repository untuk membuat repository baru pada akun Github.\nMasukkan nama repository yang akan dibuat. Saya buat dengan nama laravel-on. Silakan sesuaikan sendiri ya..\n3.2 Inisiasi Git pada project Laravel Buka terminal dan masuk ke root direktori project laravel yang sudah kita setup di atas. Kemudian inisiasi, commit, buat branch main sebagai branch utama, setup remote ke repository yang barusan dibuat, dan push project laravel ke repository, dengan menjalankan command di bawah ini pada terminal: git init git add . git commit -m \u0026#34;first commit\u0026#34; git branch -M main git remote add origin https://github.com/purnamaanaking/laravel-on.git git push -u origin main 3.1 Konek Github Repository ke Vercel Masuk ke akun vercel yang kita miliki. https://vercel.com/ Saya pilih project laravel-on yang telah dibuat sebelumnya dan klik Connect Git Repository\nPilih button Github.\nSaya cari \u0026amp; pilih repository larave-on. Klik Connect.\nDengan itu repository laravel-on pada Github dengan tersambung dengan Vercel, sehingga ketika kita melakukan perubahan kode program pada local computer kemudian melakukan push atau merge ke branch main pada repo Github, maka vercel akan melakukan re-deployment di sisi server secara otomatis. Kita dapat melihat hasil perubahan dari aplikasi web yang kita deploy di vercel secara langsung.\nKita sudah berhasil menyambungkan Github repository yang berisi project laravel dengan Vercel. Selanjutnya, untuk urusan database bagaimana? Untuk database bisa kita sambungkan dengan pilihan cloud database yang ada. Kita lanjutkan tulis pada artikel yang berbeda in syaa Allah..\n"},{"section":"Blog","slug":"/blog/namanya-muadz-semoga-allah-menjaganya/","title":"Anak ke-4, Namanya Mu&#39;adz, Semoga Allah Menjaganya","description":"Anak ke-4, Namanya Mu&#39;adz, Semoga Allah Menjaganya","date":"June 18, 2024","image":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n  \n    \n      \n    \n\n\n    \n    \n\n\n    \n    \n      \n      \n    \n    \n    \n\n\n    \n    \n      \n      \n        \n        \n        \n        \n        \n        \n\n\n        \n        \n\n\n        \u003cimg\n          \n            src=\"/images/blog/baby-boy-3_hud662a70fefe445c7f048a1d93a2a9800_59702_420x0_resize_q90_h2_lanczos_3.webp\" loading=\"lazy\" decoding=\"async\"\n          \n\n          alt=\"\"\n          class=\"  img\"\n          width=\"420\"\n          height=\"236\"\n          onerror=\"this.onerror='null';this.src='\\/images\\/blog\\/baby-boy-3_hud662a70fefe445c7f048a1d93a2a9800_59702_420x0_resize_lanczos_3.png';\" /\u003e\n\n        \n      \n      \n    \n    \n  \n\n\n  \n","imageSM":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n  \n    \n      \n    \n\n\n    \n    \n\n\n    \n    \n      \n      \n    \n    \n    \n\n\n    \n    \n      \n      \n        \n        \n        \n        \n        \n        \n          \n          \n          \n          \n        \n\n\n        \n        \n\n\n        \u003cimg\n          \n            src=\"/images/blog/baby-boy-3_hud662a70fefe445c7f048a1d93a2a9800_59702_100x100_fill_q90_h2_lanczos_smart1_3.webp\" loading=\"lazy\" decoding=\"async\"\n          \n\n          alt=\"\"\n          class=\"  img\"\n          width=\"100\"\n          height=\"100\"\n          onerror=\"this.onerror='null';this.src='\\/images\\/blog\\/baby-boy-3_hud662a70fefe445c7f048a1d93a2a9800_59702_100x100_fill_lanczos_smart1_3.png';\" /\u003e\n\n        \n      \n      \n    \n    \n  \n\n\n  \n","searchKeyword":"","categories":"Life","tags":"lahiran, anak, laki-laki","content":"Alhamdulillah segala puji bagi Alloh ‘azza wa jalla atas setiap nikmat yang Ia berikan. Di pertengahan tahun 2024 ini Alloh anugerahkan kepada kami seorang anak putra, anak ke-4 kami. Jawaban dari doa-doa yang dipanjatkan walhamdulillah. Bismillah, namanya Mu\u0026rsquo;adz.\nMaa syaa Allah..\nSemoga menjadi anak yang sholihah, mentauhidkan Alloh dan menjauhi syirik, menjadi anak yang bertaqwa dan senantiasa berjalan di atas sunnah nabi shollallohu ‘alaihi wa sallam. Aamiin.\n"},{"section":"Blog","slug":"/blog/meninggalkan-musik/","title":"Di Saat Ingin Meninggalkan Musik","description":"Di Saat Ingin Meninggalkan Musik","date":"April 29, 2024","image":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n  \n    \n      \n    \n\n\n    \n    \n\n\n    \n    \n      \n      \n    \n    \n    \n\n\n    \n    \n      \n      \n        \n        \n        \n        \n        \n        \n\n\n        \n        \n\n\n        \u003cimg\n          \n            src=\"/images/blog/meninggalkan-musik_hu10fae1e0be47cca8c983375e2b5cf3d3_99906_420x0_resize_q90_h2_lanczos_3.webp\" loading=\"lazy\" decoding=\"async\"\n          \n\n          alt=\"\"\n          class=\"  img\"\n          width=\"420\"\n          height=\"236\"\n          onerror=\"this.onerror='null';this.src='\\/images\\/blog\\/meninggalkan-musik_hu10fae1e0be47cca8c983375e2b5cf3d3_99906_420x0_resize_lanczos_3.png';\" /\u003e\n\n        \n      \n      \n    \n    \n  \n\n\n  \n","imageSM":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n  \n    \n      \n    \n\n\n    \n    \n\n\n    \n    \n      \n      \n    \n    \n    \n\n\n    \n    \n      \n      \n        \n        \n        \n        \n        \n        \n          \n          \n          \n          \n        \n\n\n        \n        \n\n\n        \u003cimg\n          \n            src=\"/images/blog/meninggalkan-musik_hu10fae1e0be47cca8c983375e2b5cf3d3_99906_100x100_fill_q90_h2_lanczos_smart1_3.webp\" loading=\"lazy\" decoding=\"async\"\n          \n\n          alt=\"\"\n          class=\"  img\"\n          width=\"100\"\n          height=\"100\"\n          onerror=\"this.onerror='null';this.src='\\/images\\/blog\\/meninggalkan-musik_hu10fae1e0be47cca8c983375e2b5cf3d3_99906_100x100_fill_lanczos_smart1_3.png';\" /\u003e\n\n        \n      \n      \n    \n    \n  \n\n\n  \n","searchKeyword":"","categories":"Life","tags":"syair, musik, islam, sunnah, quran","content":"Dulu di saat terketuk ingin meninggalkan musik, banyak sekali ketakutan-ketakutan. Hidup tanpa musik, awalnya terasa masam. Namun hidup tanpanya, selanjutnya sangat jauh lebih menenangkan. Tidak ada lagi suara sedak-seduk layaknya hilang kesadaran. Tidak ada lagi syair-syair semu yang ter-ngiang. Malu rasanya mencari ketenangan kepada nyanyian. Padahal Alloh telah turunkan sebaik-baik kalam, yaitu al qur\u0026rsquo;an.\nTidak percaya? Cobalah buktikan..\nGantikan dengan al qur\u0026rsquo;an dan sunnah rosululloh shollallohu \u0026lsquo;alahi wa sallam. Hingga akhirnya paksakan diri menutup pintu masuk dan menghapus seluruh file yang menumpuk tak karuan. Berani? Mohonlah pada Alloh agar mudahkan. Banyak kisah dan pengalaman, dari seorang yang dahulunya sangat gandrung dengannya sedemikian. Kemudian Alloh mudahkan meninggalkan musik dan nyanyian.\nSemoga Alloh mudahkan. Lalu istiqomah berjalan..\n"},{"section":"Blog","slug":"/blog/kumpulan-modul-pemrograman-framework-tahap-dasar/","title":"Kumpulan Modul Belajar Dasar Pemrograman Framework Laravel","description":"Kumpulan Modul Belajar Dasar Pemrograman Framework Laravel","date":"December 25, 2023","image":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n  \n    \n      \n    \n\n\n    \n    \n\n\n    \n    \n      \n      \n    \n    \n    \n\n\n    \n    \n      \n      \n        \n        \n        \n        \n        \n        \n\n\n        \n        \n\n\n        \u003cimg\n          \n            src=\"/images/blog/pemrograman-framework_huefd15fe6c76680f4a6e5b5b6f753294a_66331_420x0_resize_q90_h2_lanczos_3.webp\" loading=\"lazy\" decoding=\"async\"\n          \n\n          alt=\"\"\n          class=\"  img\"\n          width=\"420\"\n          height=\"236\"\n          onerror=\"this.onerror='null';this.src='\\/images\\/blog\\/pemrograman-framework_huefd15fe6c76680f4a6e5b5b6f753294a_66331_420x0_resize_lanczos_3.png';\" /\u003e\n\n        \n      \n      \n    \n    \n  \n\n\n  \n","imageSM":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n  \n    \n      \n    \n\n\n    \n    \n\n\n    \n    \n      \n      \n    \n    \n    \n\n\n    \n    \n      \n      \n        \n        \n        \n        \n        \n        \n          \n          \n          \n          \n        \n\n\n        \n        \n\n\n        \u003cimg\n          \n            src=\"/images/blog/pemrograman-framework_huefd15fe6c76680f4a6e5b5b6f753294a_66331_100x100_fill_q90_h2_lanczos_smart1_3.webp\" loading=\"lazy\" decoding=\"async\"\n          \n\n          alt=\"\"\n          class=\"  img\"\n          width=\"100\"\n          height=\"100\"\n          onerror=\"this.onerror='null';this.src='\\/images\\/blog\\/pemrograman-framework_huefd15fe6c76680f4a6e5b5b6f753294a_66331_100x100_fill_lanczos_smart1_3.png';\" /\u003e\n\n        \n      \n      \n    \n    \n  \n\n\n  \n","searchKeyword":"","categories":"Technology","tags":"modul, pemrograman, framework, laravel, bootstrap","content":"Berikut ini adalah kumpulan modul belajar dasar pada topik pemrograman berbasis framework. Modul-modul ini memberikan materi bagaimana membuat sistem informasi menggunakan bahasa pemrograman PHP dengan framework Laravel. Pengetahuan tersebut selanjutnya dapat diterapkan dan dikembangkan untuk membangun atau menyediakan sebuah aplikasi sederhana berbasis web untuk menyelesaikan suatu permasalahan.\nTopik Bahasan Modul Belajar Dasar Pemrograman Berbasis Framework Laravel: Modul 01: Pengenalan Framework CSS (Bootstrap)\nKita akan mulai mempelajari tentang salah satu framework CSS yaitu Bootstrap. Penerapan fitur bootstrap diberikan dan dikemas dalam bentuk studi kasus tertentu. Kegiatan ini dilakukan agar kita mampu membangun website sederhana dengan mendayagunakan fitur-fitur bootstrap yang ada. Studi kasus yang diberikan adalah membuat atau meng-cloning website bootstrap menggunakan framework bootstrap.\nLihat Modul 01 Selengkapnya Modul 02: Pengenalan Laravel dan Konfigurasi Awal\nKita akan fokus melakukan instalasi dan setup seluruh kebutuhan untuk memulai belajar pemrograman PHP dengan framework Laravel. Mulai dari install XAMPP, Composer, sampai install sebuah project Laravel. Kegiatan ini dilakukan agar kita siap untuk belajar Laravel dengan komputer/laptop masing-masing.\nLihat Modul 02 Selengkapnya Modul 03: Routing dan Bundling Asset di Laravel\nKita akan mulai memasuki materi awal pada pembelajaran framework Laravel. Kita akan mulai belajar tentang Routing di Laravel dengan berbagai macam jenisnya. Kemudian kita akan belajar tentang bundling asset pada Laravel. Kegiatan ini dilakukan agar kita dapat menerapkan konsep routing dan manajemen asset pada framework Laravel.\nLihat Modul 03 Selengkapnya Modul 04: Pengenalan Controller dan View\nPada modul ini kita akan melanjutkan belajar tentang Controller dan View pada laravel. Materi tentang Controller dan View akan diilustrasikan dalam bentuk studi kasus sederhana secara bertahap. Kegiatan ini agar kita dapat memahami dan menerapkan penggunaan Controller dan View pada framework Laravel.\nLihat Modul 04 Selengkapnya Modul 05: Laravel Database Tahap Dasar\nPada modul ini kita akan melanjutkan belajar tentang Laravel Database. Materi tentang Laravel Database akan diilustrasikan dalam bentuk studi kasus sederhana secara bertahap. Kegiatan ini agar kita dapat memahami dan menerapkan manajemen database pada framework Laravel.\nLihat Modul 05 Selengkapnya Modul 06: Laravel Database Tahap Lanjut (Eloquent ORM \u0026amp; Blade Templates)\nPada modul ini kita akan melanjutkan belajar tentang laravel database. Materi tentang laravel database akan diilustrasikan dalam bentuk studi kasus sederhana secara bertahap. Pada modul ini kita akan fokus menerapkan Eloquent ORM pada project laravel kita dan juga melengkapi pembahasan dan penerapan blade templates pada project kita. Kegiatan ini agar kita dapat memahami dan menerapkan manajemen database pada laravel framework dan mengoptimalkan fitur yang dimiiki oleh blade templates.\nLihat Modul 06 Selengkapnya Modul 07: Version Control System (GIT dan Github)\nPada modul ini kita akan melanjutkan belajar tentang penggunaan GIT dan Github di dalam mengelola sebuah project pemrograman. Materi akan diilustrasikan dalam bentuk studi kasus. Kegiatan ini dilakukan agar kita dapat menerapkan dan mengelola kode program yang dibangun bersama tim menggunakan version control system GIT.\nLihat Modul 07 Selengkapnya Modul 08: Laravel Authentication\nPada modul ini kita akan melanjutkan belajar tentang Laravel Authentication. Kita akan mencoba menerapkan fitur login dan lain-lain pada sebuah project laravel. Kegiatan ini dilakukan agar kita dapat menerapkan fitur authentication untuk mendukung sebuah pengembangan aplikasi web berbasis laravel.\nLihat Modul 08 Selengkapnya Modul 09: Eloquent Factories \u0026amp; File Storage\nPada modul ini kita akan melanjutkan belajar tentang Laravel Factory dan File Storage. Kita akan mencoba menerapkan fitur Laravel Factory untuk men-generate data dummy ke database dan menerapkan Laravel File Storage untuk mengelola asset file pada project laravel yang dimiliki.\nLihat Modul 09 Selengkapnya Modul 10: Laravel Third Party Package\nPada modul ini kita akan melanjutkan belajar tentang bagaimana menerapkan package-package tambahan pada project laravel kita. Package tambahan yang diberikan pada modul ini adalah Laravel DataTables, Laravel Sweet Alert, Laravel Exce dan Laravel DomPdf.\nLihat Modul 10 Selengkapnya "},{"section":"Blog","slug":"/blog/laravel-packages/","title":"Modul #10 Belajar Pemrograman Framework Laravel Tahap Dasar: Laravel Third Party Packages","description":"Modul #10 Belajar Pemrograman Framework Laravel Tahap Dasar: Laravel Third Party Packages","date":"December 25, 2023","image":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n  \n    \n      \n    \n\n\n    \n    \n\n\n    \n    \n      \n      \n    \n    \n    \n\n\n    \n    \n      \n      \n        \n        \n        \n        \n        \n        \n\n\n        \n        \n\n\n        \u003cimg\n          \n            src=\"/images/blog/laravel-3rd-packages_hub7bee0027f9a2017a23673e91854b5f1_94452_420x0_resize_q90_h2_lanczos_3.webp\" loading=\"lazy\" decoding=\"async\"\n          \n\n          alt=\"\"\n          class=\"  img\"\n          width=\"420\"\n          height=\"236\"\n          onerror=\"this.onerror='null';this.src='\\/images\\/blog\\/laravel-3rd-packages_hub7bee0027f9a2017a23673e91854b5f1_94452_420x0_resize_lanczos_3.png';\" /\u003e\n\n        \n      \n      \n    \n    \n  \n\n\n  \n","imageSM":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n  \n    \n      \n    \n\n\n    \n    \n\n\n    \n    \n      \n      \n    \n    \n    \n\n\n    \n    \n      \n      \n        \n        \n        \n        \n        \n        \n          \n          \n          \n          \n        \n\n\n        \n        \n\n\n        \u003cimg\n          \n            src=\"/images/blog/laravel-3rd-packages_hub7bee0027f9a2017a23673e91854b5f1_94452_100x100_fill_q90_h2_lanczos_smart1_3.webp\" loading=\"lazy\" decoding=\"async\"\n          \n\n          alt=\"\"\n          class=\"  img\"\n          width=\"100\"\n          height=\"100\"\n          onerror=\"this.onerror='null';this.src='\\/images\\/blog\\/laravel-3rd-packages_hub7bee0027f9a2017a23673e91854b5f1_94452_100x100_fill_lanczos_smart1_3.png';\" /\u003e\n\n        \n      \n      \n    \n    \n  \n\n\n  \n","searchKeyword":"","categories":"Technology","tags":"modul, pemrograman, framework, laravel, package, datatables, sweetalert, excel, dompdf","content":" Note\nArtikel ini merupakan bagian dari: Kumpulan Modul Belajar Dasar Pemrograman Framework Laravel\nPada modul kali ini kita akan melanjutkan belajar tentang bagaimana menerapkan package-package tambahan pada project laravel kita. Package tambahan yang diberikan pada modul ini adalah Laravel DataTables, Laravel Sweet Alert, Laravel Excel dan Laravel DomPdf. Seluruh package akan diterapkan pada project laravel yang telah dibuat pada pembelajaran Modul #09 .\n1. Penerapan Laravel DataTables Edit file EmployeeSeeder untuk dapat menambahkan data dummy seperti di bawah ini. Data dummy ditambahkan menjadi sebanyak 200.\n\u0026lt;?php namespace Database\\Seeders; use App\\Models\\Employee; use Illuminate\\Database\\Seeder; class EmployeeSeeder extends Seeder { /** * Run the database seeds. */ public function run(): void { Employee::factory()-\u0026gt;count(200)-\u0026gt;create(); } } Jalankan file seeder tersebut via Artisan seperti di bawah ini.\nphp artisan db:seed --class=EmployeeSeeder 1.1 Basic DataTables Install packages Laravel DataTables via composer\ncomposer require yajra/laravel-datatables-oracle Install aset-aset DataTables yang dibutuhkan via NPM\nnpm install datatables.net-bs5 datatables.net-buttons-bs5 Registrasikan aset-aset DataTables pada file /resources/js/app.js seperti yang terlihat di bawah ini.\nimport \u0026#34;./bootstrap\u0026#34;; import \u0026#34;datatables.net-bs5\u0026#34;; import \u0026#34;datatables.net-buttons-bs5\u0026#34;; import.meta.glob([\u0026#34;../images/**\u0026#34;]); Registrasikan aset-aset DataTables pada file /resources/sass/app.scss seperti yang terlihat di bawah ini.\n// Bootstrap @import \u0026#39;bootstrap/scss/bootstrap\u0026#39;; @import \u0026#34;bootstrap-icons/font/bootstrap-icons.css\u0026#34;; // DataTables @import \u0026#34;datatables.net-bs5/css/dataTables.bootstrap5.css\u0026#34;; @import \u0026#34;datatables.net-buttons-bs5/css/buttons.bootstrap5.css\u0026#34;; Import jQuery pada file /resources/js/bootstrap.js seperti yang terlihat di bawah ini.\nimport \u0026#34;bootstrap\u0026#34;; import axios from \u0026#34;axios\u0026#34;; window.axios = axios; window.axios.defaults.headers.common[\u0026#34;X-Requested-With\u0026#34;] = \u0026#34;XMLHttpRequest\u0026#34;; import $ from \u0026#34;jquery\u0026#34;; window.$ = $; Buka file base layout pada /resources/views/layouts/app.blade.php kemudian tambahkan blade directive stack() dengan nama “scripts” seperti di bawah ini.\n\u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34; /\u0026gt; \u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;IE=edge\u0026#34; /\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;{{ $pageTitle }}\u0026lt;/title\u0026gt; @vite(\u0026#39;resources/sass/app.scss\u0026#39;) \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; @include(\u0026#39;layouts.nav\u0026#39;) @yield(\u0026#39;content\u0026#39;) @vite(\u0026#39;resources/js/app.js\u0026#39;) @stack(\u0026#39;scripts\u0026#39;) \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Buka file view pada /resources/views/employee/index.blade.php kemudian gunakan block blade directive push() untuk menambahkan kode program seperti di bawah ini.\n@push(\u0026#39;scripts\u0026#39;) \u0026lt;script type=\u0026#34;module\u0026#34;\u0026gt; $(document).ready(function() { $(\u0026#39;#employeeTable\u0026#39;).DataTable(); }); \u0026lt;/script\u0026gt; @endpush Berikan atribut id dengan nilai “employeeTable” pada elemen tag \u0026lt;table\u0026gt; seperti kode program di bawah ini.\n\u0026lt;table class=\u0026#34;table table-bordered table-hover table-striped mb-0 bg-white\u0026#34; id=\u0026#34;employeeTable\u0026#34;\u0026gt; Akses halaman Employee List via browser, jika berhasil akan muncul tampilan DataTables untuk data employee.\n1.2 Server-side Processing DataTables Buat Route baru pada /routes/web.php dengan URI /getEmployees, mengarahkan ke method getData() pada EmployeeController seperti kode program di bawah ini.\nRoute::get(\u0026#39;getEmployees\u0026#39;, [EmployeeController::class, \u0026#39;getData\u0026#39;])-\u0026gt;name(\u0026#39;employees.getData\u0026#39;); Buat method getData() pada EmployeeController seperti di bawah ini.\npublic function getData(Request $request) { $employees = Employee::with(\u0026#39;position\u0026#39;); if ($request-\u0026gt;ajax()) { return datatables()-\u0026gt;of($employees) -\u0026gt;addIndexColumn() -\u0026gt;addColumn(\u0026#39;actions\u0026#39;, function($employee) { return view(\u0026#39;employee.actions\u0026#39;, compact(\u0026#39;employee\u0026#39;)); }) -\u0026gt;toJson(); } } Sesuaikan method index() pada EmployeeController seperti kode program di bawah ini. Query eloquent untuk mengambil data employee sudah tidak diperlukan lagi karna sudah digantikan proses nya pada method getData().\npublic function index() { $pageTitle = \u0026#39;Employee List\u0026#39;; return view(\u0026#39;employee.index\u0026#39;, compact(\u0026#39;pageTitle\u0026#39;)); } Buka file view pada /resources/views/employee/index.blade.php kemudian sesuaikan kode program pada bagian tag \u0026lt;table\u0026gt; nya seperti di bawah ini. Perulangan yang ada pada tag \u0026lt;tbody\u0026gt; dihapus karna data akan diload secara asynchronous dan ditangani oleh DataTables.\n\u0026lt;table class=\u0026#34;table table-bordered table-hover table-striped mb-0 bg-white\u0026#34; id=\u0026#34;employeeTable\u0026#34; \u0026gt; \u0026lt;thead\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;th\u0026gt;ID\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;No.\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;First Name\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;Last Name\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;Email\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;Age\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;Position\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;\u0026lt;/th\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/thead\u0026gt; \u0026lt;/table\u0026gt; Buka file view pada /resources/views/employee/index.blade.php kemudian sesuaikan script DataTables nya seperti di bawah ini.\n@push(\u0026#39;scripts\u0026#39;) \u0026lt;script type=\u0026#34;module\u0026#34;\u0026gt; $(document).ready(function() { $(\u0026#34;#employeeTable\u0026#34;).DataTable({ serverSide: true, processing: true, ajax: \u0026#34;/getEmployees\u0026#34;, columns: [ { data: \u0026#34;id\u0026#34;, name: \u0026#34;id\u0026#34;, visible: false }, { data: \u0026#34;DT_RowIndex\u0026#34;, name: \u0026#34;DT_RowIndex\u0026#34;, orderable: false, searchable: false }, { data: \u0026#34;firstname\u0026#34;, name: \u0026#34;firstname\u0026#34; }, { data: \u0026#34;lastname\u0026#34;, name: \u0026#34;lastname\u0026#34; }, { data: \u0026#34;email\u0026#34;, name: \u0026#34;email\u0026#34; }, { data: \u0026#34;age\u0026#34;, name: \u0026#34;age\u0026#34; }, { data: \u0026#34;position.name\u0026#34;, name: \u0026#34;position.name\u0026#34; }, { data: \u0026#34;actions\u0026#34;, name: \u0026#34;actions\u0026#34;, orderable: false, searchable: false }, ], order: [[0, \u0026#34;desc\u0026#34;]], lengthMenu: [ [10, 25, 50, 100, -1], [10, 25, 50, 100, \u0026#34;All\u0026#34;], ], }); }); \u0026lt;/script\u0026gt; @endpush Akses halaman Employee List via browser, jika berhasil akan muncul tampilan DataTables untuk data employee dengan teknik server-side processing.\n2. Penerapan Laravel Sweet Alert Install package SweetAlert via composer.\ncomposer require realrashid/sweet-alert Buka file base layout pada /resources/views/layouts/app.blade.php kemudian tambahkan blade directive include() untuk menerapkan package SweetAlert seperti di bawah ini. Letakkan setelah vite() dan sebelum stack().\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;IE=edge\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34;\u0026gt; \u0026lt;title\u0026gt;{{ $pageTitle }}\u0026lt;/title\u0026gt; @vite(\u0026#39;resources/sass/app.scss\u0026#39;) \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; @include(\u0026#39;layouts.nav\u0026#39;) @yield(\u0026#39;content\u0026#39;) @vite(\u0026#39;resources/js/app.js\u0026#39;) @include(\u0026#39;sweetalert::alert\u0026#39;) @stack(\u0026#39;scripts\u0026#39;) \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Publish aset dari SweetAlert via Artisan.\nphp artisan sweetalert:publish Buka EmployeeController dan letakkan SweetAlert pada method store(), update() dan destroy().\nuse RealRashid\\SweetAlert\\Facades\\Alert; public function store(Request $request) { ... Alert::success(\u0026#39;Added Successfully\u0026#39;, \u0026#39;Employee Data Added Successfully.\u0026#39;); return redirect()-\u0026gt;route(\u0026#39;employees.index\u0026#39;); } use RealRashid\\SweetAlert\\Facades\\Alert; public function update(Request $request, string $id) { ... Alert::success(\u0026#39;Changed Successfully\u0026#39;, \u0026#39;Employee Data Changed Successfully.\u0026#39;); return redirect()-\u0026gt;route(\u0026#39;employees.index\u0026#39;); } use RealRashid\\SweetAlert\\Facades\\Alert; public function destroy(string $id) { ... Alert::success(\u0026#39;Deleted Successfully\u0026#39;, \u0026#39;Employee Data Deleted Successfully.\u0026#39;); return redirect()-\u0026gt;route(\u0026#39;employees.index\u0026#39;); } Buka file view pada /resources/views/employee/actions.blade.php kemudian sesuaikan kode program pada bagian tag \u0026lt;button\u0026gt;. Tambahkan class “btn-delete” dan atribut “data-name” seperti di bawah ini.\n\u0026lt;form action=\u0026#34;{{ route(\u0026#39;employees.destroy\u0026#39;, [\u0026#39;employee\u0026#39; =\u0026gt; $employee-\u0026gt;id]) }}\u0026#34; method=\u0026#34;POST\u0026#34; \u0026gt; @csrf @method(\u0026#39;delete\u0026#39;) \u0026lt;button type=\u0026#34;submit\u0026#34; class=\u0026#34;btn btn-outline-dark btn-sm me-2 btn-delete\u0026#34; data-name=\u0026#34;{{ $employee-\u0026gt;firstname.\u0026#39; \u0026#39;.$employee-\u0026gt;lastname }}\u0026#34; \u0026gt; \u0026lt;i class=\u0026#34;bi-trash\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;/form\u0026gt; Buka file view pada /resources/views/employee/index.blade.php kemudian sesuaikan kode program pada bagian tag \u0026lt;table\u0026gt;. Tambahkan class “datatable” seperti di bawah ini.\n\u0026lt;table class=\u0026#34;table table-bordered table-hover table-striped mb-0 bg-white datatable\u0026#34; id=\u0026#34;employeeTable\u0026#34;\u0026gt; Buka file view pada /resources/views/employee/index.blade.php kemudian tambahkan kode program di bawah ini pada block blade directive push() seperti di bawah ini.\n@push(\u0026#39;scripts\u0026#39;) \u0026lt;script type=\u0026#34;module\u0026#34;\u0026gt; $(document).ready(function() { ... $(\u0026#34;.datatable\u0026#34;).on(\u0026#34;click\u0026#34;, \u0026#34;.btn-delete\u0026#34;, function (e) { e.preventDefault(); var form = $(this).closest(\u0026#34;form\u0026#34;); var name = $(this).data(\u0026#34;name\u0026#34;); Swal.fire({ title: \u0026#34;Are you sure want to delete\\n\u0026#34; + name + \u0026#34;?\u0026#34;, text: \u0026#34;You won\u0026#39;t be able to revert this!\u0026#34;, icon: \u0026#34;warning\u0026#34;, showCancelButton: true, confirmButtonClass: \u0026#34;bg-primary\u0026#34;, confirmButtonText: \u0026#34;Yes, delete it!\u0026#34;, }).then((result) =\u0026gt; { if (result.isConfirmed) { form.submit(); } }); }); }); \u0026lt;/script\u0026gt; @endpush Sesuaikan method index() pada EmployeeController seperti kode program di bawah ini. Panggil method confirmDelete() milik SweetAlert.\npublic function index() { $pageTitle = \u0026#39;Employee List\u0026#39;; confirmDelete(); return view(\u0026#39;employee.index\u0026#39;, compact(\u0026#39;pageTitle\u0026#39;)); } Akses Fitur Create, Edit dan Delete Employee via browser, jika berhasil akan muncul tampilan popup window dari SweetAlert sebagai feedback sistem untuk proses yang sedang dilakukan oleh user. Contoh tampilannya seperti gambar di bawah ini.\n3. Penerapan Laravel Excel Install Laravel Excel via Composer.\ncomposer require maatwebsite/excel Publish file konfigurasi dengan menjalankan command script seperti di bawah ini.\nphp artisan vendor:publish --provider=\u0026#34;Maatwebsite\\Excel\\ExcelServiceProvider\u0026#34; --tag=config Buka file view pada /resources/views/employee/index.blade.php kemudian buat button untuk fitur export data employee menjadi Excel. Sesuaikan bagian kode program seperti di bawah ini.\n\u0026lt;div class=\u0026#34;row mb-0\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;col-lg-9 col-xl-6\u0026#34;\u0026gt; \u0026lt;h4 class=\u0026#34;mb-3\u0026#34;\u0026gt;{{ $pageTitle }}\u0026lt;/h4\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-lg-3 col-xl-6\u0026#34;\u0026gt; \u0026lt;ul class=\u0026#34;list-inline mb-0 float-end\u0026#34;\u0026gt; \u0026lt;li class=\u0026#34;list-inline-item\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;employees.exportExcel\u0026#39;) }}\u0026#34; class=\u0026#34;btn btn-outline-success\u0026#34;\u0026gt; \u0026lt;i class=\u0026#34;bi bi-download me-1\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; to Excel \u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;list-inline-item\u0026#34;\u0026gt;|\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;list-inline-item\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;employees.create\u0026#39;) }}\u0026#34; class=\u0026#34;btn btn-primary\u0026#34;\u0026gt; \u0026lt;i class=\u0026#34;bi bi-plus-circle me-1\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; Create Employee \u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; Buat Route baru pada /routes/web.php dengan URI /exportExcel, mengarahkan ke method exportExcel() pada EmployeeController seperti kode program di bawah ini.\nRoute::get(\u0026#39;exportExcel\u0026#39;, [EmployeeController::class, \u0026#39;exportExcel\u0026#39;])-\u0026gt;name(\u0026#39;employees.exportExcel\u0026#39;); Buat file Export dengan nama EmployeesExport via Artisan seperti di bawah ini. Diarahkan kepada model Employee.\nphp artisan make:export EmployeesExport --model=Employee Edit atau ubah file EmployeesExport, sesuaikan seperti di bawah ini.\n\u0026lt;?php namespace App\\Exports; use App\\Models\\Employee; use Illuminate\\Contracts\\View\\View; use Maatwebsite\\Excel\\Concerns\\FromView; use Maatwebsite\\Excel\\Concerns\\ShouldAutoSize; use Maatwebsite\\Excel\\Concerns\\WithStyles; use PhpOffice\\PhpSpreadsheet\\Worksheet\\Worksheet; class EmployeesExport implements FromView, WithStyles, ShouldAutoSize { public function styles(Worksheet $sheet) { return [ 1 =\u0026gt; [\u0026#39;font\u0026#39; =\u0026gt; [\u0026#39;bold\u0026#39; =\u0026gt; true]], ]; } public function view(): View { return view(\u0026#39;employee.export_excel\u0026#39;, [ \u0026#39;employees\u0026#39; =\u0026gt; Employee::all() ]); } } Buat file view baru dengan nama export_excel.blade.php pada direktori /resources/views/employee. Isi dengan kode program seperti di bawah ini.\n\u0026lt;table\u0026gt; \u0026lt;thead\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;th\u0026gt;No.\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;First Name\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;Last Name\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;Email\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;Age\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;Position\u0026lt;/th\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/thead\u0026gt; \u0026lt;tbody\u0026gt; @foreach ($employees as $index =\u0026gt; $employee) \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;{{ $index + 1 }}\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;{{ $employee-\u0026gt;firstname }}\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;{{ $employee-\u0026gt;lastname }}\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;{{ $employee-\u0026gt;email }}\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;{{ $employee-\u0026gt;age }}\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;{{ $employee-\u0026gt;position-\u0026gt;name }}\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; @endforeach \u0026lt;/tbody\u0026gt; \u0026lt;/table\u0026gt; Buat method exportExcel() pada EmployeeController seperti kode program di bawah ini.\nuse Maatwebsite\\Excel\\Facades\\Excel; use App\\Exports\\EmployeesExport; public function exportExcel() { return Excel::download(new EmployeesExport, \u0026#39;employees.xlsx\u0026#39;); } Akses halaman Employee List via browser, kemudian klik button “to Excel” untuk meng-export data employee ke dalam bentuk file Excel.\n4. Penerapan Laravel DomPdf Install Laravel DomPdf via Composer.\ncomposer require barryvdh/laravel-dompdf Publish file konfigurasi dengan menjalankan command script seperti di bawah ini.\nphp artisan vendor:publish --provider=\u0026#34;Barryvdh\\DomPDF\\ServiceProvider\u0026#34; Buka file view pada /resources/views/employee/index.blade.php kemudian buat button untuk fitur export data employee menjadi PDF. Sesuaikan bagian kode program seperti di bawah ini.\n\u0026lt;div class=\u0026#34;row mb-0\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;col-lg-9 col-xl-6\u0026#34;\u0026gt; \u0026lt;h4 class=\u0026#34;mb-3\u0026#34;\u0026gt;{{ $pageTitle }}\u0026lt;/h4\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-lg-3 col-xl-6\u0026#34;\u0026gt; \u0026lt;ul class=\u0026#34;list-inline mb-0 float-end\u0026#34;\u0026gt; \u0026lt;li class=\u0026#34;list-inline-item\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;employees.exportExcel\u0026#39;) }}\u0026#34; class=\u0026#34;btn btn-outline-success\u0026#34;\u0026gt; \u0026lt;i class=\u0026#34;bi bi-download me-1\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; to Excel \u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;list-inline-item\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;employees.exportPdf\u0026#39;) }}\u0026#34; class=\u0026#34;btn btn-outline-danger\u0026#34;\u0026gt; \u0026lt;i class=\u0026#34;bi bi-download me-1\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; to PDF \u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;list-inline-item\u0026#34;\u0026gt;|\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;list-inline-item\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;employees.create\u0026#39;) }}\u0026#34; class=\u0026#34;btn btn-primary\u0026#34;\u0026gt; \u0026lt;i class=\u0026#34;bi bi-plus-circle me-1\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; Create Employee \u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; Buat Route baru pada /routes/web.php dengan URI /exportPdf, mengarahkan ke method exportPdf() pada EmployeeController seperti kode program di bawah ini.\nRoute::get(\u0026#39;exportPdf\u0026#39;, [EmployeeController::class, \u0026#39;exportPdf\u0026#39;])-\u0026gt;name(\u0026#39;employees.exportPdf\u0026#39;); Buat file view baru dengan nama export_pdf.blade.php pada direktori /resources/views/employee. Isi dengan kode program seperti di bawah ini.\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34;\u0026gt; \u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;ie=edge\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Employee List\u0026lt;/title\u0026gt; \u0026lt;style\u0026gt; html { font-size: 12px; } .table { border-collapse: collapse !important; width: 100%; } .table-bordered th, .table-bordered td { padding: 0.5rem; border: 1px solid black !important; } \u0026lt;/style\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Employee List\u0026lt;/h1\u0026gt; \u0026lt;table class=\u0026#34;table table-bordered\u0026#34;\u0026gt; \u0026lt;thead\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;th\u0026gt;No.\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;First Name\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;Last Name\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;Email\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;Age\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;Position\u0026lt;/th\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/thead\u0026gt; \u0026lt;tbody\u0026gt; @foreach ($employees as $index =\u0026gt; $employee) \u0026lt;tr\u0026gt; \u0026lt;td align=\u0026#34;center\u0026#34;\u0026gt;{{ $index + 1 }}\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;{{ $employee-\u0026gt;firstname }}\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;{{ $employee-\u0026gt;lastname }}\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;{{ $employee-\u0026gt;email }}\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;center\u0026#34;\u0026gt;{{ $employee-\u0026gt;age }}\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;{{ $employee-\u0026gt;position-\u0026gt;name }}\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; @endforeach \u0026lt;/tbody\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Buat method exportPdf() pada EmployeeController seperti kode program di bawah ini.\nuse PDF; use App\\Models\\Employee; public function exportPdf() { $employees = Employee::all(); $pdf = PDF::loadView(\u0026#39;employee.export_pdf\u0026#39;, compact(\u0026#39;employees\u0026#39;)); return $pdf-\u0026gt;download(\u0026#39;employees.pdf\u0026#39;); } Akses halaman Employee List via browser, kemudian klik button “to PDF” untuk meng-export data employee ke dalam bentuk file PDF.\n5. Memindahkan dan Memisahkan Kode Javascript Kita dapat memindahkan kode javascript yang ada pada file view kita dan kita kelompokkan dengan file-file javascript pada project laravel kita.\nBuat file employee.js pada direktori /resources/js/. Hapus blok kode yang ada pada blade directive push() pada file /resources/views/index.blade.php dan pindahkan kode javascript yang ada ke file employee.js. Kode program pada file index.blade.php akan menjadi seperti di bawah ini.\n@extends(\u0026#39;layouts.app\u0026#39;) @section(\u0026#39;content\u0026#39;) \u0026lt;div class=\u0026#34;container mt-4\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;row mb-0\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;col-lg-9 col-xl-6\u0026#34;\u0026gt; \u0026lt;h4 class=\u0026#34;mb-3\u0026#34;\u0026gt;{{ $pageTitle }}\u0026lt;/h4\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-lg-3 col-xl-6\u0026#34;\u0026gt; \u0026lt;ul class=\u0026#34;list-inline mb-0 float-end\u0026#34;\u0026gt; \u0026lt;li class=\u0026#34;list-inline-item\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;employees.exportExcel\u0026#39;) }}\u0026#34; class=\u0026#34;btn btn-outline-success\u0026#34;\u0026gt; \u0026lt;i class=\u0026#34;bi bi-download me-1\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; to Excel \u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;list-inline-item\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;employees.exportPdf\u0026#39;) }}\u0026#34; class=\u0026#34;btn btn-outline-danger\u0026#34;\u0026gt; \u0026lt;i class=\u0026#34;bi bi-download me-1\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; to PDF \u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;list-inline-item\u0026#34;\u0026gt;|\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;list-inline-item\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;employees.create\u0026#39;) }}\u0026#34; class=\u0026#34;btn btn-primary\u0026#34;\u0026gt; \u0026lt;i class=\u0026#34;bi bi-plus-circle me-1\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; Create Employee \u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;hr\u0026gt; \u0026lt;div class=\u0026#34;table-responsive border p-3 rounded-3 mb-5\u0026#34;\u0026gt; \u0026lt;table class=\u0026#34;table table-bordered table-hover table-striped mb-0 bg-white datatable\u0026#34; id=\u0026#34;employeeTable\u0026#34;\u0026gt; \u0026lt;thead\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;th\u0026gt;ID\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;No.\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;First Name\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;Last Name\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;Email\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;Age\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;Position\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;\u0026lt;/th\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/thead\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; @endsection Kode program pada file employee.js akan menjadi seperti di bawah ini.\n$(function () { $(\u0026#34;#employeeTable\u0026#34;).DataTable({ serverSide: true, processing: true, ajax: \u0026#34;/getEmployees\u0026#34;, columns: [ { data: \u0026#34;id\u0026#34;, name: \u0026#34;id\u0026#34;, visible: false }, { data: \u0026#34;DT_RowIndex\u0026#34;, name: \u0026#34;DT_RowIndex\u0026#34;, orderable: false, searchable: false, }, { data: \u0026#34;firstname\u0026#34;, name: \u0026#34;firstname\u0026#34; }, { data: \u0026#34;lastname\u0026#34;, name: \u0026#34;lastname\u0026#34; }, { data: \u0026#34;email\u0026#34;, name: \u0026#34;email\u0026#34; }, { data: \u0026#34;age\u0026#34;, name: \u0026#34;age\u0026#34; }, { data: \u0026#34;position.name\u0026#34;, name: \u0026#34;position.name\u0026#34; }, { data: \u0026#34;actions\u0026#34;, name: \u0026#34;actions\u0026#34;, orderable: false, searchable: false, }, ], order: [[0, \u0026#34;desc\u0026#34;]], lengthMenu: [ [10, 25, 50, 100, -1], [10, 25, 50, 100, \u0026#34;All\u0026#34;], ], }); $(\u0026#34;.datatable\u0026#34;).on(\u0026#34;click\u0026#34;, \u0026#34;.btn-delete\u0026#34;, function (e) { e.preventDefault(); var form = $(this).closest(\u0026#34;form\u0026#34;); var name = $(this).data(\u0026#34;name\u0026#34;); Swal.fire({ title: \u0026#34;Are you sure want to delete\\n\u0026#34; + name + \u0026#34;?\u0026#34;, text: \u0026#34;You won\u0026#39;t be able to revert this!\u0026#34;, icon: \u0026#34;warning\u0026#34;, showCancelButton: true, confirmButtonClass: \u0026#34;bg-primary\u0026#34;, confirmButtonText: \u0026#34;Yes, delete it!\u0026#34;, }).then((result) =\u0026gt; { if (result.isConfirmed) { form.submit(); } }); }); }); Buka file /resources/js/app.js kemudian import file employee.js.\nimport \u0026#34;./bootstrap\u0026#34;; import \u0026#34;datatables.net-bs5\u0026#34;; import \u0026#34;datatables.net-buttons-bs5\u0026#34;; import \u0026#34;./employee\u0026#34;; import.meta.glob([\u0026#34;../images/**\u0026#34;]); Akses halaman Employee List via browser, jika berhasil seluruh fitur tetap berjalan dengan baik.\n6. Tugas Praktekkan dan analisis seluruh poin dan latihan yang ada di atas secara INDIVIDU. Note\nArtikel ini merupakan bagian dari: Kumpulan Modul Belajar Dasar Pemrograman Framework Laravel\n"},{"section":"Blog","slug":"/blog/laravel-factory-file-storage/","title":"Modul #09 Belajar Pemrograman Framework Laravel Tahap Dasar: Laravel Factory &amp; File Storage","description":"Modul #09 Belajar Pemrograman Framework Laravel Tahap Dasar: Laravel Factory &amp; File Storage","date":"December 21, 2023","image":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n  \n    \n      \n    \n\n\n    \n    \n\n\n    \n    \n      \n      \n    \n    \n    \n\n\n    \n    \n      \n      \n        \n        \n        \n        \n        \n        \n\n\n        \n        \n\n\n        \u003cimg\n          \n            src=\"/images/blog/laravel-factory-file-storage_hu833f70ee6532b98ffe40d46dca59dea1_75899_420x0_resize_q90_h2_lanczos_3.webp\" loading=\"lazy\" decoding=\"async\"\n          \n\n          alt=\"\"\n          class=\"  img\"\n          width=\"420\"\n          height=\"236\"\n          onerror=\"this.onerror='null';this.src='\\/images\\/blog\\/laravel-factory-file-storage_hu833f70ee6532b98ffe40d46dca59dea1_75899_420x0_resize_lanczos_3.png';\" /\u003e\n\n        \n      \n      \n    \n    \n  \n\n\n  \n","imageSM":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n  \n    \n      \n    \n\n\n    \n    \n\n\n    \n    \n      \n      \n    \n    \n    \n\n\n    \n    \n      \n      \n        \n        \n        \n        \n        \n        \n          \n          \n          \n          \n        \n\n\n        \n        \n\n\n        \u003cimg\n          \n            src=\"/images/blog/laravel-factory-file-storage_hu833f70ee6532b98ffe40d46dca59dea1_75899_100x100_fill_q90_h2_lanczos_smart1_3.webp\" loading=\"lazy\" decoding=\"async\"\n          \n\n          alt=\"\"\n          class=\"  img\"\n          width=\"100\"\n          height=\"100\"\n          onerror=\"this.onerror='null';this.src='\\/images\\/blog\\/laravel-factory-file-storage_hu833f70ee6532b98ffe40d46dca59dea1_75899_100x100_fill_lanczos_smart1_3.png';\" /\u003e\n\n        \n      \n      \n    \n    \n  \n\n\n  \n","searchKeyword":"","categories":"Technology","tags":"modul, pemrograman, framework, laravel, factory, file, storage","content":" Note\nArtikel ini merupakan bagian dari: Kumpulan Modul Belajar Dasar Pemrograman Framework Laravel\nPada modul kali ini kita akan melanjutkan belajar tentang Laravel Factory dan File Storage. kita akan mencoba menerapkan fitur Laravel Factory untuk men-generate data dummy ke database dan menerapkan Laravel File Storage untuk mengelola asset file pada project laravel yang dimiliki.\n1. Membuat dan Mendefinisikan Factory Buat file Factory untuk tabel positions dengan command artisan sebagai berikut:\nphp artisan make:factory PositionFactory Definisikan value setiap kolom yang dimiliki tabel positions dengan bantuan faker untuk men-generate data dummy. Sesuaikan isi function definition() seperti kode program di bawah ini.\npublic function definition(): array { return [ \u0026#39;code\u0026#39; =\u0026gt; fake()-\u0026gt;stateAbbr(), \u0026#39;name\u0026#39; =\u0026gt; fake()-\u0026gt;jobTitle(), \u0026#39;description\u0026#39; =\u0026gt; fake()-\u0026gt;sentence(), ]; } Buat file Factory untuk tabel employees dengan command artisan sebagai berikut:\nphp artisan make:factory EmployeeFactory Definisikan value setiap kolom yang dimiliki tabel employees dengan bantuan faker untuk men-generate data dummy. Sesuaikan isi function definition() seperti kode program di bawah ini.\npublic function definition(): array { return [ \u0026#39;firstname\u0026#39; =\u0026gt; fake()-\u0026gt;firstName(), \u0026#39;lastname\u0026#39; =\u0026gt; fake()-\u0026gt;lastName(), \u0026#39;email\u0026#39; =\u0026gt; fake()-\u0026gt;email(), \u0026#39;age\u0026#39; =\u0026gt; fake()-\u0026gt;numberBetween(25, 50), \u0026#39;position_id\u0026#39; =\u0026gt; Position::factory() ]; } 2. Menjalankan Factory via Seeder Buat file PositionSeeder.php kemudian generate 5 data dummy untuk tabel positions dengan menuliskan kode program seperti di bawah ini.\nPosition::factory()-\u0026gt;count(5)-\u0026gt;create(); Buat file EmployeeSeeder.php kemudian generate 10 data dummy untuk tabel employees dengan menuliskan kode program seperti di bawah ini.\nEmployee::factory()-\u0026gt;count(10)-\u0026gt;create(); Jalankan seeder yang telah disesuaikan dengan command di bawah ini.\nphp artisan db:seed 3. Meletakkan File pada Local Disk Buka file routes/web.php kemudian buat Route baru dengan kode program seperti di bawah ini. Kemudian akses Route tersebut via Browser.\nRoute::get(\u0026#39;/local-disk\u0026#39;, function() { Storage::disk(\u0026#39;local\u0026#39;)-\u0026gt;put(\u0026#39;local-example.txt\u0026#39;, \u0026#39;This is local example content\u0026#39;); return asset(\u0026#39;storage/local-example.txt\u0026#39;); }); Jika berhasil akan terbuat file dengan nama local-example.txt di folder /storage/app pada project laravel anda.\n4. Meletakkan File pada Public Disk Buat Symbolic Link yang menghubungkan antara direktori /storage/app/public dengan direktori /public/storage via command di bawah ini:\nphp artisan storage:link Buka file routes/web.php kemudian buat Route baru dengan kode program seperti di bawah ini. Kemudian akses Route tersebut via Browser.\nRoute::get(\u0026#39;/public-disk\u0026#39;, function() { Storage::disk(\u0026#39;public\u0026#39;)-\u0026gt;put(\u0026#39;public-example.txt\u0026#39;, \u0026#39;This is public example content\u0026#39;); return asset(\u0026#39;storage/public-example.txt\u0026#39;); }); Jika berhasil akan terbuat file dengan nama public-example.txt di folder /storage/app/public pada project laravel anda.\nAnda dapat mengakses file yang sudah terbuat tersebut via brower dengan URL:\nhttp://localhost:8000/storage/public-example.txt URL di atas mengakses file melalui folder /public/storage yang memiliki “symbolic link” ke direktori /storage/app/public.\n5. Menampilkan Isi File Menampilkan isi file local dengan cara buat Route baru dengan kode program di bawah ini.\nRoute::get(\u0026#39;/retrieve-local-file\u0026#39;, function() { if (Storage::disk(\u0026#39;local\u0026#39;)-\u0026gt;exists(\u0026#39;local-example.txt\u0026#39;)) { $contents = Storage::disk(\u0026#39;local\u0026#39;)-\u0026gt;get(\u0026#39;local-example.txt\u0026#39;); } else { $contents = \u0026#39;File does not exist\u0026#39;; } return $contents; }); Menampilkan isi file public dengan cara buat Route baru dengan kode program di bawah ini.\nRoute::get(\u0026#39;/retrieve-public-file\u0026#39;, function() { if (Storage::disk(\u0026#39;public\u0026#39;)-\u0026gt;exists(\u0026#39;public-example.txt\u0026#39;)) { $contents = Storage::disk(\u0026#39;public\u0026#39;)-\u0026gt;get(\u0026#39;public-example.txt\u0026#39;); } else { $contents = \u0026#39;File does not exist\u0026#39;; } return $contents; }); Akses route-route tersebut via browser lalu analisis apa yang ditampilkan pada browser.\n6. Mendownload File Mendownload file local dengan cara buat Route baru dengan kode program di bawah ini.\nRoute::get(\u0026#39;/download-local-file\u0026#39;, function() { return Storage::download(\u0026#39;local-example.txt\u0026#39;, \u0026#39;local file\u0026#39;); }); Mendownload file public dengan cara buat Route baru dengan kode program di bawah ini.\nRoute::get(\u0026#39;/download-public-file\u0026#39;, function() { return Storage::download(\u0026#39;public/public-example.txt\u0026#39;, \u0026#39;public file\u0026#39;); }); Akses route-route tersebut via browser lalu analisis apa yang ditampilkan pada browser.\n7. Menampilkan URL, Path dan Size dari File Buat route baru dengan kode program di bawah ini.\nRoute::get(\u0026#39;/file-url\u0026#39;, function() { // Just prepend \u0026#34;/storage\u0026#34; to the given path and return a relative URL $url = Storage::url(\u0026#39;local-example.txt\u0026#39;); return $url; }); Route::get(\u0026#39;/file-size\u0026#39;, function() { $size = Storage::size(\u0026#39;local-example.txt\u0026#39;); return $size; }); Route::get(\u0026#39;/file-path\u0026#39;, function() { $path = Storage::path(\u0026#39;local-example.txt\u0026#39;); return $path; }); Akses route-route tersebut via browser lalu analisis apa yang ditampilkan pada browser.\n8. Menyimpan File via Form Buat route baru dengan kode program di bawah ini.\nRoute::get(\u0026#39;/upload-example\u0026#39;, function() { return view(\u0026#39;upload_example\u0026#39;); }); Route::post(\u0026#39;/upload-example\u0026#39;, function(Request $request) { $path = $request-\u0026gt;file(\u0026#39;avatar\u0026#39;)-\u0026gt;store(\u0026#39;public\u0026#39;); return $path; })-\u0026gt;name(\u0026#39;upload-example\u0026#39;); Buat file view dengan nama upload_example.blade.php. Tulis kode program seperti di bawah ini.\n\u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34; /\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34; /\u0026gt; \u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;ie=edge\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;Upload Example\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;form action=\u0026#34;{{ route(\u0026#39;upload-example\u0026#39;) }}\u0026#34; method=\u0026#34;POST\u0026#34; enctype=\u0026#34;multipart/form-data\u0026#34; \u0026gt; @csrf \u0026lt;input type=\u0026#34;file\u0026#34; name=\u0026#34;avatar\u0026#34; /\u0026gt; \u0026lt;button type=\u0026#34;submit\u0026#34;\u0026gt;Upload\u0026lt;/button\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Akses URL /upload-example via browser, pilih salah satu file, lalu klik button Upload.\nJika berhasil maka file yang diupload akan tersimpan pada direktori /storage/app/public.\n9. Menghapus File pada Storage Buat route baru dengan kode program di bawah ini.\nRoute::get(\u0026#39;/delete-local-file\u0026#39;, function(Request $request) { Storage::disk(\u0026#39;local\u0026#39;)-\u0026gt;delete(\u0026#39;local-example.txt\u0026#39;); return \u0026#39;Deleted\u0026#39;; }); Route::get(\u0026#39;/delete-public-file\u0026#39;, function(Request $request) { Storage::disk(\u0026#39;public\u0026#39;)-\u0026gt;delete(\u0026#39;public-example.txt\u0026#39;); return \u0026#39;Deleted\u0026#39;; }); Akses route-route tersebut via browser lalu analisis apa yang terjadi.\nJika berhasil maka file yang bersangkutan akan terhapus pada project laravel anda.\n10. Menerapkan Fitur Upload pada Web Data Master Employee Buat file migration baru untuk menambahkan kolom yang digunakan menyimpan data nama file original dan yang terenkripsi. Tulis command di bawah ini:\nphp artisan make:migration add_filename_column_into_employees_table Buka file migration yang baru saja ter-generate. Tulis kode program di bawah ini untuk menambahkan 2 kolom baru dengan nama “original_filename” dan “encrypted_filename”.\n/** * Run the migrations. */ public function up(): void { Schema::table(\u0026#39;employees\u0026#39;, function (Blueprint $table) { $table-\u0026gt;string(\u0026#39;original_filename\u0026#39;)-\u0026gt;after(\u0026#39;position_id\u0026#39;)-\u0026gt;nullable(); $table-\u0026gt;string(\u0026#39;encrypted_filename\u0026#39;)-\u0026gt;after(\u0026#39;original_filename\u0026#39;)-\u0026gt;nullable(); }); } /** * Reverse the migrations. */ public function down(): void { Schema::table(\u0026#39;employees\u0026#39;, function (Blueprint $table) { $table-\u0026gt;dropColumn(\u0026#39;encrypted_filename\u0026#39;); $table-\u0026gt;dropColumn(\u0026#39;original_filename\u0026#39;); }); } Jalankan “php artisan migrate” untuk meng-eksekusi file migration yang baru saja kita buat. Jika berhasil maka akan muncul 2 kolom baru pada tabel employees di database anda.\nBuka file /views/employee/create.blade.php, sesuaikan fitur Form Create Employee dengan atribut enctype pada tag \u0026lt;form\u0026gt;.\n\u0026lt;form action=\u0026#34;{{ route(\u0026#39;employees.store\u0026#39;) }}\u0026#34; method=\u0026#34;POST\u0026#34; enctype=\u0026#34;multipart/form-data\u0026#34; \u0026gt;\u0026lt;/form\u0026gt; Tambahkan kode program di bawah ini setelah bagian yang menampilkan pilihan “Position” pada form.\n\u0026lt;div class=\u0026#34;col-md-12 mb-3\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;cv\u0026#34; class=\u0026#34;form-label\u0026#34;\u0026gt;Curriculum Vitae (CV)\u0026lt;/label\u0026gt; \u0026lt;input type=\u0026#34;file\u0026#34; class=\u0026#34;form-control\u0026#34; name=\u0026#34;cv\u0026#34; id=\u0026#34;cv\u0026#34; /\u0026gt; \u0026lt;/div\u0026gt; Buka file EmployeeController.php kemudian sesuaikan function store() seperti di bawah ini.\npublic function store(Request $request) { $messages = [ \u0026#39;required\u0026#39; =\u0026gt; \u0026#39;:Attribute harus diisi.\u0026#39;, \u0026#39;email\u0026#39; =\u0026gt; \u0026#39;Isi :attribute dengan format yang benar\u0026#39;, \u0026#39;numeric\u0026#39; =\u0026gt; \u0026#39;Isi :attribute dengan angka\u0026#39; ]; $validator = Validator::make($request-\u0026gt;all(), [ \u0026#39;firstName\u0026#39; =\u0026gt; \u0026#39;required\u0026#39;, \u0026#39;lastName\u0026#39; =\u0026gt; \u0026#39;required\u0026#39;, \u0026#39;email\u0026#39; =\u0026gt; \u0026#39;required|email\u0026#39;, \u0026#39;age\u0026#39; =\u0026gt; \u0026#39;required|numeric\u0026#39;, ], $messages); if ($validator-\u0026gt;fails()) { return redirect()-\u0026gt;back()-\u0026gt;withErrors($validator)-\u0026gt;withInput(); } // Get File $file = $request-\u0026gt;file(\u0026#39;cv\u0026#39;); if ($file != null) { $originalFilename = $file-\u0026gt;getClientOriginalName(); $encryptedFilename = $file-\u0026gt;hashName(); // Store File $file-\u0026gt;store(\u0026#39;public/files\u0026#39;); } // ELOQUENT $employee = New Employee; $employee-\u0026gt;firstname = $request-\u0026gt;firstName; $employee-\u0026gt;lastname = $request-\u0026gt;lastName; $employee-\u0026gt;email = $request-\u0026gt;email; $employee-\u0026gt;age = $request-\u0026gt;age; $employee-\u0026gt;position_id = $request-\u0026gt;position; if ($file != null) { $employee-\u0026gt;original_filename = $originalFilename; $employee-\u0026gt;encrypted_filename = $encryptedFilename; } $employee-\u0026gt;save(); return redirect()-\u0026gt;route(\u0026#39;employees.index\u0026#39;); } Jalankan fitur Form Create Employee via browser, jika berhasil maka data employee akan masuk ke database dan file CV akan tersimpan di direktori /storage/app/public/files pada project laravel anda.\nBuat route baru pada file /routes/web/php dengan menambahkan kode program seperti di bawah ini untuk operasi download file.\nRoute::get(\u0026#39;download-file/{employeeId}\u0026#39;, [EmployeeController::class, \u0026#39;downloadFile\u0026#39;])-\u0026gt;name(\u0026#39;employees.downloadFile\u0026#39;); Buka file /views/employee/show.blade.php, sesuaikan kode program seperti di bawah ini.\n@extends(\u0026#39;layouts.app\u0026#39;) @section(\u0026#39;content\u0026#39;) \u0026lt;div class=\u0026#34;container-sm my-5\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;row justify-content-center\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;p-5 bg-light rounded-3 col-xl-4 border\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;mb-3 text-center\u0026#34;\u0026gt; \u0026lt;i class=\u0026#34;bi-person-circle fs-1\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; \u0026lt;h4\u0026gt;Detail Employee\u0026lt;/h4\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;hr\u0026gt; \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;col-md-4 mb-3\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;firstName\u0026#34; class=\u0026#34;form-label\u0026#34;\u0026gt;First Name\u0026lt;/label\u0026gt; \u0026lt;h5\u0026gt;{{ $employee-\u0026gt;firstname }}\u0026lt;/h5\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-md-4 mb-3\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;lastName\u0026#34; class=\u0026#34;form-label\u0026#34;\u0026gt;Last Name\u0026lt;/label\u0026gt; \u0026lt;h5\u0026gt;{{ $employee-\u0026gt;lastname }}\u0026lt;/h5\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-md-4 mb-3\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;age\u0026#34; class=\u0026#34;form-label\u0026#34;\u0026gt;Age\u0026lt;/label\u0026gt; \u0026lt;h5\u0026gt;{{ $employee-\u0026gt;age }}\u0026lt;/h5\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-md-12 mb-3\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;email\u0026#34; class=\u0026#34;form-label\u0026#34;\u0026gt;Email\u0026lt;/label\u0026gt; \u0026lt;h5\u0026gt;{{ $employee-\u0026gt;email }}\u0026lt;/h5\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-md-12 mb-3\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;age\u0026#34; class=\u0026#34;form-label\u0026#34;\u0026gt;Position\u0026lt;/label\u0026gt; \u0026lt;h5\u0026gt;{{ $employee-\u0026gt;position-\u0026gt;name }}\u0026lt;/h5\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-md-12 mb-3\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;age\u0026#34; class=\u0026#34;form-label\u0026#34;\u0026gt;Curriculum Vitae (CV)\u0026lt;/label\u0026gt; @if ($employee-\u0026gt;original_filename) \u0026lt;h5\u0026gt;{{ $employee-\u0026gt;original_filename }}\u0026lt;/h5\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;employees.downloadFile\u0026#39;, [\u0026#39;employeeId\u0026#39; =\u0026gt; $employee-\u0026gt;id]) }}\u0026#34; class=\u0026#34;btn btn-primary btn-sm mt-2\u0026#34;\u0026gt; \u0026lt;i class=\u0026#34;bi bi-download me-1\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; Download CV \u0026lt;/a\u0026gt; @else \u0026lt;h5\u0026gt;Tidak ada\u0026lt;/h5\u0026gt; @endif \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;hr\u0026gt; \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;col-md-12 d-grid\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;employees.index\u0026#39;) }}\u0026#34; class=\u0026#34;btn btn-outline-dark btn-lg mt-3\u0026#34;\u0026gt;\u0026lt;i class=\u0026#34;bi-arrow-left-circle me-2\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; Back\u0026lt;/a\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; @endsection Buka file EmployeeController.php lalu tambahkan function downloadFile() seperti di bawah ini.\npublic function downloadFile($employeeId) { $employee = Employee::find($employeeId); $encryptedFilename = \u0026#39;public/files/\u0026#39;.$employee-\u0026gt;encrypted_filename; $downloadFilename = Str::lower($employee-\u0026gt;firstname.\u0026#39;_\u0026#39;.$employee-\u0026gt;lastname.\u0026#39;_cv.pdf\u0026#39;); if(Storage::exists($encryptedFilename)) { return Storage::download($encryptedFilename, $downloadFilename); } } Jika berhasil maka ketika anda mengakses halaman employee detail, maka akan tampilkan button “download” CV dari employee. Dan CV employee dapat di-download dengan melakukan klik pada button tersebut.\n11. Latihan Lanjutkan Fitur Edit Employee\nEdit data employee di database\nUbah file CV nya dengan cara: file CV yang sebelumnya, dihapus dari project laravel anda dan diganti dengan file CV yang baru.\nLanjutkan Fitur Hapus Employee\nHapus data employee dari database Hapus file CV nya dari project laravel anda 12. Tugas Praktekkan seluruh poin dan latihan yang ada di atas secara INDIVIDU. Note\nArtikel ini merupakan bagian dari: Kumpulan Modul Belajar Dasar Pemrograman Framework Laravel\n"},{"section":"Blog","slug":"/blog/laravel-authentication/","title":"Modul #08 Belajar Pemrograman Framework Laravel Tahap Dasar: Laravel Authentication","description":"Modul #08 Belajar Pemrograman Framework Laravel Tahap Dasar: Laravel Authentication","date":"December 19, 2023","image":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n  \n    \n      \n    \n\n\n    \n    \n\n\n    \n    \n      \n      \n    \n    \n    \n\n\n    \n    \n      \n      \n        \n        \n        \n        \n        \n        \n\n\n        \n        \n\n\n        \u003cimg\n          \n            src=\"/images/blog/laravel-authentication_hu833f70ee6532b98ffe40d46dca59dea1_62159_420x0_resize_q90_h2_lanczos_3.webp\" loading=\"lazy\" decoding=\"async\"\n          \n\n          alt=\"\"\n          class=\"  img\"\n          width=\"420\"\n          height=\"236\"\n          onerror=\"this.onerror='null';this.src='\\/images\\/blog\\/laravel-authentication_hu833f70ee6532b98ffe40d46dca59dea1_62159_420x0_resize_lanczos_3.png';\" /\u003e\n\n        \n      \n      \n    \n    \n  \n\n\n  \n","imageSM":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n  \n    \n      \n    \n\n\n    \n    \n\n\n    \n    \n      \n      \n    \n    \n    \n\n\n    \n    \n      \n      \n        \n        \n        \n        \n        \n        \n          \n          \n          \n          \n        \n\n\n        \n        \n\n\n        \u003cimg\n          \n            src=\"/images/blog/laravel-authentication_hu833f70ee6532b98ffe40d46dca59dea1_62159_100x100_fill_q90_h2_lanczos_smart1_3.webp\" loading=\"lazy\" decoding=\"async\"\n          \n\n          alt=\"\"\n          class=\"  img\"\n          width=\"100\"\n          height=\"100\"\n          onerror=\"this.onerror='null';this.src='\\/images\\/blog\\/laravel-authentication_hu833f70ee6532b98ffe40d46dca59dea1_62159_100x100_fill_lanczos_smart1_3.png';\" /\u003e\n\n        \n      \n      \n    \n    \n  \n\n\n  \n","searchKeyword":"","categories":"Technology","tags":"modul, pemrograman, framework, laravel, authentication","content":" Note\nArtikel ini merupakan bagian dari: Kumpulan Modul Belajar Dasar Pemrograman Framework Laravel\nPada modul kali ini kita akan melanjutkan belajar tentang Laravel Authentication. Kita akan mencoba menerapkan fitur login dan lain-lain pada sebuah project laravel. Kegiatan ini dilakukan agar kita dapat menerapkan fitur authentication untuk mendukung sebuah pengembangan aplikasi web berbasis laravel.\n1. Authentication via Laravel UI Buat project Laravel baru dengan command di bawah ini. Perhatikan kondisi project laravel tersebut pada bagian controllers, views, dan routes nya.\ncomposer create-project laravel/laravel laravel-project-name Kemudian masuk ke project laravel yang baru dibuat.\ncd laravel-project-name Install package Laravel UI via composer.\ncomposer require laravel/ui Generate Scafolding Bootstrap dengan fitur Authentication pada project laravel kita. Perhatikan kondisi project laravel tersebut pada bagian controllers, views, dan routes nya.\nphp artisan ui bootstrap --auth Analisis kondisi project laravel antara sebelum dan sesudah menjalankan tahapan di atas!\nJalankan project laravel tersebut via browser, akan muncul menu \u0026amp; fitur login dan register pada halaman welcome.\n2. Setup Database Jalankan service MySQL dan Apache via control panel XAMPP.\nBuat database dengan name “laravel_auth” via PhpMyAdmin.\nBuka file .env dan atur dan sesuaikan value variabel DB_DATABASE, DB_USERNAME, DB_PASSWORD.\nLakukan laravel migration.\nphp artisan migrate 3. Menjalankan Fitur Register dan Login Jalankan project laravel via browser dan coba fitur Register untuk membuat akun user baru pada sistem.\nCoba fitur Login menggunakan akun user yang baru saja dibuat.\nAnalisis alur program ketika menjalankan fitur login dan register. Bagaimana hubungan antara file-file views, controllers dan juga routes yang ada!\n4. Proses Authentication Secara Manual Buka file LoginController, tambahkan function dengan nama authenticate() menjadi seperti di bawah ini.\n\u0026lt;?php namespace App\\Http\\Controllers\\Auth; use App\\Http\\Controllers\\Controller; use App\\Providers\\RouteServiceProvider; use Illuminate\\Foundation\\Auth\\AuthenticatesUsers; use Illuminate\\Http\\Request; use Illuminate\\Support\\Facades\\Auth; class LoginController extends Controller { /* |-------------------------------------------------------------------------- | Login Controller |-------------------------------------------------------------------------- | | This controller handles authenticating users for the application and | redirecting them to your home screen. The controller uses a trait | to conveniently provide its functionality to your applications. | */ use AuthenticatesUsers; /** * Where to redirect users after login. * * @var string */ protected $redirectTo = RouteServiceProvider::HOME; /** * Create a new controller instance. * * @return void */ public function __construct() { $this-\u0026gt;middleware(\u0026#39;guest\u0026#39;)-\u0026gt;except(\u0026#39;logout\u0026#39;); } public function authenticate(Request $request) { $credentials = $request-\u0026gt;validate([ \u0026#39;email\u0026#39; =\u0026gt; [\u0026#39;required\u0026#39;, \u0026#39;email\u0026#39;], \u0026#39;password\u0026#39; =\u0026gt; [\u0026#39;required\u0026#39;], ]); if (Auth::attempt($credentials)) { $request-\u0026gt;session()-\u0026gt;regenerate(); return redirect()-\u0026gt;intended(\u0026#39;home\u0026#39;); } return back()-\u0026gt;withErrors([ \u0026#39;email\u0026#39; =\u0026gt; \u0026#39;The provided credentials do not match our records.\u0026#39;, ])-\u0026gt;onlyInput(\u0026#39;email\u0026#39;); } } Buka file routes/web.php kemudian buat route baru dan arahkan ke function authenticate() pada LoginController seperti di bawah ini.\nRoute::post(\u0026#39;/login\u0026#39;, [LoginController::class, \u0026#39;authenticate\u0026#39;]); Jalankan kembali fitur Login via Browser.\n5. Latihan Lanjutkan (bukan buat dari awal lagi) Project Laravel yang kita kerjakan pada Modul 06 (aplikasi sederhana data master employee) dengan menerapkan Laravel Authentication yang sudah dipelajari pada project laravel tersebut. Manfaatkan command Laravel UI yang ada pada php artisan di bawah ini.\nHasil akhir yang diinginkan adalah sebuah aplikasi sederhana data master employee yang telah memiliki:\nHalaman Login dan fitur Authentication (tidak ada halaman \u0026amp; fitur Register)\nHalaman Login langsung muncul atau tampil ketika user mengakses http://localhost:8000 via browser.\nMenu Logout pada bagian Navbar\nKetika berhasil login, user diarahkan ke halaman home.\nSemua halaman aplikasi hanya bisa diakses setelah login.\nBuat satu data user awal, via Seeder dengan:\nname: Administrator\nemail/username: admin@admin\npassword: adminadmin\nPassword yang disimpan di database adalah password yang terenkripsi\nGunakan method atau function bcrypt() untuk mengenkripsi text string password anda ketika akan melakukan insert data user ke database.\nbcrypt(\u0026#39;adminadmin\u0026#39;) Sesuaikan tampilan UI dengan tampilan aplikasi data master employee yang dimiliki sebelumnya.\nSimulasikan fitur Login dengan user awal tersebut dan jelaskan proses apa saja yang dilakukan.\n6. Tugas Praktekkan seluruh poin dan latihan (bab 1 - 5) yang ada di atas secara INDIVIDU. Note\nArtikel ini merupakan bagian dari: Kumpulan Modul Belajar Dasar Pemrograman Framework Laravel\n"},{"section":"Blog","slug":"/blog/version-control-system-git-github/","title":"Modul #07 Belajar Pemrograman Framework Laravel Tahap Dasar: Version Control System (Git dan Github)","description":"Modul #07 Belajar Pemrograman Framework Laravel Tahap Dasar: Version Control System (Git dan Github)","date":"December 17, 2023","image":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n  \n    \n      \n    \n\n\n    \n    \n\n\n    \n    \n      \n      \n    \n    \n    \n\n\n    \n    \n      \n      \n        \n        \n        \n        \n        \n        \n\n\n        \n        \n\n\n        \u003cimg\n          \n            src=\"/images/blog/version-control-system-git-github_hu833f70ee6532b98ffe40d46dca59dea1_61509_420x0_resize_q90_h2_lanczos_3.webp\" loading=\"lazy\" decoding=\"async\"\n          \n\n          alt=\"\"\n          class=\"  img\"\n          width=\"420\"\n          height=\"236\"\n          onerror=\"this.onerror='null';this.src='\\/images\\/blog\\/version-control-system-git-github_hu833f70ee6532b98ffe40d46dca59dea1_61509_420x0_resize_lanczos_3.png';\" /\u003e\n\n        \n      \n      \n    \n    \n  \n\n\n  \n","imageSM":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n  \n    \n      \n    \n\n\n    \n    \n\n\n    \n    \n      \n      \n    \n    \n    \n\n\n    \n    \n      \n      \n        \n        \n        \n        \n        \n        \n          \n          \n          \n          \n        \n\n\n        \n        \n\n\n        \u003cimg\n          \n            src=\"/images/blog/version-control-system-git-github_hu833f70ee6532b98ffe40d46dca59dea1_61509_100x100_fill_q90_h2_lanczos_smart1_3.webp\" loading=\"lazy\" decoding=\"async\"\n          \n\n          alt=\"\"\n          class=\"  img\"\n          width=\"100\"\n          height=\"100\"\n          onerror=\"this.onerror='null';this.src='\\/images\\/blog\\/version-control-system-git-github_hu833f70ee6532b98ffe40d46dca59dea1_61509_100x100_fill_lanczos_smart1_3.png';\" /\u003e\n\n        \n      \n      \n    \n    \n  \n\n\n  \n","searchKeyword":"","categories":"Technology","tags":"modul, pemrograman, framework, laravel, git, github","content":" Note\nArtikel ini merupakan bagian dari: Kumpulan Modul Belajar Dasar Pemrograman Framework Laravel\nPada modul kali ini kita akan melanjutkan belajar tentang penggunaan GIT dan Github di dalam mengelola sebuah project pemrograman. Materi akan diilustrasikan dalam bentuk studi kasus. Kegiatan ini dilakukan agar kita dapat menerapkan dan mengelola kode program yang dibangun bersama tim menggunakan version control system GIT.\n1. Instalasi dan Konfirgurasi GIT Download installer GIT dari https://git-scm.com/ Jalankan installer dan ikuti langkah-langkah nya seperti di bawah ini.\nUntuk memastikan GIT telah ter-install dengan baik, buka terminal dan jalankan perintah git –version, maka akan muncul seperti di bawah ini. Buka GIT Bash / cmd / terminal, konfigurasi name dan email pada GIT dengan command:\ngit config --global user.name \u0026#34;Nama Anda\u0026#34; git config --global user.email email@anda.com Jalankan perintah di bawah ini untuk memeriksa hasil konfigurasi yang baru saja dilakukan.\ngit config --list 2. Membuat Repository Baru pada Github Buka dan login pada platform https://github.com/ Pilih menu “New repository”\nIsi “Repository Name” dengan “bootstrap-clone”\nKlik “Create repository”\nAkan muncul halaman awal repository project “bootstrap-clone” yang baru saja di buat pada Github anda.\n3. Inisiasi Awal Direktori Project pada Local Computer Buat folder di local computer anda dengan nama “bootstrap-clone”\nTambahkan sebuah file dengan nama index.html pada folder yang baru saja di buat. Isikan file index.html dengan kode program seperti di bawah ini.\n\u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34; /\u0026gt; \u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;IE=edge\u0026#34; /\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;Bootstrap Clone\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Bootstrap Clone\u0026lt;/h1\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Tambahkan sebuah file dengan nama README.md pada folder yang baru saja di buat. Isikan file README.md dengan kode program seperti di bawah ini.\n# Bootstrap Clone Clone Bootstrap Homepage with Bootstrap CSS Framework 4. Arahkan Direktori Project pada Local Computer ke Github Repository Buat GIT bash / cmd / terminal, arahkan pada direktori project “bootstrap-clone” yang telah dibuat sebelumnya. Atau bisa juga buka direktori project “bootstrap-clone” pada vsCode, kemudian buka terminal baru pada vsCode tersebut.\nKetikkan perintah di bawah ini untuk melakukan inisialisasi GIT pada project “bootstrat-clone” yang baru saja dibuat.\ngit init Ketikkan perintah di bawah ini untuk melihat status direktori project “bootstrap-clone” yang baru saja dibuat dan ditambahkan file index.html dan README.md.\ngit status Ketikkan perintah di bawah ini agar GIT “men-track” semua perubahan yang terjadi pada direktori project.\ngit add . Ketikkan perintah di bawah ini agar GIT “men-commit” semua perubahan yang terjadi pada direktori project. Opsi -m kita gunakan untuk menuliskan pesan mengenai aksi apa yang telah dilakukan terkait perubahan kode program yang terjadi.\ngit commit -m \u0026#34;Inisialisasi awal\u0026#34; Ketikkan perintah di bawah ini untuk memeriksa Git anda memiliki branch apa saja dan sedang aktif pada branch apa. Pada tahapan ini akan terihat bahwa anda baru memiliki satu branch dengan nama master dan Git anda sedang aktif pada branch master tersebut.\ngit branch Ketikkan perintah di bawah ini untuk mengarahkan direktori project yang ada di local computer kita ke repository server Github yang telah dibuat sebelumnya. Sesuaikan URL Repository dengan milik anda sendiri.\ngit remote add origin https://github.com/purnamaanaking/bootstrap-clone.git Setting Personal Access Token (PAT) pada Github. Klik menu Settings \u0026gt; Developer Settings \u0026gt; Personal Access Tokens \u0026gt; Tokens (classic).\nKlik menu “Generate new token (classic)” Isi Notes dengan misal: “Personal Access”. Pilih Expiration dengan misal: “30 days”. Centang semua pada bagian Select Scopes. Klik “Generate Token”. Simpan Token yang sudah ter-generate yang nanti akan digunakan jika diminta ketika melakukan git push. Ketikkan perintah di bawah ini untuk membawa semua perubahan yang terjadi pada direktori project pada local computer kita ke repository server pada Github dan kita bawa semua perubahan itu ke branch master yang ada di repository server Github.\ngit push origin master Buka kembali halaman repository project “bootstrap-clone” pada Github anda. Maka pada tahapan ini repo Github anda telah berisi satu file index.html dan satu file README.md sesuai dengan perubahan yang anda lakukan pada direktori project di local computer anda.\n5. Menyalin Project yang Sudah Ada pada Repository Github Hapus direktori project “bootstrap-clone” yang ada di local computer anda.\nKemudian “clone” kembali project tersebut ke local computer anda dari project yang sudah ada di Repository Github.\nBuka halaman repository “bootstrap-clone” pada Github. Masuk ke halaman Settings. Atur pada bagian Default Branch, arahkan ke branch master. Jika Default Branch kita arahkan ke branch master, maka ketika kita melakukan “clone” kode program, yang disalin dari remote repository Github nya adalah kode program yang ada pada branch master.\nBuka halaman repository “bootstrap-clone” pada Github. Dapatkan URL Remote Repository anda dengan klik tombol “Code” lihat pada bagian “HTTPS”.\nBuka Git Bash / cmd / terminal, arahkan pada folder tertentu yang anda inginkan, kemudian ketikkan perintah di bawah ini untuk melakukan “clone” ke local computer kita. Sesuaikan URL remote repository dengan milik anda sendiri.\ngit clone https://github.com/purnamaanaking/bootstrap-clone.git Jika berhasil maka akan muncul kembali direktori “bootstrap-clone” pada local computer anda yang telah terhubung dengan remote repository pada Github.\n6. Buat Percabangan (Branch) Baru untuk Kegiatan Develop Kode Program Buka vsCode dan arahkan pada direktori “bootstrap-clone” yang ada di local computer anda dan buka terminal vsCode pada direktori tersebut.\nKetikkan perintah di bawah ini untuk membuat branch baru dengan nama “develop” yang nantinya akan digunakan sebagai branch aktif untuk men-develop kode program selanjutnya.\ngit branch develop Ketikkan perintah di bawah ini untuk memeriksa branch apa saja yang ada pada GIT di local computer kita. Pada tahapan ini akan tampak bahwa ada 2 branch yaitu branch master dan branch develop.\ngit branch Ketikkan perintah di bawah ini untuk memerintahkan GIT untuk aktif pada branch “develop” yang baru saja dibuat.\ngit checkout develop Lakukan kegiatan develop / perubahan kode program sehingga menghasikan struktur direktori project “bootstrap-clone” seperti di bawah ini.\nTuliskan kode program di bawah ini pada file style.css.\n.bg-purple { background-color: #7533f9 !important; } #main a { color: gray; } #main a:hover { color: rgb(73, 73, 73); } #footer a { text-decoration: none; color: black; } #footer a:hover { text-decoration: underline; color: var(--bs-primary) !important; } Tuliskan kode program di bawah ini pada file index.html.\n\u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34; /\u0026gt; \u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;IE=edge\u0026#34; /\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;Bootstrap Clone\u0026lt;/title\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha2/dist/css/bootstrap.min.css\u0026#34; /\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://cdn.jsdelivr.net/npm/bootstrap-icons@1.6.0/font/bootstrap-icons.css\u0026#34; /\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;assets/css/style.css\u0026#34; /\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;!-- Navbar --\u0026gt; \u0026lt;nav class=\u0026#34;navbar fixed-top navbar-expand-lg bg-purple\u0026#34; data-bs-theme=\u0026#34;dark\u0026#34; \u0026gt; \u0026lt;!-- Container --\u0026gt; \u0026lt;div class=\u0026#34;container py-2 px-4\u0026#34;\u0026gt; \u0026lt;!-- Navbar Brand --\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34; class=\u0026#34;navbar-brand mb-0 h1\u0026#34;\u0026gt; \u0026lt;img class=\u0026#34;img-fluid\u0026#34; src=\u0026#34;assets/images/logo-white.svg\u0026#34; alt=\u0026#34;logo\u0026#34; style=\u0026#34;width: 40px;\u0026#34; /\u0026gt; \u0026lt;/a\u0026gt; \u0026lt;!-- Navbar Toggler --\u0026gt; \u0026lt;button type=\u0026#34;button\u0026#34; class=\u0026#34;navbar-toggler\u0026#34; data-bs-toggle=\u0026#34;offcanvas\u0026#34; data-bs-target=\u0026#34;#offcanvasNavbar\u0026#34; \u0026gt; \u0026lt;span class=\u0026#34;navbar-toggler-icon\u0026#34;\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;!-- Offcanvas --\u0026gt; \u0026lt;div class=\u0026#34;offcanvas offcanvas-end bg-purple\u0026#34; id=\u0026#34;offcanvasNavbar\u0026#34;\u0026gt; \u0026lt;!-- Offcanvas Header --\u0026gt; \u0026lt;div class=\u0026#34;offcanvas-header pb-0 px-4\u0026#34;\u0026gt; \u0026lt;h5 class=\u0026#34;offcanvas-title text-white\u0026#34; id=\u0026#34;offcanvasNavbarLabel\u0026#34;\u0026gt; Bootstrap \u0026lt;/h5\u0026gt; \u0026lt;button type=\u0026#34;button\u0026#34; class=\u0026#34;btn-close\u0026#34; data-bs-dismiss=\u0026#34;offcanvas\u0026#34; aria-label=\u0026#34;Close\u0026#34; \u0026gt;\u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;!-- Offcanvas Body --\u0026gt; \u0026lt;div class=\u0026#34;offcanvas-body pt-0 px-4\u0026#34;\u0026gt; \u0026lt;hr class=\u0026#34;d-lg-none text-white-50\u0026#34; /\u0026gt; \u0026lt;!-- Horizontal Line --\u0026gt; \u0026lt;!-- Top Menu --\u0026gt; \u0026lt;ul class=\u0026#34;navbar-nav flex-row flex-wrap\u0026#34;\u0026gt; \u0026lt;li class=\u0026#34;nav-item col-6 col-lg-auto\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34; class=\u0026#34;nav-link active\u0026#34;\u0026gt;Docs\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;nav-item col-6 col-lg-auto\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34; class=\u0026#34;nav-link\u0026#34;\u0026gt;Examples\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;nav-item col-6 col-lg-auto\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34; class=\u0026#34;nav-link\u0026#34;\u0026gt;Icons\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;nav-item col-6 col-lg-auto\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34; class=\u0026#34;nav-link\u0026#34;\u0026gt;Themes\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;nav-item col-6 col-lg-auto\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34; class=\u0026#34;nav-link\u0026#34;\u0026gt;Blog\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;hr class=\u0026#34;d-lg-none text-white-50\u0026#34; /\u0026gt; \u0026lt;!-- Horizontal Line --\u0026gt; \u0026lt;!-- Sosial Media --\u0026gt; \u0026lt;ul class=\u0026#34;navbar-nav flex-row flex-wrap ms-md-auto\u0026#34;\u0026gt; \u0026lt;li class=\u0026#34;nav-item col-6 col-lg-auto\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34; class=\u0026#34;nav-link active\u0026#34;\u0026gt; \u0026lt;i class=\u0026#34;bi-github\u0026#34;\u0026gt;\u0026lt;/i \u0026gt;\u0026lt;small class=\u0026#34;ms-2 d-lg-none\u0026#34;\u0026gt;Github\u0026lt;/small\u0026gt; \u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;nav-item col-6 col-lg-auto\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34; class=\u0026#34;nav-link active\u0026#34;\u0026gt; \u0026lt;i class=\u0026#34;bi-twitter\u0026#34;\u0026gt;\u0026lt;/i \u0026gt;\u0026lt;small class=\u0026#34;ms-2 d-lg-none\u0026#34;\u0026gt;Twitter\u0026lt;/small\u0026gt; \u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;nav-item col-6 col-lg-auto\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34; class=\u0026#34;nav-link active\u0026#34;\u0026gt; \u0026lt;i class=\u0026#34;bi-slack\u0026#34;\u0026gt;\u0026lt;/i \u0026gt;\u0026lt;small class=\u0026#34;ms-2 d-lg-none\u0026#34;\u0026gt;Slack\u0026lt;/small\u0026gt; \u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;nav-item col-12 col-lg-auto\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;vr d-none d-lg-flex h-100 mx-lg-2 text-white\u0026#34; \u0026gt;\u0026lt;/div\u0026gt; \u0026lt;hr class=\u0026#34;d-lg-none my-2 text-white-50\u0026#34; /\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;nav-item\u0026#34;\u0026gt; \u0026lt;!-- Dropdown --\u0026gt; \u0026lt;div class=\u0026#34;dropdown\u0026#34; data-bs-theme=\u0026#34;light\u0026#34;\u0026gt; \u0026lt;button type=\u0026#34;button\u0026#34; class=\u0026#34;btn nav-link text-white dropdown-toggle\u0026#34; data-bs-toggle=\u0026#34;dropdown\u0026#34; aria-expanded=\u0026#34;false\u0026#34; \u0026gt; \u0026lt;span class=\u0026#34;d-lg-none\u0026#34;\u0026gt;Bootstrap\u0026lt;/span\u0026gt; v5.3 \u0026lt;/button\u0026gt; \u0026lt;ul class=\u0026#34;dropdown-menu dropdown-menu-end\u0026#34;\u0026gt; \u0026lt;li\u0026gt;\u0026lt;h6 class=\u0026#34;dropdown-header\u0026#34;\u0026gt;v5 releases\u0026lt;/h6\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;button class=\u0026#34;dropdown-item active bg-purple\u0026#34; type=\u0026#34;button\u0026#34; \u0026gt; \u0026lt;small\u0026gt;Latest (5.3.x) \u0026lt;i class=\u0026#34;bi-check\u0026#34;\u0026gt;\u0026lt;/i\u0026gt;\u0026lt;/small\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;button class=\u0026#34;dropdown-item\u0026#34; type=\u0026#34;button\u0026#34;\u0026gt; \u0026lt;small\u0026gt;v5.2.3\u0026lt;/small\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;button class=\u0026#34;dropdown-item\u0026#34; type=\u0026#34;button\u0026#34;\u0026gt; \u0026lt;small\u0026gt;v5.1.3\u0026lt;/small\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;button class=\u0026#34;dropdown-item\u0026#34; type=\u0026#34;button\u0026#34;\u0026gt; \u0026lt;small\u0026gt;v5.0.2\u0026lt;/small\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;hr class=\u0026#34;dropdown-divider\u0026#34; /\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;h6 class=\u0026#34;dropdown-header\u0026#34;\u0026gt;Previous releases\u0026lt;/h6\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;button class=\u0026#34;dropdown-item\u0026#34; type=\u0026#34;button\u0026#34;\u0026gt; \u0026lt;small\u0026gt;v4.6.x\u0026lt;/small\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;button class=\u0026#34;dropdown-item\u0026#34; type=\u0026#34;button\u0026#34;\u0026gt; \u0026lt;small\u0026gt;v3.4.1\u0026lt;/small\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;button class=\u0026#34;dropdown-item\u0026#34; type=\u0026#34;button\u0026#34;\u0026gt; \u0026lt;small\u0026gt;v2.3.2\u0026lt;/small\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;hr class=\u0026#34;dropdown-divider\u0026#34; /\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;button class=\u0026#34;dropdown-item\u0026#34; type=\u0026#34;button\u0026#34;\u0026gt; \u0026lt;small\u0026gt;All versions\u0026lt;/small\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;nav-item col-12 col-lg-auto\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;vr d-none d-lg-flex h-100 mx-lg-2 text-white\u0026#34; \u0026gt;\u0026lt;/div\u0026gt; \u0026lt;hr class=\u0026#34;d-lg-none my-2 text-white-50\u0026#34; /\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;nav-item\u0026#34;\u0026gt; \u0026lt;!-- Dropdown --\u0026gt; \u0026lt;div class=\u0026#34;dropdown\u0026#34; data-bs-theme=\u0026#34;light\u0026#34;\u0026gt; \u0026lt;button type=\u0026#34;button\u0026#34; class=\u0026#34;btn nav-link text-white dropdown-toggle\u0026#34; data-bs-toggle=\u0026#34;dropdown\u0026#34; aria-expanded=\u0026#34;false\u0026#34; \u0026gt; \u0026lt;i class=\u0026#34;bi-brightness-high-fill\u0026#34;\u0026gt;\u0026lt;/i \u0026gt;\u0026lt;span class=\u0026#34;d-lg-none\u0026#34;\u0026gt;Toggle theme\u0026lt;/span\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;ul class=\u0026#34;dropdown-menu dropdown-menu-end\u0026#34;\u0026gt; \u0026lt;li\u0026gt; \u0026lt;button class=\u0026#34;dropdown-item active bg-purple\u0026#34; type=\u0026#34;button\u0026#34; \u0026gt; \u0026lt;small \u0026gt;\u0026lt;i class=\u0026#34;bi-brightness-high-fill me-2\u0026#34;\u0026gt;\u0026lt;/i \u0026gt;Light\u0026lt;/small \u0026gt; \u0026lt;/button\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;button class=\u0026#34;dropdown-item\u0026#34; type=\u0026#34;button\u0026#34;\u0026gt; \u0026lt;small \u0026gt;\u0026lt;i class=\u0026#34;bi-moon-stars-fill me-2\u0026#34;\u0026gt;\u0026lt;/i\u0026gt;Dark\u0026lt;/small \u0026gt; \u0026lt;/button\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;button class=\u0026#34;dropdown-item\u0026#34; type=\u0026#34;button\u0026#34;\u0026gt; \u0026lt;small\u0026gt;\u0026lt;i class=\u0026#34;bi-circle-half me-2\u0026#34;\u0026gt;\u0026lt;/i\u0026gt;Auto\u0026lt;/small\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/nav\u0026gt; \u0026lt;!-- Main --\u0026gt; \u0026lt;div class=\u0026#34;bg-light mt-5\u0026#34; id=\u0026#34;main\u0026#34;\u0026gt; \u0026lt;!-- Container --\u0026gt; \u0026lt;div class=\u0026#34;container py-5 px-4\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;col-md-5 order-md-2\u0026#34;\u0026gt; \u0026lt;img class=\u0026#34;img-fluid\u0026#34; src=\u0026#34;assets/images/main.svg\u0026#34; alt=\u0026#34;main logo\u0026#34; /\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-md-7 order-md-1\u0026#34;\u0026gt; \u0026lt;h1 class=\u0026#34;mt-4 display-3\u0026#34;\u0026gt; Build fast, responsive sites with Bootstrap \u0026lt;/h1\u0026gt; \u0026lt;p class=\u0026#34;fs-5 mt-3\u0026#34;\u0026gt; Quickly design and customize responsive mobile-first sites with Bootstrap, the world\u0026#39;s most popular front-end open source toolkit, featuring Sass variables and mixins, responsive grid system, extensive prebuilt components, and powerful JavaScript plugins. \u0026lt;/p\u0026gt; \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;d-flex flex-column flex-md-row\u0026#34;\u0026gt; \u0026lt;button type=\u0026#34;button\u0026#34; class=\u0026#34;btn bg-purple text-white btn-lg mb-3 me-md-3 px-4 py-3\u0026#34; \u0026gt; Get Started \u0026lt;/button\u0026gt; \u0026lt;button type=\u0026#34;button\u0026#34; class=\u0026#34;btn btn-outline-dark btn-lg mb-3 px-4 py-3\u0026#34; \u0026gt; Download \u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;text-muted\u0026#34;\u0026gt; Currently \u0026lt;strong\u0026gt;v5.3.0-alpha2.\u0026lt;/strong\u0026gt; · \u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;v4.6.x docs\u0026lt;/a\u0026gt; · \u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;All releases\u0026lt;/a\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;!-- Bootstrap Icons --\u0026gt; \u0026lt;div id=\u0026#34;bs-icons\u0026#34;\u0026gt; \u0026lt;!-- Container --\u0026gt; \u0026lt;div class=\u0026#34;container py-5 px-4\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;col-lg-6\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;mb-3\u0026#34;\u0026gt; \u0026lt;i class=\u0026#34;bi bi-subtract fs-2 bg-warning py-2 px-3 rounded-3 text-white\u0026#34; \u0026gt;\u0026lt;/i\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;h2 class=\u0026#34;display-5 mb-3\u0026#34;\u0026gt; Personalize it with \u0026lt;br /\u0026gt;Bootstrap Icons \u0026lt;/h2\u0026gt; \u0026lt;p class=\u0026#34;fs-5\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Bootstrap Icons\u0026lt;/a\u0026gt; is an open source SVG icon library featuring over 1,800 glyphs, with more added every release. They\u0026#39;re designed to work in any project, whether you use Bootstrap itself or not. Use them as SVGs or icon fonts--both options give you vector scaling and easy customization via CSS. \u0026lt;/p\u0026gt; \u0026lt;a class=\u0026#34;icon-link icon-link-hover lead fw-semibold mb-5\u0026#34; href=\u0026#34;#\u0026#34; \u0026gt; Get Bootstrap Icons \u0026lt;i class=\u0026#34;bi bi-arrow-right mb-2\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; \u0026lt;/a\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-lg-6\u0026#34;\u0026gt; \u0026lt;img class=\u0026#34;img-fluid\u0026#34; src=\u0026#34;assets/images/bs-icons.png\u0026#34; alt=\u0026#34;Bootstrap Icons\u0026#34; /\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;!-- Bootstrap Official Themes --\u0026gt; \u0026lt;div id=\u0026#34;bs-themes\u0026#34;\u0026gt; \u0026lt;!-- Container --\u0026gt; \u0026lt;div class=\u0026#34;container py-5 px-4\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;col-lg-6\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;mb-3 mt-5\u0026#34;\u0026gt; \u0026lt;i class=\u0026#34;bi bi-droplet-fill fs-2 bg-info py-2 px-3 rounded-3 text-white\u0026#34; \u0026gt;\u0026lt;/i\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;h2 class=\u0026#34;display-5\u0026#34;\u0026gt; Make it yours with official Bootstrap Themes \u0026lt;/h2\u0026gt; \u0026lt;p class=\u0026#34;fs-5\u0026#34;\u0026gt; Take Bootstrap to the next level with premium themes from the \u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;official Bootstrap Themes marketplace\u0026lt;/a\u0026gt;. Themes are built on Bootstrap as their own extended frameworks, rich with new components and plugins, documentation, and powerful build tools. \u0026lt;/p\u0026gt; \u0026lt;a class=\u0026#34;icon-link icon-link-hover lead fw-semibold mb-5\u0026#34; href=\u0026#34;#\u0026#34; \u0026gt; Browse Bootstrap Themes \u0026lt;i class=\u0026#34;bi bi-arrow-right mb-2\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; \u0026lt;/a\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-lg-6\u0026#34;\u0026gt; \u0026lt;img class=\u0026#34;img-fluid\u0026#34; src=\u0026#34;assets/images/bs-themes.png\u0026#34; alt=\u0026#34;Bootstrap Themes\u0026#34; /\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;!-- Footer --\u0026gt; \u0026lt;div id=\u0026#34;footer\u0026#34; class=\u0026#34;bg-light py-5\u0026#34;\u0026gt; \u0026lt;!-- Container --\u0026gt; \u0026lt;div class=\u0026#34;container py-5 px-4\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;col-lg-3 mb-5\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34; class=\u0026#34;logo text-decoration-none\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;d-flex\u0026#34;\u0026gt; \u0026lt;img class=\u0026#34;img-fluid\u0026#34; src=\u0026#34;assets/images/logo-black.svg\u0026#34; alt=\u0026#34;Bootstrap Logo\u0026#34; style=\u0026#34;width: 40px;\u0026#34; /\u0026gt; \u0026lt;div class=\u0026#34;fs-5 ms-2 text-black\u0026#34;\u0026gt;Bootstrap\u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/a\u0026gt; \u0026lt;div class=\u0026#34;mt-2 text-muted\u0026#34;\u0026gt; \u0026lt;small \u0026gt;Designed and built with all the love in the world by the \u0026lt;a href=\u0026#34;#\u0026#34; class=\u0026#34;text-black\u0026#34;\u0026gt;Bootstrap team\u0026lt;/a\u0026gt; with the help of \u0026lt;a href=\u0026#34;#\u0026#34; class=\u0026#34;text-black\u0026#34;\u0026gt;our contributors\u0026lt;/a\u0026gt;.\u0026lt;/small \u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;mt-2 text-muted\u0026#34;\u0026gt; \u0026lt;small \u0026gt;Code licensed \u0026lt;a href=\u0026#34;#\u0026#34; class=\u0026#34;text-black\u0026#34;\u0026gt;MIT\u0026lt;/a\u0026gt;, docs \u0026lt;a href=\u0026#34;#\u0026#34; class=\u0026#34;text-black\u0026#34;\u0026gt;CC BY 3.0\u0026lt;/a\u0026gt;.\u0026lt;/small \u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;mt-2 text-muted\u0026#34;\u0026gt; \u0026lt;small\u0026gt;Currently v5.3.0-alpha2.\u0026lt;/small\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-6 col-lg-2 offset-lg-1 mb-5\u0026#34;\u0026gt; \u0026lt;h5\u0026gt;Links\u0026lt;/h5\u0026gt; \u0026lt;ul class=\u0026#34;list-unstyled\u0026#34;\u0026gt; \u0026lt;li class=\u0026#34;mb-2\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Home\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;mb-2\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Docs\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;mb-2\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Examples\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;mb-2\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Icons\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;mb-2\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Themes\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;mb-2\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Blog\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;mb-2\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Swag Store\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-6 col-lg-2 mb-5\u0026#34;\u0026gt; \u0026lt;h5\u0026gt;Guides\u0026lt;/h5\u0026gt; \u0026lt;ul class=\u0026#34;list-unstyled\u0026#34;\u0026gt; \u0026lt;li class=\u0026#34;mb-2\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Getting started\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;mb-2\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Starter template\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;mb-2\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Webpack\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;mb-2\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Parcel\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-6 col-lg-2 mb-5\u0026#34;\u0026gt; \u0026lt;h5\u0026gt;Projects\u0026lt;/h5\u0026gt; \u0026lt;ul class=\u0026#34;list-unstyled\u0026#34;\u0026gt; \u0026lt;li class=\u0026#34;mb-2\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Bootstrap 5\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;mb-2\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Bootstrap 4\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;mb-2\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Icons\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;mb-2\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;RFS\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;mb-2\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;npm starter\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-6 col-lg-2 mb-5\u0026#34;\u0026gt; \u0026lt;h5\u0026gt;Community\u0026lt;/h5\u0026gt; \u0026lt;ul class=\u0026#34;list-unstyled\u0026#34;\u0026gt; \u0026lt;li class=\u0026#34;mb-2\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Issues\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;mb-2\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Discussions\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;mb-2\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Corporate sponsors\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;mb-2\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Open Collective\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;mb-2\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Slack\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;mb-2\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Stack overflow\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha2/dist/js/bootstrap.bundle.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 7. Bawa Perubahan Kode Program ke Remote Repository Github Ketikkan perintah di bawah ini untuk melihat status direktori project “bootstrap-clone” anda dan perubahan apa saja yang terjadi pada direktori tersebut.\ngit status Ketikkan perintah di bawah ini agar GIT “men-track” semua perubahan yang terjadi pada direktori project.\ngit add . Ketikkan perintah di bawah ini agar GIT “men-commit” semua perubahan yang terjadi pada direktori project. Opsi -m kita gunakan untuk menuliskan pesan mengenai aksi apa yang telah dilakukan terkait perubahan kode program yang terjadi.\ngit commit -m \u0026#34;Finalisasi clone halaman utama website bootstrap\u0026#34; Ketikkan perintah di bawah ini untuk membawa semua perubahan yang terjadi pada direktori project pada local computer kita ke repository server pada Github dan kita bawa semua perubahan itu ke branch develop pada repository server Github.\ngit push origin develop Pada tahapan ini, jika kita buka halaman respository project “bootstrap-clone” pada Github kita, akan terlihat ada 2 branch yaitu master dan develop. Dua branch tersebut memiliki 2 versi kode program yang berbeda.\nBranch master: berisi file index.html dan README.md saja\nBranch develop: berisi direktori dan file-file terbaru yang telah ditambahkan pada branch develop di local computer kita.\n8. Buat Pull Request untuk Kegiatan Code Review dan Merge ke Branch Utama Pada tahapan ini kita ingin versi kode program yang ada pada percabangan (branch) develop digabungkan (merge) ke branch master, melalui kegiatan “code review” dengan membuat sebuah “pull request” pada github.\nBuka halaman repository “bootstrap-clone” pada Github anda. Masuk ke menu Pull Request \u0026gt; New pull request. Arahkan bahwa kita ingin melakukan pull request dari branch develop ke branch master seperti di bawah ini.\nKlik “Create pull request”, maka akan muncul form “Open a pull request” seperti di bawah ini. Anda bisa memberikan comment yang nanti dapat dibaca oleh code reviewer nantinya.\nKlik “Create pull request” kembali untuk men-submit sebuah Pull Request.\nCode Reviewer dapat melakukan review dari Pull Request yang diajukan. Jika dianggap telah sesuai, Klik “Merge pull request” lalu “Merge” untuk menggabungkan atau mensinkronkan kode program dari branch develop ke branch master.\nPada tahapan ini di remote repository Github, maka branch master telah memiliki kode program yang sama dengan branch develop.\n9. Mengambil Kode Program Terbaru dari Remote Repository Github Ketikkan perintah di bawah ini untuk memeriksa Git anda memiliki branch apa saja dan sedang aktif pada branch apa.\ngit branch Pada tahapan ini di local computer kita ada 2 branch yaitu branch master dan develop. Dengan kondisi sebagai berikut:\nBranch master: berisi file index.html dan README.md saja Branch develop: berisi direktori dan file-file terbaru yang telah ditambahkan pada branch develop di local computer kita. Kita bisa memeriksanya dengan berpindah-pindah branch dengan perintah git checkout.\nKetikkan perintah di bawah ini untuk memindahkan GIT di local computer kita agar aktif pada branch master.\ngit checkout master Kita akan temukan bahwa branch master di local computer kita belum berada pada kondisi update / terbaru / tidak sama / tidak sesuai dengan kondisi branch master yang ada pada remote repository Github.\nKetikkan perintah di bawah ini untuk menarik kode program dari branch master pada remote repository Github ke branch master yang ada di local computer kita.\ngit pull origin master Pada tahapan ini kondisi branch master dan branch develop pada local computer kita telah sama dengan branch master dan branch develop pada remote repository Github kita.\nMaka perintah git pull juga bisa kita gunakan untuk menarik kode program ketika ada anggota tim lain yang melakukan perubahan kode program dan telah membawa perubahan tersebut ke remote repository Github.\n10. Latihan Bentuk kelompok yang terdiri dari 4 orang (kelompok yang sama untuk final project UAS nanti). Terapkan kolaborasi antar anggota tim menggunakan GIT dan Github untuk membuat project laravel yang kita kerjakan pada modul 06 kemarin. Orang A membuat repository baru pada github dan melakukan inisialisasi awal direktori project laravel pada local computer sampai mengarahkan direktori project ke github repository (seperti bab 2-4 pada modul ini). Orang B, C, dan D menyalin project yang sudah dibuat Orang A pada Repository Github (seperti bab 5 pada modul ini). Orang A, B, C, dan D membagi tugas masing-masing untuk membuat kode program pada project yang telah ter-setup dengan GIT dan Github tersebut (seperti bab 6 - 7 pada modul ini). Orang A bekerja pada branch “nama-orang-a”, men-develop kode program bagian tertentu. Orang B bekerja pada branch “nama-orang-b”, men-develop kode program bagian tertentu lainnya. Orang C bekerja pada branch “nama-orang-c”, men-develop kode program bagian tertentu lainnya. Orang D bekerja pada branch “nama-orang-d”, men-develop kode program bagian tertentu lainnya. Jika telah selesai men-develop kode program, setiap orang melakukan Pull Request dari masing-masing branch ke branch master via Github (bab 8 pada modul ini). Lakukan kegiatan code review lalu merge kode program jika telah sesuai. Setiap orang memindahkan branch aktif nya ke branch master pada local computer masing-masing, kemudian tarik (pull) kode program terbaru yang ada di branch master pada remote repository github. Setiap orang memiliki kode program versi terbaru yang dikerjakan bersama-sama dengan GIT dan dapat menjalankan project laravel tersebut pada local computer masing-masing. 11. Tugas Praktekkan seluruh poin (bab 1 - 9) yang ada di atas secara INDIVIDU. Praktekkan poin latihan (bab 10) yang ada di atas secara BERKELOMPOK. Note\nArtikel ini merupakan bagian dari: Kumpulan Modul Belajar Dasar Pemrograman Framework Laravel\n"},{"section":"Blog","slug":"/blog/laravel-database-tahap-lanjut/","title":"Modul #06 Belajar Pemrograman Framework Laravel Tahap Dasar: Laravel Database Tahap Lanjut","description":"Modul #06 Belajar Pemrograman Framework Laravel Tahap Dasar: Laravel Database Tahap Lanjut","date":"December 14, 2023","image":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n  \n    \n      \n    \n\n\n    \n    \n\n\n    \n    \n      \n      \n    \n    \n    \n\n\n    \n    \n      \n      \n        \n        \n        \n        \n        \n        \n\n\n        \n        \n\n\n        \u003cimg\n          \n            src=\"/images/blog/laravel-database-tahap-lanjut_hu64797f2c9f1ed98be25d660226cef36b_62086_420x0_resize_q90_h2_lanczos_3.webp\" loading=\"lazy\" decoding=\"async\"\n          \n\n          alt=\"\"\n          class=\"  img\"\n          width=\"420\"\n          height=\"236\"\n          onerror=\"this.onerror='null';this.src='\\/images\\/blog\\/laravel-database-tahap-lanjut_hu64797f2c9f1ed98be25d660226cef36b_62086_420x0_resize_lanczos_3.png';\" /\u003e\n\n        \n      \n      \n    \n    \n  \n\n\n  \n","imageSM":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n  \n    \n      \n    \n\n\n    \n    \n\n\n    \n    \n      \n      \n    \n    \n    \n\n\n    \n    \n      \n      \n        \n        \n        \n        \n        \n        \n          \n          \n          \n          \n        \n\n\n        \n        \n\n\n        \u003cimg\n          \n            src=\"/images/blog/laravel-database-tahap-lanjut_hu64797f2c9f1ed98be25d660226cef36b_62086_100x100_fill_q90_h2_lanczos_smart1_3.webp\" loading=\"lazy\" decoding=\"async\"\n          \n\n          alt=\"\"\n          class=\"  img\"\n          width=\"100\"\n          height=\"100\"\n          onerror=\"this.onerror='null';this.src='\\/images\\/blog\\/laravel-database-tahap-lanjut_hu64797f2c9f1ed98be25d660226cef36b_62086_100x100_fill_lanczos_smart1_3.png';\" /\u003e\n\n        \n      \n      \n    \n    \n  \n\n\n  \n","searchKeyword":"","categories":"Technology","tags":"modul, pemrograman, framework, laravel, orm, eloquent","content":" Note\nArtikel ini merupakan bagian dari: Kumpulan Modul Belajar Dasar Pemrograman Framework Laravel\nPada modul kali ini kita akan melanjutkan belajar tentang laravel database. Materi tentang laravel database akan diilustrasikan dalam bentuk studi kasus sederhana secara bertahap. Pada modul ini kita akan fokus menerapkan Eloquent ORM pada project laravel kita dan juga melengkapi pembahasan dan penerapan blade templates pada project kita. Kegiatan ini agar kita dapat memahami dan menerapkan manajemen database pada laravel framework dan mengoptimalkan fitur yang dimiliki oleh blade templates.\n1. Membuat File Model Generate file Model untuk tabel positions dan employees via Artisan\nphp artisan make:model Position php artisan make:model Employee Tambahkankan function employee() pada Model Position untuk mendefinisikan relationship dengan Model Employee.\n\u0026lt;?php namespace App\\Models; use Illuminate\\Database\\Eloquent\\Factories\\HasFactory; use Illuminate\\Database\\Eloquent\\Model; class Position extends Model { use HasFactory; public function employees() { return $this-\u0026gt;hasMany(Employee::class); } } Tambahkankan function position() pada Model Employee untuk mendefinisikan relationship dengan Model Position.\n\u0026lt;?php namespace App\\Models; use Illuminate\\Database\\Eloquent\\Factories\\HasFactory; use Illuminate\\Database\\Eloquent\\Model; class Employee extends Model { use HasFactory; public function position() { return $this-\u0026gt;belongsTo(Position::class); } } 2. Implementasi Eloquent pada Fitur Menampilkan Data Pegawai Buka file EmployeeController dan ubah query dengan pendekatan Eloquent Model pada function index() seperti di bawah ini.\npublic function index() { $pageTitle = \u0026#39;Employee List\u0026#39;; // ELOQUENT $employees = Employee::all(); return view(\u0026#39;employee.index\u0026#39;, [ \u0026#39;pageTitle\u0026#39; =\u0026gt; $pageTitle, \u0026#39;employees\u0026#39; =\u0026gt; $employees ]); } Pastikan Model Employee terpanggil pada bagian atas file.\nuse App\\Models\\Employee; Buka file View /views/employee/index.blade.php dan sesuaikan metode penangkapan data pegawai seperti di bawah ini.\n\u0026lt;tbody\u0026gt; @foreach ($employees as $employee) \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;{{ $employee-\u0026gt;firstname }}\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;{{ $employee-\u0026gt;lastname }}\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;{{ $employee-\u0026gt;email }}\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;{{ $employee-\u0026gt;age }}\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;{{ $employee-\u0026gt;position-\u0026gt;name }}\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; {{-- ACTIONS SECTION --}} \u0026lt;div class=\u0026#34;d-flex\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;employees.show\u0026#39;, [\u0026#39;employee\u0026#39; =\u0026gt; $employee-\u0026gt;id]) }}\u0026#34; class=\u0026#34;btn btn-outline-dark btn-sm me-2\u0026#34; \u0026gt;\u0026lt;i class=\u0026#34;bi-person-lines-fill\u0026#34;\u0026gt;\u0026lt;/i \u0026gt;\u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;employees.edit\u0026#39;, [\u0026#39;employee\u0026#39; =\u0026gt; $employee-\u0026gt;id]) }}\u0026#34; class=\u0026#34;btn btn-outline-dark btn-sm me-2\u0026#34; \u0026gt;\u0026lt;i class=\u0026#34;bi-pencil-square\u0026#34;\u0026gt;\u0026lt;/i \u0026gt;\u0026lt;/a\u0026gt; \u0026lt;div\u0026gt; \u0026lt;form action=\u0026#34;{{ route(\u0026#39;employees.destroy\u0026#39;, [\u0026#39;employee\u0026#39; =\u0026gt; $employee-\u0026gt;id]) }}\u0026#34; method=\u0026#34;POST\u0026#34; \u0026gt; @csrf @method(\u0026#39;delete\u0026#39;) \u0026lt;button type=\u0026#34;submit\u0026#34; class=\u0026#34;btn btn-outline-dark btn-sm me-2\u0026#34;\u0026gt; \u0026lt;i class=\u0026#34;bi-trash\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; @endforeach \u0026lt;/tbody\u0026gt; 3. Implementasi Eloquent pada Fitur Form Input Pegawai Buka file EmployeeController dan ubah query dengan pendekatan Eloquent Model pada function create() dan store() seperti di bawah ini.\npublic function create() { $pageTitle = \u0026#39;Create Employee\u0026#39;; // ELOQUENT $positions = Position::all(); return view(\u0026#39;employee.create\u0026#39;, compact(\u0026#39;pageTitle\u0026#39;, \u0026#39;positions\u0026#39;)); } public function store(Request $request) { $messages = [ \u0026#39;required\u0026#39; =\u0026gt; \u0026#39;:Attribute harus diisi.\u0026#39;, \u0026#39;email\u0026#39; =\u0026gt; \u0026#39;Isi :attribute dengan format yang benar\u0026#39;, \u0026#39;numeric\u0026#39; =\u0026gt; \u0026#39;Isi :attribute dengan angka\u0026#39; ]; $validator = Validator::make($request-\u0026gt;all(), [ \u0026#39;firstName\u0026#39; =\u0026gt; \u0026#39;required\u0026#39;, \u0026#39;lastName\u0026#39; =\u0026gt; \u0026#39;required\u0026#39;, \u0026#39;email\u0026#39; =\u0026gt; \u0026#39;required|email\u0026#39;, \u0026#39;age\u0026#39; =\u0026gt; \u0026#39;required|numeric\u0026#39;, ], $messages); if ($validator-\u0026gt;fails()) { return redirect()-\u0026gt;back()-\u0026gt;withErrors($validator)-\u0026gt;withInput(); } // ELOQUENT $employee = New Employee; $employee-\u0026gt;firstname = $request-\u0026gt;firstName; $employee-\u0026gt;lastname = $request-\u0026gt;lastName; $employee-\u0026gt;email = $request-\u0026gt;email; $employee-\u0026gt;age = $request-\u0026gt;age; $employee-\u0026gt;position_id = $request-\u0026gt;position; $employee-\u0026gt;save(); return redirect()-\u0026gt;route(\u0026#39;employees.index\u0026#39;); } Pastikan Model Position terpanggil pada bagian atas file.\nuse App\\Models\\Position; Buka file View /views/employee/create.blade.php dan sesuaikan metode penangkapan data pegawai seperti di bawah ini.\n\u0026lt;form action=\u0026#34;{{ route(\u0026#39;employees.store\u0026#39;) }}\u0026#34; method=\u0026#34;POST\u0026#34;\u0026gt; @csrf \u0026lt;div class=\u0026#34;row justify-content-center\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;p-5 bg-light rounded-3 border col-xl-6\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;mb-3 text-center\u0026#34;\u0026gt; \u0026lt;i class=\u0026#34;bi-person-circle fs-1\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; \u0026lt;h4\u0026gt;Create Employee\u0026lt;/h4\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;hr\u0026gt; \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;col-md-6 mb-3\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;firstName\u0026#34; class=\u0026#34;form-label\u0026#34;\u0026gt;First Name\u0026lt;/label\u0026gt; \u0026lt;input class=\u0026#34;form-control @error(\u0026#39;firstName\u0026#39;) is-invalid @enderror\u0026#34; type=\u0026#34;text\u0026#34; name=\u0026#34;firstName\u0026#34; id=\u0026#34;firstName\u0026#34; value=\u0026#34;{{ old(\u0026#39;firstName\u0026#39;) }}\u0026#34; placeholder=\u0026#34;Enter First Name\u0026#34;\u0026gt; @error(\u0026#39;firstName\u0026#39;) \u0026lt;div class=\u0026#34;text-danger\u0026#34;\u0026gt;\u0026lt;small\u0026gt;{{ $message }}\u0026lt;/small\u0026gt;\u0026lt;/div\u0026gt; @enderror \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-md-6 mb-3\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;lastName\u0026#34; class=\u0026#34;form-label\u0026#34;\u0026gt;Last Name\u0026lt;/label\u0026gt; \u0026lt;input class=\u0026#34;form-control @error(\u0026#39;lastName\u0026#39;) is-invalid @enderror\u0026#34; type=\u0026#34;text\u0026#34; name=\u0026#34;lastName\u0026#34; id=\u0026#34;lastName\u0026#34; value=\u0026#34;{{ old(\u0026#39;lastName\u0026#39;) }}\u0026#34; placeholder=\u0026#34;Enter Last Name\u0026#34;\u0026gt; @error(\u0026#39;lastName\u0026#39;) \u0026lt;div class=\u0026#34;text-danger\u0026#34;\u0026gt;\u0026lt;small\u0026gt;{{ $message }}\u0026lt;/small\u0026gt;\u0026lt;/div\u0026gt; @enderror \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-md-6 mb-3\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;email\u0026#34; class=\u0026#34;form-label\u0026#34;\u0026gt;Email\u0026lt;/label\u0026gt; \u0026lt;input class=\u0026#34;form-control @error(\u0026#39;email\u0026#39;) is-invalid @enderror\u0026#34; type=\u0026#34;text\u0026#34; name=\u0026#34;email\u0026#34; id=\u0026#34;email\u0026#34; value=\u0026#34;{{ old(\u0026#39;email\u0026#39;) }}\u0026#34; placeholder=\u0026#34;Enter Email\u0026#34;\u0026gt; @error(\u0026#39;email\u0026#39;) \u0026lt;div class=\u0026#34;text-danger\u0026#34;\u0026gt;\u0026lt;small\u0026gt;{{ $message }}\u0026lt;/small\u0026gt;\u0026lt;/div\u0026gt; @enderror \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-md-6 mb-3\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;age\u0026#34; class=\u0026#34;form-label\u0026#34;\u0026gt;Age\u0026lt;/label\u0026gt; \u0026lt;input class=\u0026#34;form-control @error(\u0026#39;age\u0026#39;) is-invalid @enderror\u0026#34; type=\u0026#34;text\u0026#34; name=\u0026#34;age\u0026#34; id=\u0026#34;age\u0026#34; value=\u0026#34;{{ old(\u0026#39;age\u0026#39;) }}\u0026#34; placeholder=\u0026#34;Enter Age\u0026#34;\u0026gt; @error(\u0026#39;age\u0026#39;) \u0026lt;div class=\u0026#34;text-danger\u0026#34;\u0026gt;\u0026lt;small\u0026gt;{{ $message }}\u0026lt;/small\u0026gt;\u0026lt;/div\u0026gt; @enderror \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-md-12 mb-3\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;position\u0026#34; class=\u0026#34;form-label\u0026#34;\u0026gt;Position\u0026lt;/label\u0026gt; \u0026lt;select name=\u0026#34;position\u0026#34; id=\u0026#34;position\u0026#34; class=\u0026#34;form-select\u0026#34;\u0026gt; @foreach ($positions as $position) \u0026lt;option value=\u0026#34;{{ $position-\u0026gt;id }}\u0026#34; {{ old(\u0026#39;position\u0026#39;) == $position-\u0026gt;id ? \u0026#39;selected\u0026#39; : \u0026#39;\u0026#39; }}\u0026gt;{{ $position-\u0026gt;code.\u0026#39; - \u0026#39;.$position-\u0026gt;name }}\u0026lt;/option\u0026gt; @endforeach \u0026lt;/select\u0026gt; @error(\u0026#39;position\u0026#39;) \u0026lt;div class=\u0026#34;text-danger\u0026#34;\u0026gt;\u0026lt;small\u0026gt;{{ $message }}\u0026lt;/small\u0026gt;\u0026lt;/div\u0026gt; @enderror \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;hr\u0026gt; \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;col-md-6 d-grid\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;employees.index\u0026#39;) }}\u0026#34; class=\u0026#34;btn btn-outline-dark btn-lg mt-3\u0026#34;\u0026gt;\u0026lt;i class=\u0026#34;bi-arrow-left-circle me-2\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; Cancel\u0026lt;/a\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-md-6 d-grid\u0026#34;\u0026gt; \u0026lt;button type=\u0026#34;submit\u0026#34; class=\u0026#34;btn btn-dark btn-lg mt-3\u0026#34;\u0026gt;\u0026lt;i class=\u0026#34;bi-check-circle me-2\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; Save\u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/form\u0026gt; 4. Implementasi Eloquent pada Fitur Detail Data Pegawai Buka file EmployeeController dan ubah query dengan pendekatan Eloquent Model pada function show() seperti di bawah ini.\npublic function show(string $id) { $pageTitle = \u0026#39;Employee Detail\u0026#39;; // ELOQUENT $employee = Employee::find($id); return view(\u0026#39;employee.show\u0026#39;, compact(\u0026#39;pageTitle\u0026#39;, \u0026#39;employee\u0026#39;)); } Buka file View /views/employee/show.blade.php dan sesuaikan metode penangkapan data pegawai seperti di bawah ini.\n\u0026lt;div class=\u0026#34;container-sm my-5\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;row justify-content-center\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;p-5 bg-light rounded-3 col-xl-4 border\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;mb-3 text-center\u0026#34;\u0026gt; \u0026lt;i class=\u0026#34;bi-person-circle fs-1\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; \u0026lt;h4\u0026gt;Detail Employee\u0026lt;/h4\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;hr /\u0026gt; \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;col-md-12 mb-3\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;firstName\u0026#34; class=\u0026#34;form-label\u0026#34;\u0026gt;First Name\u0026lt;/label\u0026gt; \u0026lt;h5\u0026gt;{{ $employee-\u0026gt;firstname }}\u0026lt;/h5\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-md-12 mb-3\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;lastName\u0026#34; class=\u0026#34;form-label\u0026#34;\u0026gt;Last Name\u0026lt;/label\u0026gt; \u0026lt;h5\u0026gt;{{ $employee-\u0026gt;lastname }}\u0026lt;/h5\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-md-12 mb-3\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;email\u0026#34; class=\u0026#34;form-label\u0026#34;\u0026gt;Email\u0026lt;/label\u0026gt; \u0026lt;h5\u0026gt;{{ $employee-\u0026gt;email }}\u0026lt;/h5\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-md-12 mb-3\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;age\u0026#34; class=\u0026#34;form-label\u0026#34;\u0026gt;Age\u0026lt;/label\u0026gt; \u0026lt;h5\u0026gt;{{ $employee-\u0026gt;age }}\u0026lt;/h5\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-md-12 mb-3\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;age\u0026#34; class=\u0026#34;form-label\u0026#34;\u0026gt;Position\u0026lt;/label\u0026gt; \u0026lt;h5\u0026gt;{{ $employee-\u0026gt;position-\u0026gt;name }}\u0026lt;/h5\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;hr /\u0026gt; \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;col-md-12 d-grid\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;employees.index\u0026#39;) }}\u0026#34; class=\u0026#34;btn btn-outline-dark btn-lg mt-3\u0026#34; \u0026gt;\u0026lt;i class=\u0026#34;bi-arrow-left-circle me-2\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; Back\u0026lt;/a \u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; 5. Implementasi Eloquent pada Fitur Form Edit Pegawai Buka file EmployeeController dan ubah query dengan pendekatan Eloquent Model pada function edit() dan update() seperti di bawah ini.\npublic function edit(string $id) { $pageTitle = \u0026#39;Edit Employee\u0026#39;; // ELOQUENT $positions = Position::all(); $employee = Employee::find($id); return view(\u0026#39;employee.edit\u0026#39;, compact(\u0026#39;pageTitle\u0026#39;, \u0026#39;positions\u0026#39;, \u0026#39;employee\u0026#39;)); } public function update(Request $request, string $id) { $messages = [ \u0026#39;required\u0026#39; =\u0026gt; \u0026#39;:Attribute harus diisi.\u0026#39;, \u0026#39;email\u0026#39; =\u0026gt; \u0026#39;Isi :attribute dengan format yang benar\u0026#39;, \u0026#39;numeric\u0026#39; =\u0026gt; \u0026#39;Isi :attribute dengan angka\u0026#39; ]; $validator = Validator::make($request-\u0026gt;all(), [ \u0026#39;firstName\u0026#39; =\u0026gt; \u0026#39;required\u0026#39;, \u0026#39;lastName\u0026#39; =\u0026gt; \u0026#39;required\u0026#39;, \u0026#39;email\u0026#39; =\u0026gt; \u0026#39;required|email\u0026#39;, \u0026#39;age\u0026#39; =\u0026gt; \u0026#39;required|numeric\u0026#39;, ], $messages); if ($validator-\u0026gt;fails()) { return redirect()-\u0026gt;back()-\u0026gt;withErrors($validator)-\u0026gt;withInput(); } // ELOQUENT $employee = Employee::find($id); $employee-\u0026gt;firstname = $request-\u0026gt;firstName; $employee-\u0026gt;lastname = $request-\u0026gt;lastName; $employee-\u0026gt;email = $request-\u0026gt;email; $employee-\u0026gt;age = $request-\u0026gt;age; $employee-\u0026gt;position_id = $request-\u0026gt;position; $employee-\u0026gt;save(); return redirect()-\u0026gt;route(\u0026#39;employees.index\u0026#39;); } Buka file View /views/employee/edit.blade.php dan sesuaikan metode penangkapan data pegawai seperti di bawah ini.\n\u0026lt;form action=\u0026#34;{{ route(\u0026#39;employees.update\u0026#39;, [\u0026#39;employee\u0026#39; =\u0026gt; $employee-\u0026gt;id]) }}\u0026#34; method=\u0026#34;POST\u0026#34; \u0026gt; @csrf @method(\u0026#39;put\u0026#39;) \u0026lt;div class=\u0026#34;row justify-content-center\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;p-5 bg-light rounded-3 col-xl-6\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;mb-3 text-center\u0026#34;\u0026gt; \u0026lt;i class=\u0026#34;bi-person-circle fs-1\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; \u0026lt;h4\u0026gt;Edit Employee\u0026lt;/h4\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;hr /\u0026gt; \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;col-md-6 mb-3\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;firstName\u0026#34; class=\u0026#34;form-label\u0026#34;\u0026gt;First Name\u0026lt;/label\u0026gt; \u0026lt;input class=\u0026#34;form-control @error(\u0026#39;firstName\u0026#39;) is-invalid @enderror\u0026#34; type=\u0026#34;text\u0026#34; name=\u0026#34;firstName\u0026#34; id=\u0026#34;firstName\u0026#34; value=\u0026#34;{{ $errors-\u0026gt;any() ? old(\u0026#39;firstName\u0026#39;) : $employee-\u0026gt;firstname }}\u0026#34; placeholder=\u0026#34;Enter First Name\u0026#34; /\u0026gt; @error(\u0026#39;firstName\u0026#39;) \u0026lt;div class=\u0026#34;text-danger\u0026#34;\u0026gt;\u0026lt;small\u0026gt;{{ $message }}\u0026lt;/small\u0026gt;\u0026lt;/div\u0026gt; @enderror \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-md-6 mb-3\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;lastName\u0026#34; class=\u0026#34;form-label\u0026#34;\u0026gt;Last Name\u0026lt;/label\u0026gt; \u0026lt;input class=\u0026#34;form-control @error(\u0026#39;lastName\u0026#39;) is-invalid @enderror\u0026#34; type=\u0026#34;text\u0026#34; name=\u0026#34;lastName\u0026#34; id=\u0026#34;lastName\u0026#34; value=\u0026#34;{{ $errors-\u0026gt;any() ? old(\u0026#39;lastName\u0026#39;) : $employee-\u0026gt;lastname }}\u0026#34; placeholder=\u0026#34;Enter Last Name\u0026#34; /\u0026gt; @error(\u0026#39;lastName\u0026#39;) \u0026lt;div class=\u0026#34;text-danger\u0026#34;\u0026gt;\u0026lt;small\u0026gt;{{ $message }}\u0026lt;/small\u0026gt;\u0026lt;/div\u0026gt; @enderror \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-md-6 mb-3\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;email\u0026#34; class=\u0026#34;form-label\u0026#34;\u0026gt;Email\u0026lt;/label\u0026gt; \u0026lt;input class=\u0026#34;form-control @error(\u0026#39;email\u0026#39;) is-invalid @enderror\u0026#34; type=\u0026#34;text\u0026#34; name=\u0026#34;email\u0026#34; id=\u0026#34;email\u0026#34; value=\u0026#34;{{ $errors-\u0026gt;any() ? old(\u0026#39;email\u0026#39;) : $employee-\u0026gt;email }}\u0026#34; placeholder=\u0026#34;Enter Email\u0026#34; /\u0026gt; @error(\u0026#39;email\u0026#39;) \u0026lt;div class=\u0026#34;text-danger\u0026#34;\u0026gt;\u0026lt;small\u0026gt;{{ $message }}\u0026lt;/small\u0026gt;\u0026lt;/div\u0026gt; @enderror \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-md-6 mb-3\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;age\u0026#34; class=\u0026#34;form-label\u0026#34;\u0026gt;Age\u0026lt;/label\u0026gt; \u0026lt;input class=\u0026#34;form-control @error(\u0026#39;age\u0026#39;) is-invalid @enderror\u0026#34; type=\u0026#34;text\u0026#34; name=\u0026#34;age\u0026#34; id=\u0026#34;age\u0026#34; value=\u0026#34;{{ $errors-\u0026gt;any() ? old(\u0026#39;age\u0026#39;) : $employee-\u0026gt;age }}\u0026#34; placeholder=\u0026#34;Enter Age\u0026#34; /\u0026gt; @error(\u0026#39;age\u0026#39;) \u0026lt;div class=\u0026#34;text-danger\u0026#34;\u0026gt;\u0026lt;small\u0026gt;{{ $message }}\u0026lt;/small\u0026gt;\u0026lt;/div\u0026gt; @enderror \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-md-12 mb-3\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;position\u0026#34; class=\u0026#34;form-label\u0026#34;\u0026gt;Position\u0026lt;/label\u0026gt; \u0026lt;select name=\u0026#34;position\u0026#34; id=\u0026#34;position\u0026#34; class=\u0026#34;form-select\u0026#34;\u0026gt; @php $selected = \u0026#34;\u0026#34;; if ($errors-\u0026gt;any()) $selected = old(\u0026#39;position\u0026#39;); else $selected = $employee-\u0026gt;position_id; @endphp @foreach ($positions as $position) \u0026lt;option value=\u0026#34;{{ $position-\u0026gt;id }}\u0026#34; {{ $selected=\u0026#34;\u0026#34; =\u0026#34;$position-\u0026#34;\u0026gt; id ? \u0026#39;selected\u0026#39; : \u0026#39;\u0026#39; }}\u0026gt;{{ $position-\u0026gt;code.\u0026#39; - \u0026#39;.$position-\u0026gt;name }} \u0026lt;/option\u0026gt; @endforeach \u0026lt;/select\u0026gt; @error(\u0026#39;position\u0026#39;) \u0026lt;div class=\u0026#34;text-danger\u0026#34;\u0026gt;\u0026lt;small\u0026gt;{{ $message }}\u0026lt;/small\u0026gt;\u0026lt;/div\u0026gt; @enderror \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;hr /\u0026gt; \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;col-md-6 d-grid\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;employees.index\u0026#39;) }}\u0026#34; class=\u0026#34;btn btn-outline-dark btn-lg mt-3\u0026#34; \u0026gt;\u0026lt;i class=\u0026#34;bi-arrow-left-circle me-2\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; Cancel\u0026lt;/a \u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-md-6 d-grid\u0026#34;\u0026gt; \u0026lt;button type=\u0026#34;submit\u0026#34; class=\u0026#34;btn btn-dark btn-lg mt-3\u0026#34;\u0026gt; \u0026lt;i class=\u0026#34;bi-check-circle me-2\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; Edit \u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/form\u0026gt; 6. Implementasi Eloquent pada Fitur Hapus Data Pegawai Buka file EmployeeController dan ubah query dengan pendekatan Eloquent Model pada function destroy() seperti di bawah ini.\npublic function destroy(string $id) { // ELOQUENT Employee::find($id)-\u0026gt;delete(); return redirect()-\u0026gt;route(\u0026#39;employees.index\u0026#39;); } 7. Memisahkan Nav Section Buat file View baru pada /views/layouts/nav.blade.php kemudian pindahkan kode program nav section (yang berulang dipakai di file-file View sebelumnya) pada file baru tersebut. Kemudian sesuaikan seperti kode program di bawah ini.\n@php $currentRouteName = Route::currentRouteName(); @endphp \u0026lt;nav class=\u0026#34;navbar navbar-expand-md navbar-dark bg-primary\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;container\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;home\u0026#39;) }}\u0026#34; class=\u0026#34;navbar-brand mb-0 h1\u0026#34; \u0026gt;\u0026lt;i class=\u0026#34;bi-hexagon-fill me-2\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; Data Master\u0026lt;/a \u0026gt; \u0026lt;button type=\u0026#34;button\u0026#34; class=\u0026#34;navbar-toggler\u0026#34; data-bs-toggle=\u0026#34;collapse\u0026#34; data-bs-target=\u0026#34;#navbarSupportedContent\u0026#34; \u0026gt; \u0026lt;span class=\u0026#34;navbar-toggler-icon\u0026#34;\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;div class=\u0026#34;collapse navbar-collapse\u0026#34; id=\u0026#34;navbarSupportedContent\u0026#34;\u0026gt; \u0026lt;hr class=\u0026#34;d-md-none text-white-50\u0026#34; /\u0026gt; \u0026lt;ul class=\u0026#34;navbar-nav flex-row flex-wrap\u0026#34;\u0026gt; \u0026lt;li class=\u0026#34;nav-item col-2 col-md-auto\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;home\u0026#39;) }}\u0026#34; class=\u0026#34;nav-link @if($currentRouteName == \u0026#39;home\u0026#39;) active @endif\u0026#34; \u0026gt;Home\u0026lt;/a \u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;nav-item col-2 col-md-auto\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;employees.index\u0026#39;) }}\u0026#34; class=\u0026#34;nav-link @if($currentRouteName == \u0026#39;employees.index\u0026#39;) active @endif\u0026#34; \u0026gt;Employee\u0026lt;/a \u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;hr class=\u0026#34;d-md-none text-white-50\u0026#34; /\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;profile\u0026#39;) }}\u0026#34; class=\u0026#34;btn btn-outline-light my-2 ms-md-auto\u0026#34; \u0026gt;\u0026lt;i class=\u0026#34;bi-person-circle me-1\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; My Profile\u0026lt;/a \u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/nav\u0026gt; 8. Mendefinisikan Layout Utama Aplikasi Buat file View baru pada /views/layouts/app.blade.php yang akan kita jadikan template utama pada aplikasi web kita. Sesuaikan kode program nya seperti di bawah ini.\n\u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34; /\u0026gt; \u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;IE=edge\u0026#34; /\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;{{ $pageTitle }}\u0026lt;/title\u0026gt; @vite(\u0026#39;resources/sass/app.scss\u0026#39;) \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; @include(\u0026#39;layouts.nav\u0026#39;) @yield(\u0026#39;content\u0026#39;) @vite(\u0026#39;resources/js/app.js\u0026#39;) \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 9. Membuat Template untuk Default Content Buat file View baru pada /views/default.blade.php yang akan kita jadikan template default untuk konten di aplikasi web kita. Sesuaikan kode program nya seperti di bawah ini.\n\u0026lt;div class=\u0026#34;container mt-4\u0026#34;\u0026gt; \u0026lt;h4\u0026gt;{{ $pageTitle }}\u0026lt;/h4\u0026gt; \u0026lt;hr /\u0026gt; \u0026lt;div class=\u0026#34;d-flex align-items-center py-2 px-4 bg-light rounded-3 border\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;bi-house-fill me-3 fs-1\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;h4 class=\u0026#34;mb-0\u0026#34;\u0026gt;Well done! this is {{ $pageTitle }}.\u0026lt;/h4\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; 10. Memisahkan Actions Section Buat file View baru pada /views/employee/actions.blade.php kemudian pindahkan kode program actions section pada file /views/employee/index.blade.php pada file actions.blade.php tersebut. Kemudian sesuaikan kode program seperti di bawah ini.\n\u0026lt;div class=\u0026#34;d-flex\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;employees.show\u0026#39;, [\u0026#39;employee\u0026#39; =\u0026gt; $employee-\u0026gt;id]) }}\u0026#34; class=\u0026#34;btn btn-outline-dark btn-sm me-2\u0026#34; \u0026gt;\u0026lt;i class=\u0026#34;bi-person-lines-fill\u0026#34;\u0026gt;\u0026lt;/i \u0026gt;\u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;employees.edit\u0026#39;, [\u0026#39;employee\u0026#39; =\u0026gt; $employee-\u0026gt;id]) }}\u0026#34; class=\u0026#34;btn btn-outline-dark btn-sm me-2\u0026#34; \u0026gt;\u0026lt;i class=\u0026#34;bi-pencil-square\u0026#34;\u0026gt;\u0026lt;/i \u0026gt;\u0026lt;/a\u0026gt; \u0026lt;div\u0026gt; \u0026lt;form action=\u0026#34;{{ route(\u0026#39;employees.destroy\u0026#39;, [\u0026#39;employee\u0026#39; =\u0026gt; $employee-\u0026gt;id]) }}\u0026#34; method=\u0026#34;POST\u0026#34; \u0026gt; @csrf @method(\u0026#39;delete\u0026#39;) \u0026lt;button type=\u0026#34;submit\u0026#34; class=\u0026#34;btn btn-outline-dark btn-sm me-2\u0026#34;\u0026gt; \u0026lt;i class=\u0026#34;bi-trash\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; 11. Penyesuaian File View untuk Fitur Menampilkan Data Pegawai Buka file View pada /views/employee/index.blade.php kemudian implementasikan konsep inherintance dengan Blade Directive @extends() file layout utama (/layouts/app.blade.php), implementasi dynamic content dengan mendefinisikan Blade Directive @section() dan memanggilkan file yang berisi kode program untuk actions section dengan Blade Directive @include().\n@extends(\u0026#39;layouts.app\u0026#39;) @section(\u0026#39;content\u0026#39;) \u0026lt;div class=\u0026#34;container mt-4\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;row mb-0\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;col-lg-9 col-xl-10\u0026#34;\u0026gt; \u0026lt;h4 class=\u0026#34;mb-3\u0026#34;\u0026gt;{{ $pageTitle }}\u0026lt;/h4\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-lg-3 col-xl-2\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;d-grid gap-2\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;employees.create\u0026#39;) }}\u0026#34; class=\u0026#34;btn btn-primary\u0026#34; \u0026gt;Create Employee\u0026lt;/a \u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;hr /\u0026gt; \u0026lt;div class=\u0026#34;table-responsive border p-3 rounded-3\u0026#34;\u0026gt; \u0026lt;table class=\u0026#34;table table-bordered table-hover table-striped mb-0 bg-white\u0026#34; \u0026gt; \u0026lt;thead\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;th\u0026gt;First Name\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;Last Name\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;Email\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;Age\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;Position\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;\u0026lt;/th\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/thead\u0026gt; \u0026lt;tbody\u0026gt; @foreach ($employees as $employee) \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;{{ $employee-\u0026gt;firstname }}\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;{{ $employee-\u0026gt;lastname }}\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;{{ $employee-\u0026gt;email }}\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;{{ $employee-\u0026gt;age }}\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;{{ $employee-\u0026gt;position-\u0026gt;name }}\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;@include(\u0026#39;employee.actions\u0026#39;)\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; @endforeach \u0026lt;/tbody\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; @endsection 12. Penyesuaian File View untuk Fitur Form Input Pegawai Buka file View pada /views/employee/create.blade.php kemudian sesuaikan kode program nya seperti di bawah ini.\n@extends(\u0026#39;layouts.app\u0026#39;) @section(\u0026#39;content\u0026#39;) \u0026lt;div class=\u0026#34;container-sm my-5\u0026#34;\u0026gt; \u0026lt;form action=\u0026#34;{{ route(\u0026#39;employees.store\u0026#39;) }}\u0026#34; method=\u0026#34;POST\u0026#34;\u0026gt; @csrf \u0026lt;div class=\u0026#34;row justify-content-center\u0026#34;\u0026gt;{{-- Dan Seterusnya --}}\u0026lt;/div\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/div\u0026gt; @endsection 13. Penyesuaian File View untuk Fitur Detail Data Pegawai Buka file View pada /views/employee/show.blade.php kemudian sesuaikan kode program nya seperti di bawah ini.\n@extends(\u0026#39;layouts.app\u0026#39;) @section(\u0026#39;content\u0026#39;) \u0026lt;div class=\u0026#34;container-sm my-5\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;row justify-content-center\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;p-5 bg-light rounded-3 col-xl-4 border\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;mb-3 text-center\u0026#34;\u0026gt; \u0026lt;i class=\u0026#34;bi-person-circle fs-1\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; \u0026lt;h4\u0026gt;Detail Employee\u0026lt;/h4\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;hr /\u0026gt; \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;col-md-12 mb-3\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;firstName\u0026#34; class=\u0026#34;form-label\u0026#34;\u0026gt;First Name\u0026lt;/label\u0026gt; \u0026lt;h5\u0026gt;{{ $employee-\u0026gt;firstname }}\u0026lt;/h5\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-md-12 mb-3\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;lastName\u0026#34; class=\u0026#34;form-label\u0026#34;\u0026gt;Last Name\u0026lt;/label\u0026gt; \u0026lt;h5\u0026gt;{{ $employee-\u0026gt;lastname }}\u0026lt;/h5\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-md-12 mb-3\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;email\u0026#34; class=\u0026#34;form-label\u0026#34;\u0026gt;Email\u0026lt;/label\u0026gt; \u0026lt;h5\u0026gt;{{ $employee-\u0026gt;email }}\u0026lt;/h5\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-md-12 mb-3\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;age\u0026#34; class=\u0026#34;form-label\u0026#34;\u0026gt;Age\u0026lt;/label\u0026gt; \u0026lt;h5\u0026gt;{{ $employee-\u0026gt;age }}\u0026lt;/h5\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-md-12 mb-3\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;age\u0026#34; class=\u0026#34;form-label\u0026#34;\u0026gt;Position\u0026lt;/label\u0026gt; \u0026lt;h5\u0026gt;{{ $employee-\u0026gt;position-\u0026gt;name }}\u0026lt;/h5\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;hr /\u0026gt; \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;col-md-12 d-grid\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;employees.index\u0026#39;) }}\u0026#34; class=\u0026#34;btn btn-outline-dark btn-lg mt-3\u0026#34; \u0026gt;\u0026lt;i class=\u0026#34;bi-arrow-left-circle me-2\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; Back\u0026lt;/a \u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; @endsection 14. Penyesuaian File View untuk Fitur Form Edit Pegawai Buka file View pada /views/employee/edit.blade.php kemudian sesuaikan kode program nya seperti di bawah ini.\n@extends(\u0026#39;layouts.app\u0026#39;) @section(\u0026#39;content\u0026#39;) \u0026lt;div class=\u0026#34;container-sm my-5\u0026#34;\u0026gt; \u0026lt;form action=\u0026#34;{{ route(\u0026#39;employees.update\u0026#39;, [\u0026#39;employee\u0026#39; =\u0026gt; $employee-\u0026gt;id]) }}\u0026#34; method=\u0026#34;POST\u0026#34; \u0026gt; @csrf @method(\u0026#39;put\u0026#39;) \u0026lt;div class=\u0026#34;row justify-content-center\u0026#34;\u0026gt;{{-- Dan Seterusnya --}}\u0026lt;/div\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/div\u0026gt; @endsection 15. Penyesuaian File View untuk Halaman Home dan Profile Buka file View pada /views/home.blade.php dan /views/profile.blade.php kemudian sesuaikan kode program nya seperti di bawah ini.\n@extends(\u0026#39;layouts.app\u0026#39;) @section(\u0026#39;content\u0026#39;) @include(\u0026#39;default\u0026#39;) @endsection 16. Tugas Praktekkan seluruh poin praktikum yang ada di atas secara INDIVIDU. Note\nArtikel ini merupakan bagian dari: Kumpulan Modul Belajar Dasar Pemrograman Framework Laravel\n"},{"section":"Blog","slug":"/blog/laravel-database-tahap-dasar/","title":"Modul #05 Belajar Pemrograman Framework Laravel Tahap Dasar: Laravel Database Tahap Dasar","description":"Modul #05 Belajar Pemrograman Framework Laravel Tahap Dasar: Laravel Database Tahap Dasar","date":"December 5, 2023","image":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n  \n    \n      \n    \n\n\n    \n    \n\n\n    \n    \n      \n      \n    \n    \n    \n\n\n    \n    \n      \n      \n        \n        \n        \n        \n        \n        \n\n\n        \n        \n\n\n        \u003cimg\n          \n            src=\"/images/blog/laravel-database-tahap-dasar_huffb88b62d36627e9b34e86afc3bb33ed_69364_420x0_resize_q90_h2_lanczos_3.webp\" loading=\"lazy\" decoding=\"async\"\n          \n\n          alt=\"\"\n          class=\"  img\"\n          width=\"420\"\n          height=\"236\"\n          onerror=\"this.onerror='null';this.src='\\/images\\/blog\\/laravel-database-tahap-dasar_huffb88b62d36627e9b34e86afc3bb33ed_69364_420x0_resize_lanczos_3.png';\" /\u003e\n\n        \n      \n      \n    \n    \n  \n\n\n  \n","imageSM":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n  \n    \n      \n    \n\n\n    \n    \n\n\n    \n    \n      \n      \n    \n    \n    \n\n\n    \n    \n      \n      \n        \n        \n        \n        \n        \n        \n          \n          \n          \n          \n        \n\n\n        \n        \n\n\n        \u003cimg\n          \n            src=\"/images/blog/laravel-database-tahap-dasar_huffb88b62d36627e9b34e86afc3bb33ed_69364_100x100_fill_q90_h2_lanczos_smart1_3.webp\" loading=\"lazy\" decoding=\"async\"\n          \n\n          alt=\"\"\n          class=\"  img\"\n          width=\"100\"\n          height=\"100\"\n          onerror=\"this.onerror='null';this.src='\\/images\\/blog\\/laravel-database-tahap-dasar_huffb88b62d36627e9b34e86afc3bb33ed_69364_100x100_fill_lanczos_smart1_3.png';\" /\u003e\n\n        \n      \n      \n    \n    \n  \n\n\n  \n","searchKeyword":"","categories":"Technology","tags":"modul, pemrograman, framework, laravel, database, migration, seeder, query builder","content":" Note\nArtikel ini merupakan bagian dari: Kumpulan Modul Belajar Dasar Pemrograman Framework Laravel\nPada modul kali ini kita akan melanjutkan belajar tentang laravel database. Materi tentang laravel database akan diilustrasikan dalam bentuk studi kasus sederhana secara bertahap. Kegiatan ini agar kita dapat memahami dan menerapkan manajemen database pada laravel framework.\n1. Aktifkan Service MySQL dan PhpMyAdmin Buka XAMPP Control Panel\nStart service Apache\nStart service MySQL\nBuka PhpMyAdmin via browser\nBuat database baru dengan nama “data_master” melalui PhpMyAdmin.\n2. Setup Database Config Buka file .env pada project laravel kalian.\nSet variabel DB_DATABASE dengan nilai “data_master” (sesuai dengan nama database yang dibuat melalui PhpMyAdmin)\nDB_DATABASE=data_master 3. Skema Database Kita akan membuat skema database sederhana seperti di bawah ini. Terdapat 2 Tabel yaitu employees dan positions. Memiliki hubungan one-to-many, dimana pada tabel employees terdapat kolom position_id yang merujuk pada kolom id pada tabel positions.\n4. Membuat Skema Database Menggunakan Migration Generate file migration untuk tabel positions via Artisan\nphp artisan make:migration create_positions_table Buat kode program pada file migration yang telah dibuat yang mendefinisikan tabel positions seperti di bawah ini.\n\u0026lt;?php use Illuminate\\Database\\Migrations\\Migration; use Illuminate\\Database\\Schema\\Blueprint; use Illuminate\\Support\\Facades\\Schema; return new class extends Migration { /** * Run the migrations. */ public function up(): void { Schema::create(\u0026#39;positions\u0026#39;, function (Blueprint $table) { $table-\u0026gt;id(); $table-\u0026gt;string(\u0026#39;code\u0026#39;); $table-\u0026gt;string(\u0026#39;name\u0026#39;); $table-\u0026gt;string(\u0026#39;description\u0026#39;); $table-\u0026gt;timestamps(); }); } /** * Reverse the migrations. */ public function down(): void { Schema::dropIfExists(\u0026#39;positions\u0026#39;); } }; Generate file migration untuk tabel employees via Artisan\nphp artisan make:migration create_employees_table Buat kode program pada file migration yang telah dibuat yang mendefinisikan tabel employees seperti di bawah ini.\n\u0026lt;?php use Illuminate\\Database\\Migrations\\Migration; use Illuminate\\Database\\Schema\\Blueprint; use Illuminate\\Support\\Facades\\Schema; return new class extends Migration { /** * Run the migrations. */ public function up(): void { Schema::create(\u0026#39;employees\u0026#39;, function (Blueprint $table) { $table-\u0026gt;id(); $table-\u0026gt;string(\u0026#39;firstname\u0026#39;); $table-\u0026gt;string(\u0026#39;lastname\u0026#39;)-\u0026gt;nullable(); $table-\u0026gt;string(\u0026#39;email\u0026#39;)-\u0026gt;unique(); $table-\u0026gt;integer(\u0026#39;age\u0026#39;); $table-\u0026gt;foreignId(\u0026#39;position_id\u0026#39;)-\u0026gt;constrained(); $table-\u0026gt;timestamps(); }); } /** * Reverse the migrations. */ public function down(): void { Schema::dropIfExists(\u0026#39;employees\u0026#39;); } }; Eksekusi file migration yang telah dibuat via Artisan\nphp artisan migrate 5. Membuat Data Dummy Menggunakan Seeder Generate file seeder untuk tabel positions via Artisan\nphp artisan make:seeder PositionSeeder Buat kode program pada file seeder yang telah dibuat untuk tabel positions seperti di bawah ini.\n\u0026lt;?php namespace Database\\Seeders; use Illuminate\\Database\\Console\\Seeds\\WithoutModelEvents; use Illuminate\\Database\\Seeder; use Illuminate\\Support\\Facades\\DB; class PositionSeeder extends Seeder { /** * Run the database seeds. */ public function run(): void { DB::table(\u0026#39;positions\u0026#39;)-\u0026gt;insert([ [ \u0026#39;code\u0026#39; =\u0026gt; \u0026#39;FE\u0026#39;, \u0026#39;name\u0026#39; =\u0026gt; \u0026#39;Front End Developer\u0026#39;, \u0026#39;description\u0026#39; =\u0026gt; \u0026#39;Front End Developer\u0026#39; ], [ \u0026#39;code\u0026#39; =\u0026gt; \u0026#39;BE\u0026#39;, \u0026#39;name\u0026#39; =\u0026gt; \u0026#39;Back End Developer\u0026#39;, \u0026#39;description\u0026#39; =\u0026gt; \u0026#39;Back End Developer\u0026#39; ], [ \u0026#39;code\u0026#39; =\u0026gt; \u0026#39;SA\u0026#39;, \u0026#39;name\u0026#39; =\u0026gt; \u0026#39;System Analist\u0026#39;, \u0026#39;description\u0026#39; =\u0026gt; \u0026#39;System Analist\u0026#39; ], ]); } } Generate file seeder untuk tabel employees via Artisan\nphp artisan make:seeder EmployeeSeeder Buat kode program pada file seeder yang telah dibuat untuk tabel employees seperti di bawah ini.\n\u0026lt;?php namespace Database\\Seeders; use Illuminate\\Database\\Console\\Seeds\\WithoutModelEvents; use Illuminate\\Database\\Seeder; use Illuminate\\Support\\Facades\\DB; class EmployeeSeeder extends Seeder { /** * Run the database seeds. */ public function run(): void { DB::table(\u0026#39;employees\u0026#39;)-\u0026gt;insert([ [ \u0026#39;firstname\u0026#39; =\u0026gt; \u0026#39;Purnama\u0026#39;, \u0026#39;lastname\u0026#39; =\u0026gt; \u0026#39;Anaking\u0026#39;, \u0026#39;email\u0026#39;=\u0026gt; \u0026#39;purnama.anaking@gmail.com\u0026#39;, \u0026#39;age\u0026#39; =\u0026gt; 20, \u0026#39;position_id\u0026#39; =\u0026gt; 1 ], [ \u0026#39;firstname\u0026#39; =\u0026gt; \u0026#39;Adzanil\u0026#39;, \u0026#39;lastname\u0026#39; =\u0026gt; \u0026#39;Rachmadhi\u0026#39;, \u0026#39;email\u0026#39;=\u0026gt; \u0026#39;adzanil.rachmadhi@gmail.com\u0026#39;, \u0026#39;age\u0026#39; =\u0026gt; 25, \u0026#39;position_id\u0026#39; =\u0026gt; 2 ], [ \u0026#39;firstname\u0026#39; =\u0026gt; \u0026#39;Berlian\u0026#39;, \u0026#39;lastname\u0026#39; =\u0026gt; \u0026#39;Rahmy\u0026#39;, \u0026#39;email\u0026#39;=\u0026gt; \u0026#39;berlian.rahmy@gmail.com\u0026#39;, \u0026#39;age\u0026#39; =\u0026gt; 23, \u0026#39;position_id\u0026#39; =\u0026gt; 3 ], ]); } } Definiskan file seeder yang akan dieksekusi pada function run() di dalam file DatabaseSeeder.php\n\u0026lt;?php namespace Database\\Seeders; // use Illuminate\\Database\\Console\\Seeds\\WithoutModelEvents; use Illuminate\\Database\\Seeder; class DatabaseSeeder extends Seeder { /** * Seed the application\u0026#39;s database. */ public function run(): void { $this-\u0026gt;call([ PositionSeeder::class, EmployeeSeeder::class ]); } } Eksekusi file seeder yang telah dibuat via Artisan\nphp artisan db:seed 6. Menampilkan List Data dari Database Buat Raw SQL Query pada method index() di dalam file EmployeeController dan Passing data employee dari controller ke View.\npublic function index() { $pageTitle = \u0026#39;Employee List\u0026#39;; // RAW SQL QUERY $employees = DB::select(\u0026#39; select *, employees.id as employee_id, positions.name as position_name from employees left join positions on employees.position_id = positions.id \u0026#39;); return view(\u0026#39;employee.index\u0026#39;, [ \u0026#39;pageTitle\u0026#39; =\u0026gt; $pageTitle, \u0026#39;employees\u0026#39; =\u0026gt; $employees ]); } Pastikan Facade DB telah terpanggil di bagian atas file Controller.\nuse Illuminate\\Support\\Facades\\DB; Tampilkan data employee pada file View.\n\u0026lt;table class=\u0026#34;table table-bordered table-hover table-striped mb-0 bg-white\u0026#34;\u0026gt; \u0026lt;thead\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;th\u0026gt;First Name\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;Last Name\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;Email\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;Age\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;Position\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;\u0026lt;/th\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/thead\u0026gt; \u0026lt;tbody\u0026gt; @foreach ($employees as $employee) \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;{{ $employee-\u0026gt;firstname }}\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;{{ $employee-\u0026gt;lastname }}\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;{{ $employee-\u0026gt;email }}\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;{{ $employee-\u0026gt;age }}\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;{{ $employee-\u0026gt;position_name }}\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;div class=\u0026#34;d-flex\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;employees.show\u0026#39;, [\u0026#39;employee\u0026#39; =\u0026gt; $employee-\u0026gt;employee_id]) }}\u0026#34; class=\u0026#34;btn btn-outline-dark btn-sm me-2\u0026#34; \u0026gt;\u0026lt;i class=\u0026#34;bi-person-lines-fill\u0026#34;\u0026gt;\u0026lt;/i \u0026gt;\u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;employees.edit\u0026#39;, [\u0026#39;employee\u0026#39; =\u0026gt; $employee-\u0026gt;employee_id]) }}\u0026#34; class=\u0026#34;btn btn-outline-dark btn-sm me-2\u0026#34; \u0026gt;\u0026lt;i class=\u0026#34;bi-pencil-square\u0026#34;\u0026gt;\u0026lt;/i \u0026gt;\u0026lt;/a\u0026gt; \u0026lt;div\u0026gt; \u0026lt;form action=\u0026#34;{{ route(\u0026#39;employees.destroy\u0026#39;, [\u0026#39;employee\u0026#39; =\u0026gt; $employee-\u0026gt;employee_id]) }}\u0026#34; method=\u0026#34;POST\u0026#34; \u0026gt; @csrf @method(\u0026#39;delete\u0026#39;) \u0026lt;button type=\u0026#34;submit\u0026#34; class=\u0026#34;btn btn-outline-dark btn-sm me-2\u0026#34;\u0026gt; \u0026lt;i class=\u0026#34;bi-trash\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; @endforeach \u0026lt;/tbody\u0026gt; \u0026lt;/table\u0026gt; 7. Input Data ke Database Buat Raw SQL Query pada method create() di dalam file EmployeeController untuk pilihan “Position” pada Form Create Employee. Kemudian Passing data tersebut dari controller ke View.\npublic function create() { $pageTitle = \u0026#39;Create Employee\u0026#39;; // RAW SQL Query $positions = DB::select(\u0026#39;select * from positions\u0026#39;); return view(\u0026#39;employee.create\u0026#39;, compact(\u0026#39;pageTitle\u0026#39;, \u0026#39;positions\u0026#39;)); } Baca data positions pada file View.\n\u0026lt;div class=\u0026#34;col-md-12 mb-3\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;position\u0026#34; class=\u0026#34;form-label\u0026#34;\u0026gt;Position\u0026lt;/label\u0026gt; \u0026lt;select name=\u0026#34;position\u0026#34; id=\u0026#34;position\u0026#34; class=\u0026#34;form-select\u0026#34;\u0026gt; @foreach ($positions as $position) \u0026lt;option value=\u0026#34;{{ $position-\u0026gt;id }}\u0026#34; {{ old(\u0026#39;position\u0026#39;) == $position-\u0026gt;id ? \u0026#39;selected\u0026#39; : \u0026#39;\u0026#39; }}\u0026gt;{{ $position-\u0026gt;code.\u0026#39; - \u0026#39;.$position-\u0026gt;name }}\u0026lt;/option\u0026gt; @endforeach \u0026lt;/select\u0026gt; @error(\u0026#39;position\u0026#39;) \u0026lt;div class=\u0026#34;text-danger\u0026#34;\u0026gt;\u0026lt;small\u0026gt;{{ $message }}\u0026lt;/small\u0026gt;\u0026lt;/div\u0026gt; @enderror \u0026lt;/div\u0026gt; Hasil Akhir Form Create Employee adalah seperti di bawah ini.\nBuat Query Insert pada method store() di dalam EmployeeController. Kemudian redirect Route ke halaman Employee List.\npublic function store(Request $request) { $messages = [ \u0026#39;required\u0026#39; =\u0026gt; \u0026#39;:Attribute harus diisi.\u0026#39;, \u0026#39;email\u0026#39; =\u0026gt; \u0026#39;Isi :attribute dengan format yang benar\u0026#39;, \u0026#39;numeric\u0026#39; =\u0026gt; \u0026#39;Isi :attribute dengan angka\u0026#39; ]; $validator = Validator::make($request-\u0026gt;all(), [ \u0026#39;firstName\u0026#39; =\u0026gt; \u0026#39;required\u0026#39;, \u0026#39;lastName\u0026#39; =\u0026gt; \u0026#39;required\u0026#39;, \u0026#39;email\u0026#39; =\u0026gt; \u0026#39;required|email\u0026#39;, \u0026#39;age\u0026#39; =\u0026gt; \u0026#39;required|numeric\u0026#39;, ], $messages); if ($validator-\u0026gt;fails()) { return redirect()-\u0026gt;back()-\u0026gt;withErrors($validator)-\u0026gt;withInput(); } // INSERT QUERY DB::table(\u0026#39;employees\u0026#39;)-\u0026gt;insert([ \u0026#39;firstname\u0026#39; =\u0026gt; $request-\u0026gt;firstName, \u0026#39;lastname\u0026#39; =\u0026gt; $request-\u0026gt;lastName, \u0026#39;email\u0026#39; =\u0026gt; $request-\u0026gt;email, \u0026#39;age\u0026#39; =\u0026gt; $request-\u0026gt;age, \u0026#39;position_id\u0026#39; =\u0026gt; $request-\u0026gt;position, ]); return redirect()-\u0026gt;route(\u0026#39;employees.index\u0026#39;); } 8. Menampilkan Detail Data dari Database Buat Raw SQL Query pada method show() di dalam file EmployeeController dan Passing data employee dari controller ke View.\npublic function show(string $id) { $pageTitle = \u0026#39;Employee Detail\u0026#39;; // RAW SQL QUERY $employee = collect(DB::select(\u0026#39; select *, employees.id as employee_id, positions.name as position_name from employees left join positions on employees.position_id = positions.id where employees.id = ? \u0026#39;, [$id]))-\u0026gt;first(); return view(\u0026#39;employee.show\u0026#39;, compact(\u0026#39;pageTitle\u0026#39;, \u0026#39;employee\u0026#39;)); } Buat file baru di /views/employee/show.blade.php. Tampilkan data employee pada file View tersebut.\n\u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34; /\u0026gt; \u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;IE=edge\u0026#34; /\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;{{ $pageTitle }}\u0026lt;/title\u0026gt; @vite(\u0026#39;resources/sass/app.scss\u0026#39;) \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;nav class=\u0026#34;navbar navbar-expand-md navbar-dark bg-primary\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;container\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;home\u0026#39;) }}\u0026#34; class=\u0026#34;navbar-brand mb-0 h1\u0026#34; \u0026gt;\u0026lt;i class=\u0026#34;bi-hexagon-fill me-2\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; Data Master\u0026lt;/a \u0026gt; \u0026lt;button type=\u0026#34;button\u0026#34; class=\u0026#34;navbar-toggler\u0026#34; data-bs-toggle=\u0026#34;collapse\u0026#34; data-bs-target=\u0026#34;#navbarSupportedContent\u0026#34; \u0026gt; \u0026lt;span class=\u0026#34;navbar-toggler-icon\u0026#34;\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;div class=\u0026#34;collapse navbar-collapse\u0026#34; id=\u0026#34;navbarSupportedContent\u0026#34;\u0026gt; \u0026lt;hr class=\u0026#34;d-lg-none text-white-50\u0026#34; /\u0026gt; \u0026lt;ul class=\u0026#34;navbar-nav flex-row flex-wrap\u0026#34;\u0026gt; \u0026lt;li class=\u0026#34;nav-item col-2 col-md-auto\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;home\u0026#39;) }}\u0026#34; class=\u0026#34;nav-link\u0026#34;\u0026gt;Home\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;nav-item col-2 col-md-auto\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;employees.index\u0026#39;) }}\u0026#34; class=\u0026#34;nav-link active\u0026#34; \u0026gt;Employee List\u0026lt;/a \u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;hr class=\u0026#34;d-lg-none text-white-50\u0026#34; /\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;profile\u0026#39;) }}\u0026#34; class=\u0026#34;btn btn-outline-light my-2 ms-md-auto\u0026#34; \u0026gt;\u0026lt;i class=\u0026#34;bi-person-circle me-1\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; My Profile\u0026lt;/a \u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/nav\u0026gt; \u0026lt;div class=\u0026#34;container-sm my-5\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;row justify-content-center\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;p-5 bg-light rounded-3 col-xl-4 border\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;mb-3 text-center\u0026#34;\u0026gt; \u0026lt;i class=\u0026#34;bi-person-circle fs-1\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; \u0026lt;h4\u0026gt;Detail Employee\u0026lt;/h4\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;hr /\u0026gt; \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;col-md-12 mb-3\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;firstName\u0026#34; class=\u0026#34;form-label\u0026#34;\u0026gt;First Name\u0026lt;/label\u0026gt; \u0026lt;h5\u0026gt;{{ $employee-\u0026gt;firstname }}\u0026lt;/h5\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-md-12 mb-3\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;lastName\u0026#34; class=\u0026#34;form-label\u0026#34;\u0026gt;Last Name\u0026lt;/label\u0026gt; \u0026lt;h5\u0026gt;{{ $employee-\u0026gt;lastname }}\u0026lt;/h5\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-md-12 mb-3\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;email\u0026#34; class=\u0026#34;form-label\u0026#34;\u0026gt;Email\u0026lt;/label\u0026gt; \u0026lt;h5\u0026gt;{{ $employee-\u0026gt;email }}\u0026lt;/h5\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-md-12 mb-3\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;age\u0026#34; class=\u0026#34;form-label\u0026#34;\u0026gt;Age\u0026lt;/label\u0026gt; \u0026lt;h5\u0026gt;{{ $employee-\u0026gt;age }}\u0026lt;/h5\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-md-12 mb-3\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;age\u0026#34; class=\u0026#34;form-label\u0026#34;\u0026gt;Position\u0026lt;/label\u0026gt; \u0026lt;h5\u0026gt;{{ $employee-\u0026gt;position_name }}\u0026lt;/h5\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;hr /\u0026gt; \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;col-md-12 d-grid\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;employees.index\u0026#39;) }}\u0026#34; class=\u0026#34;btn btn-outline-dark btn-lg mt-3\u0026#34; \u0026gt;\u0026lt;i class=\u0026#34;bi-arrow-left-circle me-2\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; Back\u0026lt;/a \u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; @vite(\u0026#39;resources/js/app.js\u0026#39;) \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 9. Menghapus Data dari Database Buat Builder Query pada method destroy() di dalam file EmployeeController kemudian redirect Route ke halaman Employee List.\npublic function destroy(string $id) { // QUERY BUILDER DB::table(\u0026#39;employees\u0026#39;) -\u0026gt;where(\u0026#39;id\u0026#39;, $id) -\u0026gt;delete(); return redirect()-\u0026gt;route(\u0026#39;employees.index\u0026#39;); } 10. Tugas Praktekkan seluruh langkah-langkah yang ada di atas secara INDIVIDU. Buat Fitur Edit untuk melengkapi hasil akhir dari tutorial ini. Ubah semua query yang ditulis dengan RAW SQL QUERY menjadi dengan pendekatan QUERY BUILDER. Note\nArtikel ini merupakan bagian dari: Kumpulan Modul Belajar Dasar Pemrograman Framework Laravel\n"},{"section":"Blog","slug":"/blog/pengenalan-controller-dan-view-pada-laravel/","title":"Modul #04 Belajar Pemrograman Framework Laravel Tahap Dasar: Pengenalan Controller dan View pada Laravel","description":"Modul #04 Belajar Pemrograman Framework Laravel Tahap Dasar: Pengenalan Controller dan View pada Laravel","date":"September 10, 2023","image":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n  \n    \n      \n    \n\n\n    \n    \n\n\n    \n    \n      \n      \n    \n    \n    \n\n\n    \n    \n      \n      \n        \n        \n        \n        \n        \n        \n\n\n        \n        \n\n\n        \u003cimg\n          \n            src=\"/images/blog/controller-view-laravel_hu27b542d529c3943c709dcd7f8b78b8e4_62539_420x0_resize_q90_h2_lanczos_3.webp\" loading=\"lazy\" decoding=\"async\"\n          \n\n          alt=\"\"\n          class=\"  img\"\n          width=\"420\"\n          height=\"236\"\n          onerror=\"this.onerror='null';this.src='\\/images\\/blog\\/controller-view-laravel_hu27b542d529c3943c709dcd7f8b78b8e4_62539_420x0_resize_lanczos_3.png';\" /\u003e\n\n        \n      \n      \n    \n    \n  \n\n\n  \n","imageSM":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n  \n    \n      \n    \n\n\n    \n    \n\n\n    \n    \n      \n      \n    \n    \n    \n\n\n    \n    \n      \n      \n        \n        \n        \n        \n        \n        \n          \n          \n          \n          \n        \n\n\n        \n        \n\n\n        \u003cimg\n          \n            src=\"/images/blog/controller-view-laravel_hu27b542d529c3943c709dcd7f8b78b8e4_62539_100x100_fill_q90_h2_lanczos_smart1_3.webp\" loading=\"lazy\" decoding=\"async\"\n          \n\n          alt=\"\"\n          class=\"  img\"\n          width=\"100\"\n          height=\"100\"\n          onerror=\"this.onerror='null';this.src='\\/images\\/blog\\/controller-view-laravel_hu27b542d529c3943c709dcd7f8b78b8e4_62539_100x100_fill_lanczos_smart1_3.png';\" /\u003e\n\n        \n      \n      \n    \n    \n  \n\n\n  \n","searchKeyword":"","categories":"Technology","tags":"modul, pemrograman, framework, laravel, controller, view","content":" Note\nArtikel ini merupakan bagian dari: Kumpulan Modul Belajar Dasar Pemrograman Framework Laravel\nPada modul kali ini kita akan melanjutkan untuk belajar tentang Controller dan View pada laravel. Materi tentang Controller dan View akan diilustrasikan dalam bentuk studi kasus sederhana secara bertahap. Kegiatan ini agar kita dapat memahami dan menerapkan penggunaan Controller dan View pada framework Laravel.\n1. Generate Laravel Project dan Laravel UI Buat project laravel baru via composer\ncomposer create-project laravel/laravel your-project-name Masuk ke dalam folder project laravel yang baru saja dibuat, kemudian install package Laravel UI.\ncomposer require laravel/ui Generate scaffolding untuk project Laravel berbasis CSS framework Bootstrap.\nphp artisan ui bootstrap Jalankan script di bawah ini untuk compile scafolding Bootstrap yang barusan di-setup.\nnpm install Jalankan script di bawah ini untuk mengaktifkan local development server Laravel sehingga aplikasi web dapat diakses melalui browser.\nphp artisan serve 2. Bunding Asset dengan Vite Download dan install NodeJS terbaru via https://nodejs.org/en/download/ Periksa hasil instalasi Anda. Ketik script ini di prompt perintah Anda:\nnode -v npm -v Install semua dependencies yang dibutuhkan untuk Bundling Asset dengan Vite, dengan mengetikkan perintah:\nnpm install Terapkan fitur “Refreshing on Save” dengan memeriksa file konfigurasi file vite pada vite.config.js dan sesuaikan seperti gambar di bawah ini.\nimport { defineConfig } from \u0026#34;vite\u0026#34;; import laravel from \u0026#34;laravel-vite-plugin\u0026#34;; export default defineConfig({ plugins: [ laravel({ input: [\u0026#34;resources/sass/app.scss\u0026#34;, \u0026#34;resources/js/app.js\u0026#34;], refresh: true, }), ], }); Terapkan fitur “Processing Static Assets With Vite” dengan buka file /resources/js/app.js lalu sesuaikan kode program seperti di bawah ini. Vite akan merujuk pada path direktori yang kita definiskan untuk mengambil aset gambar atau image yang kita butuhkan nantinya.\nimport \u0026#34;./bootstrap\u0026#34;; import.meta.glob([\u0026#34;../images/**\u0026#34;]); Buat folder pada /resources dengan nama images. Letakkan aset gambar atau image yang akan kita gunakan pada website kita pada folder tersebut.\nBuka file View bernama welcome.blade.php. Hapus seluruh kode program yang ada. Kemudian, letakkan dan arahkan file css dan javascript yang telah didefinisikan di atas, pada file view (blade) menggunakan Blade Directive @vite(). Panggil asset gambar atau image dengan pendekatan Vite seperti di bawah ini.\n\u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34; /\u0026gt; \u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;IE=edge\u0026#34; /\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;Belajar Controller \u0026amp; View pada Laravel\u0026lt;/title\u0026gt; @vite(\u0026#39;resources/sass/app.scss\u0026#39;) \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;div class=\u0026#34;container text-center my-5\u0026#34;\u0026gt; \u0026lt;h1 class=\u0026#34;mb-4\u0026#34;\u0026gt;Belajar Controller \u0026amp; View pada Laravel\u0026lt;/h1\u0026gt; {{-- Contoh cara mereferensikan gambar di dalam file blade dengan menggunakan pendekatan Vite --}} \u0026lt;img class=\u0026#34;img-thumbnail\u0026#34; src=\u0026#34;{{ Vite::asset(\u0026#39;resources/images/laravel.png\u0026#39;) }}\u0026#34; alt=\u0026#34;image\u0026#34; /\u0026gt; \u0026lt;div class=\u0026#34;col-md-2 offset-md-5 mt-4\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;d-grid gap-2\u0026#34;\u0026gt; \u0026lt;a class=\u0026#34;btn btn-dark\u0026#34; href=\u0026#34;\u0026#34;\u0026gt;Home\u0026lt;/a\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; @vite(\u0026#39;resources/js/app.js\u0026#39;) \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Jalankan Vite.\nUntuk mode development (jalankan ini saja jika sedang development): npm run dev Atau untuk mode production (ketika akan deploy ke server): npm run build Pastikan Vite Connected melalui Tab Console seperti di bawah ini.\nJika sudah berhasil maka ketika kita mengubah kode program pada file css, blade, ataupun javascript, maka browser akan melakukan reload secara otomatis.\n3. Install Bootstrap dan Bootstrap Icons Terbaru pada Project Laravel Jalankan perintah berikut pada project laravel anda untuk mengintal bootstrap, popper dan bootstrap icons terbaru.\nnpm install bootstrap@5.3.0-alpha3 bootstrap-icons @popperjs/core Di dalam project laravel anda, buka file resources\\sass\\app.scss dan tambahkan:\n@import \u0026#34;bootstrap-icons/font/bootstrap-icons.css\u0026#34;; Hapus atau Comment kode import Font \u0026amp; import Variables pada file resources\\sass\\app.scss. Kode program akan terlihat seperti di bawah ini:\n// Fonts // @import url(\u0026#34;https://fonts.bunny.net/css?family=Nunito\u0026#34;); // Variables // @import \u0026#34;variables\u0026#34;; // Bootstrap @import \u0026#34;bootstrap/scss/bootstrap\u0026#34;; @import \u0026#34;bootstrap-icons/font/bootstrap-icons.css\u0026#34;; 4. Praktik Halaman Home Generate sebuah Basic Controller dengan nama HomeController menggunakan perintah Artisan berikut ini. File Controller akan secara otomatis dibuatkan dan diletakkan pada folder app/Http/Controllers/.\nphp artisan make:controller HomeController Buka file /routes/web.php kemudian buat Route dengan kode seperti di bawah ini:\nRoute::get(\u0026#39;home\u0026#39;, [HomeController::class, \u0026#39;index\u0026#39;])-\u0026gt;name(\u0026#39;home\u0026#39;); Pastikan kode di bawah ini ada di bagian atas file /routes/web.php.\nuse App\\Http\\Controllers\\HomeController; Sesuaikan kode program pada file HomeController tersebut seperti di bawah ini:\n\u0026lt;?php namespace App\\Http\\Controllers; use Illuminate\\Http\\Request; class HomeController extends Controller { function index() { $pageTitle = \u0026#39;Home\u0026#39;; return view(\u0026#39;home\u0026#39;, [\u0026#39;pageTitle\u0026#39; =\u0026gt; $pageTitle]); } } Buat file View dengan nama home.blade.php pada folder resources/views/. Sesuaikan kode program pada file View tersebut seperti di bawah ini:\n\u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34; /\u0026gt; \u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;IE=edge\u0026#34; /\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;{{ $pageTitle }}\u0026lt;/title\u0026gt; @vite(\u0026#39;resources/sass/app.scss\u0026#39;) \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;nav class=\u0026#34;navbar navbar-expand-md navbar-dark bg-primary\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;container\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;home\u0026#39;) }}\u0026#34; class=\u0026#34;navbar-brand mb-0 h1\u0026#34; \u0026gt;\u0026lt;i class=\u0026#34;bi-hexagon-fill me-2\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; Data Master\u0026lt;/a \u0026gt; \u0026lt;button type=\u0026#34;button\u0026#34; class=\u0026#34;navbar-toggler\u0026#34; data-bs-toggle=\u0026#34;collapse\u0026#34; data-bs-target=\u0026#34;#navbarSupportedContent\u0026#34; \u0026gt; \u0026lt;span class=\u0026#34;navbar-toggler-icon\u0026#34;\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;div class=\u0026#34;collapse navbar-collapse\u0026#34; id=\u0026#34;navbarSupportedContent\u0026#34;\u0026gt; \u0026lt;hr class=\u0026#34;d-lg-none text-white-50\u0026#34; /\u0026gt; \u0026lt;ul class=\u0026#34;navbar-nav flex-row flex-wrap\u0026#34;\u0026gt; \u0026lt;li class=\u0026#34;nav-item col-2 col-md-auto\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;home\u0026#39;) }}\u0026#34; class=\u0026#34;nav-link active\u0026#34;\u0026gt;Home\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;nav-item col-2 col-md-auto\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;employees.index\u0026#39;) }}\u0026#34; class=\u0026#34;nav-link\u0026#34; \u0026gt;Employee List\u0026lt;/a \u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;hr class=\u0026#34;d-lg-none text-white-50\u0026#34; /\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;profile\u0026#39;) }}\u0026#34; class=\u0026#34;btn btn-outline-light my-2 ms-md-auto\u0026#34; \u0026gt;\u0026lt;i class=\u0026#34;bi-person-circle me-1\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; My Profile\u0026lt;/a \u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/nav\u0026gt; \u0026lt;div class=\u0026#34;container mt-4\u0026#34;\u0026gt; \u0026lt;h4\u0026gt;{{ $pageTitle }}\u0026lt;/h4\u0026gt; \u0026lt;hr /\u0026gt; \u0026lt;div class=\u0026#34;d-flex align-items-center py-2 px-4 bg-light rounded-3 border\u0026#34; \u0026gt; \u0026lt;div class=\u0026#34;bi-house-fill me-3 fs-1\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;h4 class=\u0026#34;mb-0\u0026#34;\u0026gt;Well done! this is {{ $pageTitle }}.\u0026lt;/h4\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; @vite(\u0026#39;resources/js/app.js\u0026#39;) \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Pertanyaan:\nJelaskan dan dokumentasikan setiap kode program yang anda kerjakan di atas! Buka file View welcome.blade.php, arahkan button Home ke Route dengan nama “home” yang telah dibuat pada Bab ini. 5. Praktik Halaman My Profile Generate sebuah Single Action Controller dengan nama ProfileController menggunakan perintah Artisan berikut ini. File Controller akan secara otomatis dibuatkan dan diletakkan pada folder app/Http/Controllers/.\nphp artisan make:controller ProfileController --invokable Buka file /routes/web.php kemudian buat Route dengan kode seperti di bawah ini:\nRoute::get(\u0026#39;profile\u0026#39;, ProfileController::class)-\u0026gt;name(\u0026#39;profile\u0026#39;); Pastikan kode di bawah ini ada di bagian atas file /routes/web.php.\nuse App\\Http\\Controllers\\ProfileController; Sesuaikan kode program pada file ProfileController tersebut seperti di bawah ini:\n\u0026lt;?php namespace App\\Http\\Controllers; use Illuminate\\Http\\Request; class ProfileController extends Controller { /** * Handle the incoming request. */ public function __invoke(Request $request) { $pageTitle = \u0026#39;Profile\u0026#39;; return view(\u0026#39;profile\u0026#39;, [\u0026#39;pageTitle\u0026#39; =\u0026gt; $pageTitle]); } } Buat file View dengan nama profile.blade.php pada folder resources/views/. Sesuaikan kode program pada file View tersebut seperti di bawah ini:\n\u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34; /\u0026gt; \u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;IE=edge\u0026#34; /\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;{{ $pageTitle }}\u0026lt;/title\u0026gt; @vite(\u0026#39;resources/sass/app.scss\u0026#39;) \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;nav class=\u0026#34;navbar navbar-expand-md navbar-dark bg-primary\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;container\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;home\u0026#39;) }}\u0026#34; class=\u0026#34;navbar-brand mb-0 h1\u0026#34; \u0026gt;\u0026lt;i class=\u0026#34;bi-hexagon-fill me-2\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; Data Master\u0026lt;/a \u0026gt; \u0026lt;button type=\u0026#34;button\u0026#34; class=\u0026#34;navbar-toggler\u0026#34; data-bs-toggle=\u0026#34;collapse\u0026#34; data-bs-target=\u0026#34;#navbarSupportedContent\u0026#34; \u0026gt; \u0026lt;span class=\u0026#34;navbar-toggler-icon\u0026#34;\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;div class=\u0026#34;collapse navbar-collapse\u0026#34; id=\u0026#34;navbarSupportedContent\u0026#34;\u0026gt; \u0026lt;hr class=\u0026#34;d-lg-none text-white-50\u0026#34; /\u0026gt; \u0026lt;ul class=\u0026#34;navbar-nav flex-row flex-wrap\u0026#34;\u0026gt; \u0026lt;li class=\u0026#34;nav-item col-6 col-md-auto\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;home\u0026#39;) }}\u0026#34; class=\u0026#34;nav-link\u0026#34;\u0026gt;Home\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;nav-item col-6 col-md-auto\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;employees.index\u0026#39;) }}\u0026#34; class=\u0026#34;nav-link\u0026#34; \u0026gt;Employee List\u0026lt;/a \u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;hr class=\u0026#34;d-lg-none text-white-50\u0026#34; /\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;profile\u0026#39;) }}\u0026#34; class=\u0026#34;btn btn-outline-light my-2 ms-md-auto\u0026#34; \u0026gt;\u0026lt;i class=\u0026#34;bi-person-circle me-1\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; My Profile\u0026lt;/a \u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/nav\u0026gt; \u0026lt;div class=\u0026#34;container mt-4\u0026#34;\u0026gt; \u0026lt;h4\u0026gt;{{ $pageTitle }}\u0026lt;/h4\u0026gt; \u0026lt;hr /\u0026gt; \u0026lt;div class=\u0026#34;d-flex align-items-center py-2 px-4 bg-light rounded-3 border\u0026#34; \u0026gt; \u0026lt;div class=\u0026#34;bi-person-circle me-3 fs-1\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;h4 class=\u0026#34;mb-0\u0026#34;\u0026gt;Well done! this is {{ $pageTitle }}.\u0026lt;/h4\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; @vite(\u0026#39;resources/js/app.js\u0026#39;) \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Pertanyaan:\nJelaskan dan dokumentasikan setiap kode program yang anda kerjakan di atas! 6. Praktik Halaman Employee List Generate sebuah Resource Controller dengan nama EmployeeController menggunakan perintah Artisan berikut ini. File Controller akan secara otomatis dibuatkan dan diletakkan pada folder app/Http/Controllers/.\nphp artisan make:controller EmployeeController --resource Buka file /routes/web.php kemudian buat Route dengan kode seperti di bawah ini:\nRoute::resource(\u0026#39;employees\u0026#39;, EmployeeController::class); Pastikan kode di bawah ini ada di bagian atas file /routes/web.php.\nuse App\\Http\\Controllers\\EmployeeController; Sesuaikan kode program function index() pada file EmployeeController tersebut seperti di bawah ini:\npublic function index() { $pageTitle = \u0026#39;Employee List\u0026#39;; return view(\u0026#39;employee.index\u0026#39;, [\u0026#39;pageTitle\u0026#39; =\u0026gt; $pageTitle]); } Buat folder baru dengan nama /employee pada resources/views/. Kemudian buat file View dengan nama index.blade.php di dalam folder tersebut. Sesuaikan kode program pada file View tersebut seperti di bawah ini:\n\u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34; /\u0026gt; \u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;IE=edge\u0026#34; /\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;{{ $pageTitle }}\u0026lt;/title\u0026gt; @vite(\u0026#39;resources/sass/app.scss\u0026#39;) \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;nav class=\u0026#34;navbar navbar-expand-md navbar-dark bg-primary\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;container\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;home\u0026#39;) }}\u0026#34; class=\u0026#34;navbar-brand mb-0 h1\u0026#34; \u0026gt;\u0026lt;i class=\u0026#34;bi-hexagon-fill me-2\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; Data Master\u0026lt;/a \u0026gt; \u0026lt;button type=\u0026#34;button\u0026#34; class=\u0026#34;navbar-toggler\u0026#34; data-bs-toggle=\u0026#34;collapse\u0026#34; data-bs-target=\u0026#34;#navbarSupportedContent\u0026#34; \u0026gt; \u0026lt;span class=\u0026#34;navbar-toggler-icon\u0026#34;\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;div class=\u0026#34;collapse navbar-collapse\u0026#34; id=\u0026#34;navbarSupportedContent\u0026#34;\u0026gt; \u0026lt;hr class=\u0026#34;d-lg-none text-white-50\u0026#34; /\u0026gt; \u0026lt;ul class=\u0026#34;navbar-nav flex-row flex-wrap\u0026#34;\u0026gt; \u0026lt;li class=\u0026#34;nav-item col-2 col-md-auto\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;home\u0026#39;) }}\u0026#34; class=\u0026#34;nav-link\u0026#34;\u0026gt;Home\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;nav-item col-2 col-md-auto\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;employees.index\u0026#39;) }}\u0026#34; class=\u0026#34;nav-link active\u0026#34; \u0026gt;Employee List\u0026lt;/a \u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;hr class=\u0026#34;d-lg-none text-white-50\u0026#34; /\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;profile\u0026#39;) }}\u0026#34; class=\u0026#34;btn btn-outline-light my-2 ms-md-auto\u0026#34; \u0026gt;\u0026lt;i class=\u0026#34;bi-person-circle me-1\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; My Profile\u0026lt;/a \u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/nav\u0026gt; \u0026lt;div class=\u0026#34;container mt-4\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;row mb-0\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;col-lg-9 col-xl-10\u0026#34;\u0026gt; \u0026lt;h4 class=\u0026#34;mb-3\u0026#34;\u0026gt;{{ $pageTitle }}\u0026lt;/h4\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-lg-3 col-xl-2\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;d-grid gap-2\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;employees.create\u0026#39;) }}\u0026#34; class=\u0026#34;btn btn-primary\u0026#34; \u0026gt;Create Employee\u0026lt;/a \u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;hr /\u0026gt; \u0026lt;div class=\u0026#34;table-responsive border p-3 rounded-3\u0026#34;\u0026gt; \u0026lt;table class=\u0026#34;table table-bordered table-hover table-striped mb-0 bg-white\u0026#34; \u0026gt; \u0026lt;thead\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;th\u0026gt;First Name\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;Last Name\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;Email\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;Age\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;\u0026lt;/th\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/thead\u0026gt; \u0026lt;tbody\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;Purnama\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;Anaking\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;purnama.anaking@gmail.com\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;20\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;div class=\u0026#34;d-flex\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;employees.show\u0026#39;, [\u0026#39;employee\u0026#39; =\u0026gt; 1]) }}\u0026#34; class=\u0026#34;btn btn-outline-dark btn-sm me-2\u0026#34; \u0026gt;\u0026lt;i class=\u0026#34;bi-person-lines-fill\u0026#34;\u0026gt;\u0026lt;/i \u0026gt;\u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;employees.edit\u0026#39;, [\u0026#39;employee\u0026#39; =\u0026gt; 1]) }}\u0026#34; class=\u0026#34;btn btn-outline-dark btn-sm me-2\u0026#34; \u0026gt;\u0026lt;i class=\u0026#34;bi-pencil-square\u0026#34;\u0026gt;\u0026lt;/i \u0026gt;\u0026lt;/a\u0026gt; \u0026lt;div\u0026gt; \u0026lt;form action=\u0026#34;{{ route(\u0026#39;employees.destroy\u0026#39;, [\u0026#39;employee\u0026#39; =\u0026gt; 1]) }}\u0026#34; method=\u0026#34;POST\u0026#34; \u0026gt; @csrf @method(\u0026#39;delete\u0026#39;) \u0026lt;button type=\u0026#34;submit\u0026#34; class=\u0026#34;btn btn-outline-dark btn-sm me-2\u0026#34; \u0026gt; \u0026lt;i class=\u0026#34;bi-trash\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;Adzanil\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;Rachmadhi\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;adzanil.rachmadhi@gmail.com\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;25\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;div class=\u0026#34;d-flex\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;employees.show\u0026#39;, [\u0026#39;employee\u0026#39; =\u0026gt; 2]) }}\u0026#34; class=\u0026#34;btn btn-outline-dark btn-sm me-2\u0026#34; \u0026gt;\u0026lt;i class=\u0026#34;bi-person-lines-fill\u0026#34;\u0026gt;\u0026lt;/i \u0026gt;\u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;employees.edit\u0026#39;, [\u0026#39;employee\u0026#39; =\u0026gt; 2]) }}\u0026#34; class=\u0026#34;btn btn-outline-dark btn-sm me-2\u0026#34; \u0026gt;\u0026lt;i class=\u0026#34;bi-pencil-square\u0026#34;\u0026gt;\u0026lt;/i \u0026gt;\u0026lt;/a\u0026gt; \u0026lt;div\u0026gt; \u0026lt;form action=\u0026#34;{{ route(\u0026#39;employees.destroy\u0026#39;, [\u0026#39;employee\u0026#39; =\u0026gt; 2]) }}\u0026#34; method=\u0026#34;POST\u0026#34; \u0026gt; @csrf @method(\u0026#39;delete\u0026#39;) \u0026lt;button type=\u0026#34;submit\u0026#34; class=\u0026#34;btn btn-outline-dark btn-sm me-2\u0026#34; \u0026gt; \u0026lt;i class=\u0026#34;bi-trash\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;Berlian\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;Rahmy\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;berlian.rahmy@gmail.com\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;23\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;div class=\u0026#34;d-flex\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;employees.show\u0026#39;, [\u0026#39;employee\u0026#39; =\u0026gt; 3]) }}\u0026#34; class=\u0026#34;btn btn-outline-dark btn-sm me-2\u0026#34; \u0026gt;\u0026lt;i class=\u0026#34;bi-person-lines-fill\u0026#34;\u0026gt;\u0026lt;/i \u0026gt;\u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;employees.edit\u0026#39;, [\u0026#39;employee\u0026#39; =\u0026gt; 3]) }}\u0026#34; class=\u0026#34;btn btn-outline-dark btn-sm me-2\u0026#34; \u0026gt;\u0026lt;i class=\u0026#34;bi-pencil-square\u0026#34;\u0026gt;\u0026lt;/i \u0026gt;\u0026lt;/a\u0026gt; \u0026lt;div\u0026gt; \u0026lt;form action=\u0026#34;{{ route(\u0026#39;employees.destroy\u0026#39;, [\u0026#39;employee\u0026#39; =\u0026gt; 3]) }}\u0026#34; method=\u0026#34;POST\u0026#34; \u0026gt; @csrf @method(\u0026#39;delete\u0026#39;) \u0026lt;button type=\u0026#34;submit\u0026#34; class=\u0026#34;btn btn-outline-dark btn-sm me-2\u0026#34; \u0026gt; \u0026lt;i class=\u0026#34;bi-trash\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/tbody\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; @vite(\u0026#39;resources/js/app.js\u0026#39;) \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Pertanyaan:\nJelaskan dan dokumentasikan setiap kode program yang anda kerjakan di atas! Tunjukkan dan buktikan ada Route apa saja yang dihasilkan pada Bab ini! 7. Praktik Halaman Create Employee Sesuaikan kode program function create() pada file EmployeeController tersebut seperti di bawah ini:\npublic function create() { $pageTitle = \u0026#39;Create Employee\u0026#39;; return view(\u0026#39;employee.create\u0026#39;, compact(\u0026#39;pageTitle\u0026#39;)); } Buat file View dengan nama create.blade.php pada /resources/views/employee/. Sesuaikan kode program pada file View tersebut seperti di bawah ini:\n\u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34; /\u0026gt; \u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;IE=edge\u0026#34; /\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;{{ $pageTitle }}\u0026lt;/title\u0026gt; @vite(\u0026#39;resources/sass/app.scss\u0026#39;) \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;nav class=\u0026#34;navbar navbar-expand-md navbar-dark bg-primary\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;container\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;home\u0026#39;) }}\u0026#34; class=\u0026#34;navbar-brand mb-0 h1\u0026#34; \u0026gt;\u0026lt;i class=\u0026#34;bi-hexagon-fill me-2\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; Data Master\u0026lt;/a \u0026gt; \u0026lt;button type=\u0026#34;button\u0026#34; class=\u0026#34;navbar-toggler\u0026#34; data-bs-toggle=\u0026#34;collapse\u0026#34; data-bs-target=\u0026#34;#navbarSupportedContent\u0026#34; \u0026gt; \u0026lt;span class=\u0026#34;navbar-toggler-icon\u0026#34;\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;div class=\u0026#34;collapse navbar-collapse\u0026#34; id=\u0026#34;navbarSupportedContent\u0026#34;\u0026gt; \u0026lt;hr class=\u0026#34;d-lg-none text-white-50\u0026#34; /\u0026gt; \u0026lt;ul class=\u0026#34;navbar-nav flex-row flex-wrap\u0026#34;\u0026gt; \u0026lt;li class=\u0026#34;nav-item col-2 col-md-auto\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;home\u0026#39;) }}\u0026#34; class=\u0026#34;nav-link\u0026#34;\u0026gt;Home\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;nav-item col-2 col-md-auto\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;employees.index\u0026#39;) }}\u0026#34; class=\u0026#34;nav-link\u0026#34; \u0026gt;Employee List\u0026lt;/a \u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;hr class=\u0026#34;d-lg-none text-white-50\u0026#34; /\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;profile\u0026#39;) }}\u0026#34; class=\u0026#34;btn btn-outline-light my-2 ms-md-auto\u0026#34; \u0026gt;\u0026lt;i class=\u0026#34;bi-person-circle me-1\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; My Profile\u0026lt;/a \u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/nav\u0026gt; \u0026lt;div class=\u0026#34;container-sm mt-5\u0026#34;\u0026gt; \u0026lt;form action=\u0026#34;{{ route(\u0026#39;employees.store\u0026#39;) }}\u0026#34; method=\u0026#34;POST\u0026#34;\u0026gt; @csrf \u0026lt;div class=\u0026#34;row justify-content-center\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;p-5 bg-light rounded-3 border col-xl-6\u0026#34;\u0026gt; @if ($errors-\u0026gt;any()) @foreach ($errors-\u0026gt;all() as $error) \u0026lt;div class=\u0026#34;alert alert-danger alert-dismissible fade show\u0026#34;\u0026gt; {{ $error }} \u0026lt;button type=\u0026#34;button\u0026#34; class=\u0026#34;btn-close\u0026#34; data-bs-dismiss=\u0026#34;alert\u0026#34; aria-label=\u0026#34;Close\u0026#34; \u0026gt;\u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; @endforeach @endif \u0026lt;div class=\u0026#34;mb-3 text-center\u0026#34;\u0026gt; \u0026lt;i class=\u0026#34;bi-person-circle fs-1\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; \u0026lt;h4\u0026gt;Create Employee\u0026lt;/h4\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;hr /\u0026gt; \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;col-md-6 mb-3\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;firstName\u0026#34; class=\u0026#34;form-label\u0026#34;\u0026gt;First Name\u0026lt;/label\u0026gt; \u0026lt;input class=\u0026#34;form-control\u0026#34; type=\u0026#34;text\u0026#34; name=\u0026#34;firstName\u0026#34; id=\u0026#34;firstName\u0026#34; value=\u0026#34;\u0026#34; placeholder=\u0026#34;Enter First Name\u0026#34; /\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-md-6 mb-3\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;lastName\u0026#34; class=\u0026#34;form-label\u0026#34;\u0026gt;Last Name\u0026lt;/label\u0026gt; \u0026lt;input class=\u0026#34;form-control\u0026#34; type=\u0026#34;text\u0026#34; name=\u0026#34;lastName\u0026#34; id=\u0026#34;lastName\u0026#34; value=\u0026#34;\u0026#34; placeholder=\u0026#34;Enter Last Name\u0026#34; /\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-md-6 mb-3\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;email\u0026#34; class=\u0026#34;form-label\u0026#34;\u0026gt;Email\u0026lt;/label\u0026gt; \u0026lt;input class=\u0026#34;form-control\u0026#34; type=\u0026#34;text\u0026#34; name=\u0026#34;email\u0026#34; id=\u0026#34;email\u0026#34; value=\u0026#34;\u0026#34; placeholder=\u0026#34;Enter Email\u0026#34; /\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-md-6 mb-3\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;age\u0026#34; class=\u0026#34;form-label\u0026#34;\u0026gt;Age\u0026lt;/label\u0026gt; \u0026lt;input class=\u0026#34;form-control\u0026#34; type=\u0026#34;text\u0026#34; name=\u0026#34;age\u0026#34; id=\u0026#34;age\u0026#34; value=\u0026#34;\u0026#34; placeholder=\u0026#34;Enter Age\u0026#34; /\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;hr /\u0026gt; \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;col-md-6 d-grid\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;employees.index\u0026#39;) }}\u0026#34; class=\u0026#34;btn btn-outline-dark btn-lg mt-3\u0026#34; \u0026gt;\u0026lt;i class=\u0026#34;bi-arrow-left-circle me-2\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; Cancel\u0026lt;/a \u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-md-6 d-grid\u0026#34;\u0026gt; \u0026lt;button type=\u0026#34;submit\u0026#34; class=\u0026#34;btn btn-dark btn-lg mt-3\u0026#34;\u0026gt; \u0026lt;i class=\u0026#34;bi-check-circle me-2\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; Save \u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/div\u0026gt; @vite(\u0026#39;resources/js/app.js\u0026#39;) \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Sesuaikan kode program function store() pada file EmployeeController tersebut seperti di bawah ini:\npublic function store(Request $request) { $messages = [ \u0026#39;required\u0026#39; =\u0026gt; \u0026#39;:Attribute harus diisi.\u0026#39;, \u0026#39;email\u0026#39; =\u0026gt; \u0026#39;Isi :attribute dengan format yang benar\u0026#39;, \u0026#39;numeric\u0026#39; =\u0026gt; \u0026#39;Isi :attribute dengan angka\u0026#39; ]; $validator = Validator::make($request-\u0026gt;all(), [ \u0026#39;firstName\u0026#39; =\u0026gt; \u0026#39;required\u0026#39;, \u0026#39;lastName\u0026#39; =\u0026gt; \u0026#39;required\u0026#39;, \u0026#39;email\u0026#39; =\u0026gt; \u0026#39;required|email\u0026#39;, \u0026#39;age\u0026#39; =\u0026gt; \u0026#39;required|numeric\u0026#39;, ], $messages); if ($validator-\u0026gt;fails()) { return redirect()-\u0026gt;back()-\u0026gt;withErrors($validator)-\u0026gt;withInput(); } return $request-\u0026gt;all(); } Pertanyaan:\nJelaskan dan dokumentasikan setiap kode program yang anda kerjakan di atas! Tunjukkan penerapan “Passing Data to Views” pada Bab ini. Tunjukkan penerapan “CSRF Protection” pada Bab ini. Terapkan “Displaying The Validation Errors” pada Bab ini yang hasil akhirnya seperti gambar di bawah ini. Terapkan “Repopulating Forms” pada Bab ini sehingga ketika muncul pesan error pada saat submit form, nilai yang sudah diisikan pada form tidak ter-reset tetapi tetap muncul pada form tersebut. Note\nArtikel ini merupakan bagian dari: Kumpulan Modul Belajar Dasar Pemrograman Framework Laravel\n"},{"section":"Blog","slug":"/blog/routing-dan-bundling-asset-di-laravel/","title":"Modul #03 Belajar Pemrograman Framework Laravel Tahap Dasar: Routing dan Bundling Asset di Laravel","description":"Modul #03 Belajar Pemrograman Framework Laravel Tahap Dasar: Routing dan Bundling Asset di Laravel","date":"August 28, 2023","image":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n  \n    \n      \n    \n\n\n    \n    \n\n\n    \n    \n      \n      \n    \n    \n    \n\n\n    \n    \n      \n      \n        \n        \n        \n        \n        \n        \n\n\n        \n        \n\n\n        \u003cimg\n          \n            src=\"/images/blog/laravel-routing_huddc138ef70a9588ec03a66089e78ea89_59406_420x0_resize_q90_h2_lanczos_3.webp\" loading=\"lazy\" decoding=\"async\"\n          \n\n          alt=\"\"\n          class=\"  img\"\n          width=\"420\"\n          height=\"236\"\n          onerror=\"this.onerror='null';this.src='\\/images\\/blog\\/laravel-routing_huddc138ef70a9588ec03a66089e78ea89_59406_420x0_resize_lanczos_3.png';\" /\u003e\n\n        \n      \n      \n    \n    \n  \n\n\n  \n","imageSM":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n  \n    \n      \n    \n\n\n    \n    \n\n\n    \n    \n      \n      \n    \n    \n    \n\n\n    \n    \n      \n      \n        \n        \n        \n        \n        \n        \n          \n          \n          \n          \n        \n\n\n        \n        \n\n\n        \u003cimg\n          \n            src=\"/images/blog/laravel-routing_huddc138ef70a9588ec03a66089e78ea89_59406_100x100_fill_q90_h2_lanczos_smart1_3.webp\" loading=\"lazy\" decoding=\"async\"\n          \n\n          alt=\"\"\n          class=\"  img\"\n          width=\"100\"\n          height=\"100\"\n          onerror=\"this.onerror='null';this.src='\\/images\\/blog\\/laravel-routing_huddc138ef70a9588ec03a66089e78ea89_59406_100x100_fill_lanczos_smart1_3.png';\" /\u003e\n\n        \n      \n      \n    \n    \n  \n\n\n  \n","searchKeyword":"","categories":"Technology","tags":"modul, pemrograman, framework, laravel, bootstrap, routing, vite","content":" Note\nArtikel ini merupakan bagian dari: Kumpulan Modul Belajar Dasar Pemrograman Framework Laravel\nPada modul ini kita akan mulai memasuki materi awal pada pembelajaran framework Laravel. Kita akan mulai belajar tentang Routing di Laravel dengan berbagai macam jenisnya. Kemudian kita akan belajar tentang bundling asset pada Laravel menggunakan Vite. Kegiatan ini dilakukan agar kita dapat menerapkan konsep routing dan manajemen asset pada framework Laravel.\n1. Generate Laravel Project dan Laravel UI Buat project laravel baru via composer composer create-project laravel/laravel your-project-name Masuk ke dalam folder project laravel yang baru saja dibuat, kemudian install package Laravel UI. composer require laravel/ui Generate scaffolding untuk project Laravel berbasis CSS framework Bootstrap. php artisan ui bootstrap Jalankan script di bawah ini untuk compile scafolding Bootstrap yang barusan di-setup. npm install Jalankan script di bawah ini untuk mengaktifkan local development server Laravel sehingga aplikasi web dapat diakses melalui browser. php artisan serve 2. Bunding Asset dengan Vite Download dan install NodeJS terbaru via https://nodejs.org/en/download/ Periksa hasil instalasi Anda. Ketik script ini di prompt perintah Anda:\nnode -v npm -v Install semua dependencies yang dibutuhkan untuk Bundling Asset dengan Vite, dengan mengetikkan perintah:\nnpm install Terapkan fitur “Refreshing on Save” dengan memeriksa file konfigurasi file vite pada vite.config.js dan sesuaikan seperti gambar di bawah ini.\nimport { defineConfig } from \u0026#34;vite\u0026#34;; import laravel from \u0026#34;laravel-vite-plugin\u0026#34;; export default defineConfig({ plugins: [ laravel({ input: [\u0026#34;resources/sass/app.scss\u0026#34;, \u0026#34;resources/js/app.js\u0026#34;], refresh: true, }), ], }); Terapkan fitur “Processing Static Assets With Vite” dengan buka file /resources/js/app.js lalu sesuaikan kode program seperti di bawah ini. Vite akan merujuk pada path direktori yang kita definiskan untuk mengambil aset gambar/image yang kita butuhkan nantinya.\nimport \u0026#34;./bootstrap\u0026#34;; import.meta.glob([\u0026#34;../images/**\u0026#34;]); Buat folder pada /resources dengan nama images. Letakkan aset gambar/image yang akan kita gunakan pada website kita pada folder tersebut.\nBuka file View bernama welcome.blade.php. Hapus seluruh kode program yang ada. Kemudian, letakkan dan arahkan file css dan javascript yang telah didefinisikan di atas, pada file view (blade) menggunakan Blade Directive @vite(). Panggil asset gambar atau image dengan pendekatan Vite seperti di bawah ini.\n\u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34; /\u0026gt; \u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;IE=edge\u0026#34; /\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;Welcome\u0026lt;/title\u0026gt; @vite(\u0026#39;resources/sass/app.scss\u0026#39;) \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;div class=\u0026#34;container m-5\u0026#34;\u0026gt; {{-- Contoh cara mereferensikan gambar di dalam file blade dengan menggunakan pendekatan Vite --}} \u0026lt;img class=\u0026#34;img-thumbnail\u0026#34; src=\u0026#34;{{ Vite::asset(\u0026#39;resources/images/main.svg\u0026#39;) }}\u0026#34; alt=\u0026#34;image\u0026#34; /\u0026gt; \u0026lt;/div\u0026gt; @vite(\u0026#39;resources/js/app.js\u0026#39;) \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Jalankan Vite.\nUntuk mode development (jalankan ini saja jika sedang development): npm run dev Atau untuk mode production (ketika akan deploy ke server): npm run build Pastikan Vite Connected melalui Tab Console seperti di bawah ini. Jika sudah berhasil maka ketika kita mengubah kode program pada file css, blade, ataupun javascript, maka browser akan melakukan reload secara otomatis.\n3. Install Bootstrap dan Bootstrap Icons Terbaru pada Project Laravel Jalankan perintah berikut pada project laravel anda untuk mengintal bootstrap, popper dan bootstrap icons terbaru. npm install bootstrap@5.3.0-alpha3 bootstrap-icons @popperjs/core Di dalam project laravel anda, buka file resources\\sass\\app.scss dan tambahkan: @import \u0026#34;bootstrap-icons/font/bootstrap-icons.css\u0026#34;; Hapus atau Comment kode import Font \u0026amp; import Variables pada file resources\\sass\\app.scss. Kode program akan terlihat seperti di bawah ini: // Bootstrap @import \u0026#34;bootstrap/scss/bootstrap\u0026#34;; @import \u0026#34;bootstrap-icons/font/bootstrap-icons.css\u0026#34;; 4. Praktik Laravel Routing Buka file routes/web.php, buat sebuah Route dengan menuliskan kode program seperti di bawah ini.\nRoute::get(\u0026#39;/routing\u0026#39;, function() { return view(\u0026#39;routing\u0026#39;); }); Buat file View baru pada direktori /resources/views/ dengan nama routing.blade.php.\n\u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34; /\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34; /\u0026gt; \u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;ie=edge\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;Belajar Laravel Routing\u0026lt;/title\u0026gt; @vite(\u0026#39;resources/sass/app.scss\u0026#39;) \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;div class=\u0026#34;container m-5\u0026#34;\u0026gt; \u0026lt;h1\u0026gt;Belajar Laravel Routing\u0026lt;/h1\u0026gt; \u0026lt;div class=\u0026#34;list-group list-group-numbered mt-4\u0026#34;\u0026gt; {{-- Kode anda selanjutnya letakkan di sini --}} \u0026lt;/div\u0026gt; {{-- Khusus kode program untuk Route Groups di sini --}} \u0026lt;/div\u0026gt; @vite(\u0026#39;resources/js/app.js\u0026#39;) \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Akses halaman ini dengan mengetikkan localhost:8000/routing pada browser.\n4.1. Praktik Basic Routing Buka file routes/web.php, praktikkan Basic Routing (No View, No Controller) dengan menuliskan kode program seperti di bawah ini. Route::get(\u0026#39;/basic_routing\u0026#39;, function() { return \u0026#39;Hello World\u0026#39;; }); Buka file view routing.blade.php lalu tambahkan kode program sebagai berikut: \u0026lt;a href=\u0026#34;{{ url(\u0026#39;/basic_routing\u0026#39;) }}\u0026#34; class=\u0026#34;list-group-item list-group-item-action\u0026#34;\u0026gt; Basic Routing (No View, No Controller) \u0026lt;/a\u0026gt; 4.2. Praktik View Route Buka file routes/web.php, praktikkan View Route dengan menuliskan kode program seperti di bawah ini. Route::view(\u0026#39;/view_route\u0026#39;, \u0026#39;view_route\u0026#39;); Route::view(\u0026#39;/view_route\u0026#39;, \u0026#39;view_route\u0026#39;, [\u0026#39;name\u0026#39; =\u0026gt; \u0026#39;Purnama\u0026#39;]); Buat file View dengan nama view_route.blade.php, kemudian isikan dengan kode program seperti di bawah ini. \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34;\u0026gt; \u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;ie=edge\u0026#34;\u0026gt; \u0026lt;title\u0026gt;View Route\u0026lt;/title\u0026gt; @vite(\u0026#39;resources/sass/app.scss\u0026#39;) \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;div class=\u0026#34;container m-5\u0026#34;\u0026gt; \u0026lt;h1\u0026gt;This is from View Route\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;Hello, My name is {{ $name }}\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; @vite(\u0026#39;resources/js/app.js\u0026#39;) \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Buka file view routing.blade.php lalu tambahkan kode program sebagai berikut: \u0026lt;a href=\u0026#34;{{ url(\u0026#39;/view_route\u0026#39;) }}\u0026#34; class=\u0026#34;list-group-item list-group-item-action\u0026#34;\u0026gt; View Route \u0026lt;/a\u0026gt; 4.3. Praktik Controller Route Generate file controller dengan nama RouteController menggunakan bantuan script artisan sebagai berikut:\nphp artisan make:controller RouteController Tambahkan function bernama “index” pada class RouteController tersebut.\npublic function index() { return \u0026#34;This is from Controller\u0026#34;; } Buka file routes/web.php, praktikkan Controller Route dengan menuliskan kode program seperti di bawah ini.\nRoute::get(\u0026#39;/controller_route\u0026#39;, [RouteController::class, \u0026#39;index\u0026#39;]); Pada file routes/web.php, lihat bagian atas file tersebut, pastikan RouteController ter-import seperti kode program di bawah ini.\n\u0026lt;?php use App\\Http\\Controllers\\RouteController; use Illuminate\\Support\\Facades\\Route; Buka file view routing.blade.php lalu tambahkan kode program sebagai berikut:\n\u0026lt;a href=\u0026#34;{{ url(\u0026#39;/controller_route\u0026#39;) }}\u0026#34; class=\u0026#34;list-group-item list-group-item-action\u0026#34;\u0026gt; Controller Route \u0026lt;/a\u0026gt; 4.4. Praktik Redirect Route Buka file routes/web.php, praktikkan Redirect Route dengan menuliskan kode program seperti di bawah ini. Route::redirect(\u0026#39;/\u0026#39;, \u0026#39;/routing\u0026#39;); Buka file view routing.blade.php lalu tambahkan kode program sebagai berikut: \u0026lt;a href=\u0026#34;{{ url(\u0026#39;/\u0026#39;) }}\u0026#34; class=\u0026#34;list-group-item list-group-item-action\u0026#34;\u0026gt; Redirect Route \u0026lt;/a\u0026gt; 4.5. Praktik Route Parameter (Required Parameter) Buka file routes/web.php, praktikkan Route Parameter (Required Parameter) dengan menuliskan kode program seperti di bawah ini.\nRoute::get(\u0026#39;/user/{id}\u0026#39;, function($id) { return \u0026#34;User Id: \u0026#34;.$id; }); Route::get(\u0026#39;/posts/{post}/comments/{comment}\u0026#39;, function($postId, $commentId) { return \u0026#34;Post Id: \u0026#34;.$postId.\u0026#34;, Comment Id: \u0026#34;.$commentId; }); Buka file view routing.blade.php lalu tambahkan kode program sebagai berikut:\n\u0026lt;a href=\u0026#34;{{ url(\u0026#39;/user/12345\u0026#39;) }}\u0026#34; class=\u0026#34;list-group-item list-group-item-action\u0026#34;\u0026gt; Route Parameter (Required Parameter) - 1 \u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;{{ url(\u0026#39;/posts/01/comments/20\u0026#39;) }}\u0026#34; class=\u0026#34;list-group-item list-group-item-action\u0026#34;\u0026gt; Route Parameter (Required Parameter) - 2 \u0026lt;/a\u0026gt; 4.6. Praktik Route Parameter (Optional Parameter) Buka file routes/web.php, praktikkan Route Parameter (Optional Parameter) dengan menuliskan kode program seperti di bawah ini.\nRoute::get(\u0026#39;username/{name?}\u0026#39;, function($name = null) { return \u0026#39;Username: \u0026#39;.$name; }); Buka file view routing.blade.php lalu tambahkan kode program sebagai berikut:\n\u0026lt;a href=\u0026#34;{{ url(\u0026#39;/username\u0026#39;) }}\u0026#34; class=\u0026#34;list-group-item list-group-item-action\u0026#34;\u0026gt; Route Parameter (Optional Parameter) \u0026lt;/a\u0026gt; 4.7. Praktik Route With Regular Expression Constraints Buka file routes/web.php, praktikkan Route With Regular Expression Constraints dengan menuliskan kode program seperti di bawah ini.\nRoute::get(\u0026#39;/title/{title}\u0026#39;, function($title) { return \u0026#34;Title: \u0026#34;.$title; })-\u0026gt;where(\u0026#39;title\u0026#39;, \u0026#39;[A-Za-z]+\u0026#39;); Buka file view routing.blade.php lalu tambahkan kode program sebagai berikut:\n\u0026lt;a href=\u0026#34;{{ url(\u0026#39;/title/this-is-my-title\u0026#39;) }}\u0026#34; class=\u0026#34;list-group-item list-group-item-action\u0026#34;\u0026gt; Route With Regular Expression Constraints \u0026lt;/a\u0026gt; Jika anda test di browser akan muncul halaman warning 404 Not Found. Analisa dan jelaskan kenapa terjadi demikian!\n4.8. Praktik Named Route Buka file routes/web.php, praktikkan Named Route dengan menuliskan kode program seperti di bawah ini.\nRoute::get(\u0026#39;/profile/{profileId}\u0026#39;, [RouteController::class, \u0026#39;profile\u0026#39;])-\u0026gt;name(\u0026#39;profileRouteName\u0026#39;); Tambahkan function bernama “profile” pada class RouteController.\npublic function profile($profileId) { return \u0026#34;This is Profile from Controller, profile id: \u0026#34;.$profileId; } Buka file view routing.blade.php lalu tambahkan kode program sebagai berikut:\n\u0026lt;a href=\u0026#34;{{ route(\u0026#39;profileRouteName\u0026#39;, [\u0026#39;profileId\u0026#39; =\u0026gt; \u0026#39;123\u0026#39;]) }}\u0026#34; class=\u0026#34;list-group-item list-group-item-action\u0026#34;\u0026gt; Named Route \u0026lt;/a\u0026gt; 4.9. Praktik Route Priority Buka file routes/web.php, praktikkan Route Priority dengan menuliskan kode program seperti di bawah ini. Route::get(\u0026#39;/route_priority/{rpId}\u0026#39;, function($rpId) { return \u0026#34;This is Route One\u0026#34;; }); Route::get(\u0026#39;/route_priority/user\u0026#39;, function() { return \u0026#34;This is Route 1\u0026#34;; }); Route::get(\u0026#39;/route_priority/user\u0026#39;, function() { return \u0026#34;This is Route 2\u0026#34;; }); Comment Route yang pertama di atas, seperti kode program di bawah ini // Route::get(\u0026#39;/route_priority/{rpId}\u0026#39;, function($rpId) { // return \u0026#34;This is Route One\u0026#34;; // }); Route::get(\u0026#39;/route_priority/user\u0026#39;, function() { return \u0026#34;This is Route 1\u0026#34;; }); Route::get(\u0026#39;/route_priority/user\u0026#39;, function() { return \u0026#34;This is Route 2\u0026#34;; }); Buka file view routing.blade.php lalu tambahkan kode program sebagai berikut: \u0026lt;a href=\u0026#34;{{ url(\u0026#39;/route_priority/user\u0026#39;) }}\u0026#34; class=\u0026#34;list-group-item list-group-item-action\u0026#34;\u0026gt; Route Priority \u0026lt;/a\u0026gt; Test pada browser dengan mengetikkan localhost:8000/route_priority/user. Analisa prioritas route yang terjadi sebelum dan sesudah comment Route yang pertama di atas! 4.10. Praktik Fallback Routes Buka file routes/web.php, praktikkan Fallback Routes dengan menuliskan kode program seperti di bawah ini.\nRoute::fallback(function() { return \u0026#39;This is Fallback Route\u0026#39;; }); Buka file view routing.blade.php lalu tambahkan kode program sebagai berikut:\n\u0026lt;a href=\u0026#34;{{ url(\u0026#39;/asdqwezxc\u0026#39;) }}\u0026#34; class=\u0026#34;list-group-item list-group-item-action\u0026#34;\u0026gt; Fallback Routes \u0026lt;/a\u0026gt; 4.11. Praktik Route Groups (Route Prefixes \u0026amp; Route Name Prefixes) Buka file routes/web.php, praktikkan Route Groups (Route Prefixes \u0026amp; Route Name Prefixes) dengan menuliskan kode program seperti di bawah ini.\nRoute::prefix(\u0026#39;admin\u0026#39;)-\u0026gt;name(\u0026#39;admin.\u0026#39;)-\u0026gt;group(function() { Route::get(\u0026#39;/dashboard\u0026#39;, function() { return \u0026#34;This is admin dashboard\u0026#34;; })-\u0026gt;name(\u0026#39;dashboard\u0026#39;); Route::get(\u0026#39;/users\u0026#39;, function() { return \u0026#34;This is user data on admin page\u0026#34;; })-\u0026gt;name(\u0026#39;users\u0026#39;); Route::get(\u0026#39;/items\u0026#39;, function() { return \u0026#34;This is item data on admin page\u0026#34;; })-\u0026gt;name(\u0026#39;items\u0026#39;); }); Buka file view routing.blade.php lalu tambahkan kode program sebagai berikut:\n\u0026lt;h6 class=\u0026#34;mt-4\u0026#34;\u0026gt;Route Groups (Route Prefixes \u0026amp; Route Name Prefixes)\u0026lt;/h6\u0026gt; \u0026lt;div class=\u0026#34;list-group list-group-numbered mt-4\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;admin.dashboard\u0026#39;) }}\u0026#34; class=\u0026#34;list-group-item list-group-item-action\u0026#34; \u0026gt; Admin Dashboard \u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;admin.users\u0026#39;) }}\u0026#34; class=\u0026#34;list-group-item list-group-item-action\u0026#34; \u0026gt; Admin Users \u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;{{ route(\u0026#39;admin.items\u0026#39;) }}\u0026#34; class=\u0026#34;list-group-item list-group-item-action\u0026#34; \u0026gt; Admin Items \u0026lt;/a\u0026gt; \u0026lt;/div\u0026gt; 4.12. Praktik View Route List Ketikkan pada cmd / terminal script artisan berikut ini: php artisan route:list 4.13. Praktik Route Caching Ketikkan pada cmd / terminal script artisan berikut ini untuk menerapkan Route Caching: php artisan route:cache Ketikkan pada cmd / terminal script artisan berikut ini untuk menghapus Route Cache: php artisan route:clear Note\nArtikel ini merupakan bagian dari: Kumpulan Modul Belajar Dasar Pemrograman Framework Laravel\n"},{"section":"Blog","slug":"/blog/pengenalan-laravel-dan-konfigurasi-awal/","title":"Modul #02 Belajar Pemrograman Framework Laravel Tahap Dasar: Pengenalan Laravel dan Konfigurasi Awal","description":"Modul #02 Belajar Pemrograman Framework Laravel Tahap Dasar: Pengenalan Laravel dan Konfigurasi Awal","date":"August 27, 2023","image":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n  \n    \n      \n    \n\n\n    \n    \n\n\n    \n    \n      \n      \n    \n    \n    \n\n\n    \n    \n      \n      \n        \n        \n        \n        \n        \n        \n\n\n        \n        \n\n\n        \u003cimg\n          \n            src=\"/images/blog/konfigurasi-laravel_hu833f70ee6532b98ffe40d46dca59dea1_60927_420x0_resize_q90_h2_lanczos_3.webp\" loading=\"lazy\" decoding=\"async\"\n          \n\n          alt=\"\"\n          class=\"  img\"\n          width=\"420\"\n          height=\"236\"\n          onerror=\"this.onerror='null';this.src='\\/images\\/blog\\/konfigurasi-laravel_hu833f70ee6532b98ffe40d46dca59dea1_60927_420x0_resize_lanczos_3.png';\" /\u003e\n\n        \n      \n      \n    \n    \n  \n\n\n  \n","imageSM":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n  \n    \n      \n    \n\n\n    \n    \n\n\n    \n    \n      \n      \n    \n    \n    \n\n\n    \n    \n      \n      \n        \n        \n        \n        \n        \n        \n          \n          \n          \n          \n        \n\n\n        \n        \n\n\n        \u003cimg\n          \n            src=\"/images/blog/konfigurasi-laravel_hu833f70ee6532b98ffe40d46dca59dea1_60927_100x100_fill_q90_h2_lanczos_smart1_3.webp\" loading=\"lazy\" decoding=\"async\"\n          \n\n          alt=\"\"\n          class=\"  img\"\n          width=\"100\"\n          height=\"100\"\n          onerror=\"this.onerror='null';this.src='\\/images\\/blog\\/konfigurasi-laravel_hu833f70ee6532b98ffe40d46dca59dea1_60927_100x100_fill_lanczos_smart1_3.png';\" /\u003e\n\n        \n      \n      \n    \n    \n  \n\n\n  \n","searchKeyword":"","categories":"Technology","tags":"modul, pemrograman, framework, laravel, bootstrap","content":" Note\nArtikel ini merupakan bagian dari: Kumpulan Modul Belajar Dasar Pemrograman Framework Laravel\nAda banyak cara dan pendekatan untuk melakukan instalasi sebuah project Laravel. Namun pada modul ini kita akan fokus melakukan instalasi dan setup seluruh kebutuhan untuk memulai belajar pemrograman php dengan framework Laravel dengan pendekatan yang paling dasar dan mudah. Mulai dari install XAMPP, Composer, sampai install sebuah project Laravel. Kegiatan ini dilakukan agar kita siap untuk belajar Laravel dengan komputer atau laptop masing-masing.\n1. Install dan Jalankan XAMPP Download XAMPP pada link berikut: https://www.apachefriends.org/download.html Jalankan installer, ikuti prosesnya hingga selesai.\nJalankan XAMPP Control Panel:\nJalankan PHPMyAdmin (MySQL Client) dengan mengakses URL pada browser: http://localhost/phpmyadmin.\n2. Install dan Jalankan Visual Studio Code Download Visual Studio Code pada link berikut: https://code.visualstudio.com/download Jalankan Visual Studio Code\nInstall Laravel Extension Pack:\n3. Install dan Jalankan Composer Download Composer pada link berikut: https://getcomposer.org/download/ (bagian Windows Installer)\nJalankan installer, ikuti prosesnya hingga selesai.\nBuka Command Prompt kemudian jalankan perintah composer untuk memastikan proses instalasi telah berhasil.\ncomposer 4. Install dan Jalankan Project Laravel (Via Composer) Jika komputer Anda sudah terinstal PHP dan Composer, Anda dapat membuat proyek Laravel baru dengan menggunakan Composer secara langsung.\ncomposer create-project laravel/laravel example-app Masuk ke folder project Laravel yang baru saja dibuat\ncd example-app Setelah project aplikasi dibuat, anda dapat memulai Local Development Server Laravel menggunakan perintah serve dari Artisan CLI:\nphp artisan serve Akses web laravel dengan URL http://localhost:8000 via browser. Hasilnya adalah sebagai berikut:\n5. Install dan Jalankan Project Laravel (Via Laravel Installer) Anda dapat menginstal Laravel Installer sebagai Global Composer Dependency.\ncomposer global require laravel/installer Pastikan untuk menempatkan direktori /bin Composer di seluruh sistem di $PATH anda agar eksekusi command laravel dapat ditemukan oleh sistem Anda. Direktori ini ada di lokasi yang berbeda berdasarkan sistem operasi Anda.\nBuat project laravel baru dengan command laravel new.\nlaravel new example-app Masuk ke folder project Laravel yang baru saja dibuat\ncd example-app Setelah project aplikasi dibuat, anda dapat memulai Local Development Server Laravel menggunakan perintah serve dari Artisan CLI:\nphp artisan serve Note\nArtikel ini merupakan bagian dari: Kumpulan Modul Belajar Dasar Pemrograman Framework Laravel\n"},{"section":"Blog","slug":"/blog/cloning-bootstrap-dengan-bootstrap/","title":"Modul #01 Belajar Pemrograman Framework Laravel Tahap Dasar: Pengenalan Framework CSS (Bootstrap)","description":"Modul #01 Belajar Pemrograman Framework Laravel Tahap Dasar: Pengenalan Framework CSS (Bootstrap)","date":"August 23, 2023","image":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n  \n    \n      \n    \n\n\n    \n    \n\n\n    \n    \n      \n      \n    \n    \n    \n\n\n    \n    \n      \n      \n        \n        \n        \n        \n        \n        \n\n\n        \n        \n\n\n        \u003cimg\n          \n            src=\"/images/blog/cloning-bootstrap-dengan-bootstrap_hu5f128e575b7b74de3cba1892e4f81553_75398_420x0_resize_q90_h2_lanczos_3.webp\" loading=\"lazy\" decoding=\"async\"\n          \n\n          alt=\"\"\n          class=\"  img\"\n          width=\"420\"\n          height=\"236\"\n          onerror=\"this.onerror='null';this.src='\\/images\\/blog\\/cloning-bootstrap-dengan-bootstrap_hu5f128e575b7b74de3cba1892e4f81553_75398_420x0_resize_lanczos_3.png';\" /\u003e\n\n        \n      \n      \n    \n    \n  \n\n\n  \n","imageSM":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n  \n    \n      \n    \n\n\n    \n    \n\n\n    \n    \n      \n      \n    \n    \n    \n\n\n    \n    \n      \n      \n        \n        \n        \n        \n        \n        \n          \n          \n          \n          \n        \n\n\n        \n        \n\n\n        \u003cimg\n          \n            src=\"/images/blog/cloning-bootstrap-dengan-bootstrap_hu5f128e575b7b74de3cba1892e4f81553_75398_100x100_fill_q90_h2_lanczos_smart1_3.webp\" loading=\"lazy\" decoding=\"async\"\n          \n\n          alt=\"\"\n          class=\"  img\"\n          width=\"100\"\n          height=\"100\"\n          onerror=\"this.onerror='null';this.src='\\/images\\/blog\\/cloning-bootstrap-dengan-bootstrap_hu5f128e575b7b74de3cba1892e4f81553_75398_100x100_fill_lanczos_smart1_3.png';\" /\u003e\n\n        \n      \n      \n    \n    \n  \n\n\n  \n","searchKeyword":"","categories":"Technology","tags":"modul, pemrograman, framework, laravel, bootstrap","content":" Note\nArtikel ini merupakan bagian dari: Kumpulan Modul Belajar Dasar Pemrograman Framework Laravel\nKali ini kita akan mulai mempelajari tentang salah satu framework CSS yaitu Bootstrap. Penerapan fitur bootstrap diberikan dan dikemas dalam bentuk studi kasus tertentu. Kegiatan ini dilakukan agar kita mampu membangun website sederhana dengan mendayagunakan fitur-fitur bootstrap yang ada.\nStudi kasus yang diberikan adalah membuat atau meng-cloning website bootstrap menggunakan framework bootstrap. Hasil akhir yang diinginkan adalah sebuah tampilan website seperti di bawah ini atau anda dapat melihatnya pada url berikut https://bootstrap-clone.vercel.app/ .\n1. Install dan Jalankan Visual Studio Code Download Visual Studio Code pada link berikut: https://code.visualstudio.com/download Jalankan Visual Studio Code.\n2. Struktur Direktori Buat struktur direktori project sesuai dengan gambar di bawah ini.\nAset gambar-gambar yang dibutuhkan dapat di-download di sini .\n3. Struktur Dasar HTML dengan Bootstrap via CDN Buka file index.html, kemudian terapkan kode struktur dasar HTML di bawah ini.\n\u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34; /\u0026gt; \u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;IE=edge\u0026#34; /\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;Bootstrap Clone\u0026lt;/title\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha2/dist/css/bootstrap.min.css\u0026#34; /\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://cdn.jsdelivr.net/npm/bootstrap-icons@1.6.0/font/bootstrap-icons.css\u0026#34; /\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;assets/css/style.css\u0026#34; /\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha2/dist/js/bootstrap.bundle.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 4. Navbar Section Praktekkan kode HTML di bawah ini pada file index.html yang telah dibuat. Letakkan di dalam block tag \u0026lt;body\u0026gt;.\n\u0026lt;!-- Navbar --\u0026gt; \u0026lt;nav class=\u0026#34;navbar fixed-top navbar-expand-lg bg-purple\u0026#34; data-bs-theme=\u0026#34;dark\u0026#34;\u0026gt; \u0026lt;!-- Container --\u0026gt; \u0026lt;div class=\u0026#34;container py-2 px-4\u0026#34;\u0026gt; \u0026lt;!-- Navbar Brand --\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34; class=\u0026#34;navbar-brand mb-0 h1\u0026#34;\u0026gt; \u0026lt;img class=\u0026#34;img-fluid\u0026#34; src=\u0026#34;assets/images/logo-white.svg\u0026#34; alt=\u0026#34;logo\u0026#34; style=\u0026#34;width: 40px;\u0026#34; /\u0026gt; \u0026lt;/a\u0026gt; \u0026lt;!-- Navbar Toggler --\u0026gt; \u0026lt;button type=\u0026#34;button\u0026#34; class=\u0026#34;navbar-toggler\u0026#34; data-bs-toggle=\u0026#34;offcanvas\u0026#34; data-bs-target=\u0026#34;#offcanvasNavbar\u0026#34; \u0026gt; \u0026lt;span class=\u0026#34;navbar-toggler-icon\u0026#34;\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;!-- Offcanvas --\u0026gt; \u0026lt;div class=\u0026#34;offcanvas offcanvas-end bg-purple\u0026#34; id=\u0026#34;offcanvasNavbar\u0026#34;\u0026gt; \u0026lt;!-- Offcanvas Header --\u0026gt; \u0026lt;div class=\u0026#34;offcanvas-header pb-0 px-4\u0026#34;\u0026gt; \u0026lt;h5 class=\u0026#34;offcanvas-title text-white\u0026#34; id=\u0026#34;offcanvasNavbarLabel\u0026#34;\u0026gt; Bootstrap \u0026lt;/h5\u0026gt; \u0026lt;button type=\u0026#34;button\u0026#34; class=\u0026#34;btn-close\u0026#34; data-bs-dismiss=\u0026#34;offcanvas\u0026#34; aria-label=\u0026#34;Close\u0026#34; \u0026gt;\u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;!-- Offcanvas Body --\u0026gt; \u0026lt;div class=\u0026#34;offcanvas-body pt-0 px-4\u0026#34;\u0026gt; \u0026lt;hr class=\u0026#34;d-md-none text-white-50\u0026#34; /\u0026gt; \u0026lt;!-- Horizontal Line --\u0026gt; \u0026lt;!-- Top Menu --\u0026gt; \u0026lt;ul class=\u0026#34;navbar-nav flex-row flex-wrap\u0026#34;\u0026gt; \u0026lt;li class=\u0026#34;nav-item col-6 col-md-auto\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34; class=\u0026#34;nav-link active\u0026#34;\u0026gt;Docs\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;nav-item col-6 col-md-auto\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34; class=\u0026#34;nav-link\u0026#34;\u0026gt;Examples\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;nav-item col-6 col-md-auto\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34; class=\u0026#34;nav-link\u0026#34;\u0026gt;Icons\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;nav-item col-6 col-md-auto\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34; class=\u0026#34;nav-link\u0026#34;\u0026gt;Themes\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;nav-item col-6 col-md-auto\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34; class=\u0026#34;nav-link\u0026#34;\u0026gt;Blog\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;hr class=\u0026#34;d-md-none text-white-50\u0026#34; /\u0026gt; \u0026lt;!-- Horizontal Line --\u0026gt; \u0026lt;!-- Sosial Media --\u0026gt; \u0026lt;ul class=\u0026#34;navbar-nav flex-row flex-wrap ms-md-auto\u0026#34;\u0026gt; \u0026lt;li class=\u0026#34;nav-item col-6 col-md-auto\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34; class=\u0026#34;nav-link active\u0026#34;\u0026gt; \u0026lt;i class=\u0026#34;bi-github\u0026#34;\u0026gt;\u0026lt;/i \u0026gt;\u0026lt;small class=\u0026#34;ms-2 d-md-none\u0026#34;\u0026gt;Github\u0026lt;/small\u0026gt; \u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;nav-item col-6 col-md-auto\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34; class=\u0026#34;nav-link active\u0026#34;\u0026gt; \u0026lt;i class=\u0026#34;bi-twitter\u0026#34;\u0026gt;\u0026lt;/i \u0026gt;\u0026lt;small class=\u0026#34;ms-2 d-md-none\u0026#34;\u0026gt;Twitter\u0026lt;/small\u0026gt; \u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;nav-item col-6 col-md-auto\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34; class=\u0026#34;nav-link active\u0026#34;\u0026gt; \u0026lt;i class=\u0026#34;bi-slack\u0026#34;\u0026gt;\u0026lt;/i \u0026gt;\u0026lt;small class=\u0026#34;ms-2 d-md-none\u0026#34;\u0026gt;Slack\u0026lt;/small\u0026gt; \u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;nav-item col-12 col-lg-auto\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;vr d-none d-lg-flex h-100 mx-lg-2 text-white\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;hr class=\u0026#34;d-lg-none my-2 text-white-50\u0026#34; /\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;nav-item\u0026#34;\u0026gt; \u0026lt;!-- Dropdown --\u0026gt; \u0026lt;div class=\u0026#34;dropdown\u0026#34; data-bs-theme=\u0026#34;light\u0026#34;\u0026gt; \u0026lt;button type=\u0026#34;button\u0026#34; class=\u0026#34;btn nav-link text-white dropdown-toggle\u0026#34; data-bs-toggle=\u0026#34;dropdown\u0026#34; aria-expanded=\u0026#34;false\u0026#34; \u0026gt; \u0026lt;span class=\u0026#34;d-lg-none\u0026#34;\u0026gt;Bootstrap\u0026lt;/span\u0026gt; v5.3 \u0026lt;/button\u0026gt; \u0026lt;ul class=\u0026#34;dropdown-menu dropdown-menu-end\u0026#34;\u0026gt; \u0026lt;li\u0026gt;\u0026lt;h6 class=\u0026#34;dropdown-header\u0026#34;\u0026gt;v5 releases\u0026lt;/h6\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;button class=\u0026#34;dropdown-item active bg-purple\u0026#34; type=\u0026#34;button\u0026#34; \u0026gt; \u0026lt;small\u0026gt;Latest (5.3.x) \u0026lt;i class=\u0026#34;bi-check\u0026#34;\u0026gt;\u0026lt;/i\u0026gt;\u0026lt;/small\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;button class=\u0026#34;dropdown-item\u0026#34; type=\u0026#34;button\u0026#34;\u0026gt; \u0026lt;small\u0026gt;v5.2.3\u0026lt;/small\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;button class=\u0026#34;dropdown-item\u0026#34; type=\u0026#34;button\u0026#34;\u0026gt; \u0026lt;small\u0026gt;v5.1.3\u0026lt;/small\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;button class=\u0026#34;dropdown-item\u0026#34; type=\u0026#34;button\u0026#34;\u0026gt; \u0026lt;small\u0026gt;v5.0.2\u0026lt;/small\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;hr class=\u0026#34;dropdown-divider\u0026#34; /\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;h6 class=\u0026#34;dropdown-header\u0026#34;\u0026gt;Previous releases\u0026lt;/h6\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;button class=\u0026#34;dropdown-item\u0026#34; type=\u0026#34;button\u0026#34;\u0026gt; \u0026lt;small\u0026gt;v4.6.x\u0026lt;/small\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;button class=\u0026#34;dropdown-item\u0026#34; type=\u0026#34;button\u0026#34;\u0026gt; \u0026lt;small\u0026gt;v3.4.1\u0026lt;/small\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;button class=\u0026#34;dropdown-item\u0026#34; type=\u0026#34;button\u0026#34;\u0026gt; \u0026lt;small\u0026gt;v2.3.2\u0026lt;/small\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;hr class=\u0026#34;dropdown-divider\u0026#34; /\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;button class=\u0026#34;dropdown-item\u0026#34; type=\u0026#34;button\u0026#34;\u0026gt; \u0026lt;small\u0026gt;All versions\u0026lt;/small\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;nav-item col-12 col-lg-auto\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;vr d-none d-lg-flex h-100 mx-lg-2 text-white\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;hr class=\u0026#34;d-lg-none my-2 text-white-50\u0026#34; /\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;nav-item\u0026#34;\u0026gt; \u0026lt;!-- Dropdown --\u0026gt; \u0026lt;div class=\u0026#34;dropdown\u0026#34; data-bs-theme=\u0026#34;light\u0026#34;\u0026gt; \u0026lt;button type=\u0026#34;button\u0026#34; class=\u0026#34;btn nav-link text-white dropdown-toggle\u0026#34; data-bs-toggle=\u0026#34;dropdown\u0026#34; aria-expanded=\u0026#34;false\u0026#34; \u0026gt; \u0026lt;i class=\u0026#34;bi-brightness-high-fill\u0026#34;\u0026gt;\u0026lt;/i \u0026gt;\u0026lt;span class=\u0026#34;d-lg-none\u0026#34;\u0026gt;Toggle theme\u0026lt;/span\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;ul class=\u0026#34;dropdown-menu dropdown-menu-end\u0026#34;\u0026gt; \u0026lt;li\u0026gt; \u0026lt;button class=\u0026#34;dropdown-item active bg-purple\u0026#34; type=\u0026#34;button\u0026#34; \u0026gt; \u0026lt;small \u0026gt;\u0026lt;i class=\u0026#34;bi-brightness-high-fill me-2\u0026#34;\u0026gt;\u0026lt;/i \u0026gt;Light\u0026lt;/small \u0026gt; \u0026lt;/button\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;button class=\u0026#34;dropdown-item\u0026#34; type=\u0026#34;button\u0026#34;\u0026gt; \u0026lt;small\u0026gt;\u0026lt;i class=\u0026#34;bi-moon-stars-fill me-2\u0026#34;\u0026gt;\u0026lt;/i\u0026gt;Dark\u0026lt;/small\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;button class=\u0026#34;dropdown-item\u0026#34; type=\u0026#34;button\u0026#34;\u0026gt; \u0026lt;small\u0026gt;\u0026lt;i class=\u0026#34;bi-circle-half me-2\u0026#34;\u0026gt;\u0026lt;/i\u0026gt;Auto\u0026lt;/small\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/nav\u0026gt; 5. Main Section Praktekkan kode HTML di bawah ini pada file index.html yang telah dibuat. Letakkan di dalam block tag \u0026lt;body\u0026gt;.\n\u0026lt;!-- Main --\u0026gt; \u0026lt;div class=\u0026#34;bg-light mt-5\u0026#34; id=\u0026#34;main\u0026#34;\u0026gt; \u0026lt;!-- Container --\u0026gt; \u0026lt;div class=\u0026#34;container py-5 px-4\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;col-md-5 order-md-2\u0026#34;\u0026gt; \u0026lt;img class=\u0026#34;img-fluid\u0026#34; src=\u0026#34;assets/images/main.svg\u0026#34; alt=\u0026#34;main logo\u0026#34; /\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-md-7 order-md-1\u0026#34;\u0026gt; \u0026lt;h1 class=\u0026#34;mt-4 display-3\u0026#34;\u0026gt; Build fast, responsive sites with Bootstrap \u0026lt;/h1\u0026gt; \u0026lt;p class=\u0026#34;fs-5 mt-3\u0026#34;\u0026gt; Quickly design and customize responsive mobile-first sites with Bootstrap, the world\u0026#39;s most popular front-end open source toolkit, featuring Sass variables and mixins, responsive grid system, extensive prebuilt components, and powerful JavaScript plugins. \u0026lt;/p\u0026gt; \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;d-flex flex-column flex-md-row\u0026#34;\u0026gt; \u0026lt;button type=\u0026#34;button\u0026#34; class=\u0026#34;btn bg-purple text-white btn-lg mb-3 me-md-3 px-4 py-3\u0026#34; \u0026gt; Get Started \u0026lt;/button\u0026gt; \u0026lt;button type=\u0026#34;button\u0026#34; class=\u0026#34;btn btn-outline-dark btn-lg mb-3 px-4 py-3\u0026#34; \u0026gt; Download \u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;text-muted\u0026#34;\u0026gt; Currently \u0026lt;strong\u0026gt;v5.3.0-alpha2.\u0026lt;/strong\u0026gt; · \u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;v4.6.x docs\u0026lt;/a\u0026gt; · \u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;All releases\u0026lt;/a\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; 6. Bootstrap Icons Section Praktekkan kode HTML di bawah ini pada file index.html yang telah dibuat. Letakkan di dalam block tag \u0026lt;body\u0026gt;.\n\u0026lt;!-- Bootstrap Icons --\u0026gt; \u0026lt;div id=\u0026#34;bs-icons\u0026#34;\u0026gt; \u0026lt;!-- Container --\u0026gt; \u0026lt;div class=\u0026#34;container py-5 px-4\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;col-lg-6\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;mb-3\u0026#34;\u0026gt; \u0026lt;i class=\u0026#34;bi bi-subtract fs-2 bg-warning py-2 px-3 rounded-3 text-white\u0026#34; \u0026gt;\u0026lt;/i\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;h2 class=\u0026#34;display-5 mb-3\u0026#34;\u0026gt; Personalize it with \u0026lt;br /\u0026gt;Bootstrap Icons \u0026lt;/h2\u0026gt; \u0026lt;p class=\u0026#34;fs-5\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Bootstrap Icons\u0026lt;/a\u0026gt; is an open source SVG icon library featuring over 1,800 glyphs, with more added every release. They\u0026#39;re designed to work in any project, whether you use Bootstrap itself or not. Use them as SVGs or icon fonts--both options give you vector scaling and easy customization via CSS. \u0026lt;/p\u0026gt; \u0026lt;a class=\u0026#34;icon-link icon-link-hover lead fw-semibold mb-5\u0026#34; href=\u0026#34;#\u0026#34;\u0026gt; Get Bootstrap Icons \u0026lt;i class=\u0026#34;bi bi-arrow-right mb-2\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; \u0026lt;/a\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-lg-6\u0026#34;\u0026gt; \u0026lt;img class=\u0026#34;img-fluid\u0026#34; src=\u0026#34;assets/images/bs-icons.png\u0026#34; alt=\u0026#34;Bootstrap Icons\u0026#34; /\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; 7. Bootstrap Themes Section Praktekkan kode HTML di bawah ini pada file index.html yang telah dibuat. Letakkan di dalam block tag \u0026lt;body\u0026gt;.\n\u0026lt;!-- Bootstrap Official Themes --\u0026gt; \u0026lt;div id=\u0026#34;bs-themes\u0026#34;\u0026gt; \u0026lt;!-- Container --\u0026gt; \u0026lt;div class=\u0026#34;container py-5 px-4\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;col-lg-6\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;mb-3 mt-5\u0026#34;\u0026gt; \u0026lt;i class=\u0026#34;bi bi-droplet-fill fs-2 bg-info py-2 px-3 rounded-3 text-white\u0026#34; \u0026gt;\u0026lt;/i\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;h2 class=\u0026#34;display-5\u0026#34;\u0026gt; Make it yours with official Bootstrap Themes \u0026lt;/h2\u0026gt; \u0026lt;p class=\u0026#34;fs-5\u0026#34;\u0026gt; Take Bootstrap to the next level with premium themes from the \u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;official Bootstrap Themes marketplace\u0026lt;/a\u0026gt;. Themes are built on Bootstrap as their own extended frameworks, rich with new components and plugins, documentation, and powerful build tools. \u0026lt;/p\u0026gt; \u0026lt;a class=\u0026#34;icon-link icon-link-hover lead fw-semibold mb-5\u0026#34; href=\u0026#34;#\u0026#34;\u0026gt; Browse Bootstrap Themes \u0026lt;i class=\u0026#34;bi bi-arrow-right mb-2\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; \u0026lt;/a\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-lg-6\u0026#34;\u0026gt; \u0026lt;img class=\u0026#34;img-fluid\u0026#34; src=\u0026#34;assets/images/bs-themes.png\u0026#34; alt=\u0026#34;Bootstrap Themes\u0026#34; /\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; 8. Footer Section Praktekkan kode HTML di bawah ini pada file index.html yang telah dibuat. Letakkan di dalam block tag \u0026lt;body\u0026gt;.\n\u0026lt;!-- Footer --\u0026gt; \u0026lt;div id=\u0026#34;footer\u0026#34; class=\u0026#34;bg-light py-5\u0026#34;\u0026gt; \u0026lt;!-- Container --\u0026gt; \u0026lt;div class=\u0026#34;container py-5 px-4\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;col-lg-3 mb-5\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34; class=\u0026#34;logo text-decoration-none\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;d-flex\u0026#34;\u0026gt; \u0026lt;img class=\u0026#34;img-fluid\u0026#34; src=\u0026#34;assets/images/logo-black.svg\u0026#34; alt=\u0026#34;Bootstrap Logo\u0026#34; style=\u0026#34;width: 40px;\u0026#34; /\u0026gt; \u0026lt;div class=\u0026#34;fs-5 ms-2 text-black\u0026#34;\u0026gt;Bootstrap\u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/a\u0026gt; \u0026lt;div class=\u0026#34;mt-2 text-muted\u0026#34;\u0026gt; \u0026lt;small \u0026gt;Designed and built with all the love in the world by the \u0026lt;a href=\u0026#34;#\u0026#34; class=\u0026#34;text-black\u0026#34;\u0026gt;Bootstrap team\u0026lt;/a\u0026gt; with the help of \u0026lt;a href=\u0026#34;#\u0026#34; class=\u0026#34;text-black\u0026#34;\u0026gt;our contributors\u0026lt;/a\u0026gt;.\u0026lt;/small \u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;mt-2 text-muted\u0026#34;\u0026gt; \u0026lt;small \u0026gt;Code licensed \u0026lt;a href=\u0026#34;#\u0026#34; class=\u0026#34;text-black\u0026#34;\u0026gt;MIT\u0026lt;/a\u0026gt;, docs \u0026lt;a href=\u0026#34;#\u0026#34; class=\u0026#34;text-black\u0026#34;\u0026gt;CC BY 3.0\u0026lt;/a\u0026gt;.\u0026lt;/small \u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;mt-2 text-muted\u0026#34;\u0026gt; \u0026lt;small\u0026gt;Currently v5.3.0-alpha2.\u0026lt;/small\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-6 col-lg-2 offset-lg-1 mb-5\u0026#34;\u0026gt; \u0026lt;h5\u0026gt;Links\u0026lt;/h5\u0026gt; \u0026lt;ul class=\u0026#34;list-unstyled\u0026#34;\u0026gt; \u0026lt;li class=\u0026#34;mb-2\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Home\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;mb-2\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Docs\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;mb-2\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Examples\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;mb-2\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Icons\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;mb-2\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Themes\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;mb-2\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Blog\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;mb-2\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Swag Store\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-6 col-lg-2 mb-5\u0026#34;\u0026gt; \u0026lt;h5\u0026gt;Guides\u0026lt;/h5\u0026gt; \u0026lt;ul class=\u0026#34;list-unstyled\u0026#34;\u0026gt; \u0026lt;li class=\u0026#34;mb-2\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Getting started\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;mb-2\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Starter template\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;mb-2\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Webpack\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;mb-2\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Parcel\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-6 col-lg-2 mb-5\u0026#34;\u0026gt; \u0026lt;h5\u0026gt;Projects\u0026lt;/h5\u0026gt; \u0026lt;ul class=\u0026#34;list-unstyled\u0026#34;\u0026gt; \u0026lt;li class=\u0026#34;mb-2\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Bootstrap 5\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;mb-2\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Bootstrap 4\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;mb-2\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Icons\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;mb-2\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;RFS\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;mb-2\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;npm starter\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-6 col-lg-2 mb-5\u0026#34;\u0026gt; \u0026lt;h5\u0026gt;Community\u0026lt;/h5\u0026gt; \u0026lt;ul class=\u0026#34;list-unstyled\u0026#34;\u0026gt; \u0026lt;li class=\u0026#34;mb-2\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Issues\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;mb-2\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Discussions\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;mb-2\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Corporate sponsors\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;mb-2\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Open Collective\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;mb-2\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Slack\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;mb-2\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Stack overflow\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; 9. File CSS Praktekkan kode CSS di bawah ini pada file style.css yang telah dibuat.\n.bg-purple { background-color: #7533f9 !important; } #main a { color: gray; } #main a:hover { color: rgb(73, 73, 73); } #footer a { text-decoration: none; color: black; } #footer a:hover { text-decoration: underline; color: var(--bs-primary) !important; } Semua fungsi class-class Bootstrap yang digunakan pada kode program dapat kita rujuk pada Website Resmi Bootstrap . Semoga bisa dipraktikkan dengan baik dan dikulik tentunya agar bisa semakin paham. Terima kasih.\nNote\nArtikel ini merupakan bagian dari: Kumpulan Modul Belajar Dasar Pemrograman Framework Laravel\n"},{"section":"Blog","slug":"/blog/what-is-framework/","title":"What Is Framework ?","description":"What Is Framework","date":"August 22, 2023","image":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n  \n    \n      \n    \n\n\n    \n    \n\n\n    \n    \n      \n      \n    \n    \n    \n\n\n    \n    \n      \n      \n        \n        \n        \n        \n        \n        \n\n\n        \n        \n\n\n        \u003cimg\n          \n            src=\"/images/blog/what-is-framework_hu75762753e4f248521ca6756dfc4fd340_1215299_420x0_resize_q90_h2_lanczos_3.webp\" loading=\"lazy\" decoding=\"async\"\n          \n\n          alt=\"\"\n          class=\"  img\"\n          width=\"420\"\n          height=\"236\"\n          onerror=\"this.onerror='null';this.src='\\/images\\/blog\\/what-is-framework_hu75762753e4f248521ca6756dfc4fd340_1215299_420x0_resize_lanczos_3.png';\" /\u003e\n\n        \n      \n      \n    \n    \n  \n\n\n  \n","imageSM":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n  \n    \n      \n    \n\n\n    \n    \n\n\n    \n    \n      \n      \n    \n    \n    \n\n\n    \n    \n      \n      \n        \n        \n        \n        \n        \n        \n          \n          \n          \n          \n        \n\n\n        \n        \n\n\n        \u003cimg\n          \n            src=\"/images/blog/what-is-framework_hu75762753e4f248521ca6756dfc4fd340_1215299_100x100_fill_q90_h2_lanczos_smart1_3.webp\" loading=\"lazy\" decoding=\"async\"\n          \n\n          alt=\"\"\n          class=\"  img\"\n          width=\"100\"\n          height=\"100\"\n          onerror=\"this.onerror='null';this.src='\\/images\\/blog\\/what-is-framework_hu75762753e4f248521ca6756dfc4fd340_1215299_100x100_fill_lanczos_smart1_3.png';\" /\u003e\n\n        \n      \n      \n    \n    \n  \n\n\n  \n","searchKeyword":"","categories":"Technology","tags":"framework, mvc, model, view, controller","content":"Framework is a collection of ready-to-use program code with certain writing rules that aim to facilitate and speed up application development. Frameworks are created to simplify the performance of programmers. Thus, a programmer does not need to write code repeatedly. Because in it only needs to compile programming components. The main purpose of using a framework is to speed up the creation of applications, because there are various ready-made features in the framework. We just need to use these features without having to create everything from scratch. In addition, the writing rules in the framework will force us to use a good way of writing (following best practice standards).\nWhat Framework Does ? Make Program Code More Structured. Frameworks usually have architectural patterns in writing code. Thus, the code written is easier and more structured. As a result, you can quickly find errors and fix them right away.\nImproving Safety. Apart from making the code more structured, frameworks can increase the security of your website. For example, the Laravel framework has adopted various security systems such as authentication, encryption, and hashing.\nSpeed up Website Creation. Because developers can use the components that have been provided and do not need to write code from scratch, it can speed up the creation of a website.\nEasier Website Maintenance. Bug fixes, maintenance to add features and improving website security will be easier because most frameworks already use various architectural patterns.\nFramework vs Library Both contain program code created by other programmers and can be used to speed up application development. Libraries generally contain a collection of program code for a more specific task (usually for 1 function only) so they are simpler than frameworks. For example, if we need to make statistical calculations, then we can look for libraries that contain ready-made statistical formulas. This program code is usually in the form of functions or classes. For example, dompdf is a PHP library that can be used to create pdf files and many more.\nFrameworks are more complex than libraries and are used to create a whole application, not just for one task. In practice, a framework may contain dozens of libraries that work together. The main principle of frameworks is that we have no control over how the program code is written. Frameworks already have standardized writing rules that must be followed.\nTypes of Frameworks There are various frameworks for different purposes:\nCSS Frameworks: Bootstrap, Materialize, Bulma, Tailwind, etc. Javascript Frameworks: React, Vue, Angular, etc. PHP Frameworks: Codeigniter, Laravel, Symphony, Yii, etc. Framework vs Native Language ? Always Debatable Reasons not to use a framework: the application is quite simple, don\u0026rsquo;t have enough web programming basics, want to pursue performance. Reasons to use a framework: ready-to-use features available, follows best practices, easy for collaboration, easy to read program code, application security. MVC Architecture (Model, View, Controller) MVC (Model, View, Controller) is an architecture for designing program code. The goal is to break down the main program code into 3 separate components with specific tasks.\nModel → Accessing the database View → Display design (user interface) Controller → Program logic flow The initial idea of the need for the MVC concept is so that applications can be easily managed and developed, especially for large applications. With a good implementation of the MVC concept, each part is independent of the other. If there are changes or modifications, just edit the necessary parts, not having to remodel the entire application.\nMVC architecture only emphasizes the separation between Model, View and Controller. Its implemetation in each programming language may vary because the desktop programming environment is different from web programming. Especially for PHP, almost all popular PHP frameworks use MVC architecture, including Laravel. Each framework also implements MVC with different levels of strictness.\nMVC Flow Diagram Controller catch the request. Controller communicate with Model to get data from database. Controller forward data from model into view. View display the data with the UI into web browser "},{"section":"Blog","slug":"/blog/seorang-putri-semoga-allah-menjaganya/","title":"Anak ke-3, Seorang Putri, Semoga Allah Menjaganya","description":"Anak ke-3, Seorang Putri, Semoga Allah Menjaganya","date":"January 27, 2022","image":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n  \n    \n      \n    \n\n\n    \n    \n\n\n    \n    \n      \n      \n    \n    \n    \n\n\n    \n    \n      \n      \n        \n        \n        \n        \n        \n        \n\n\n        \n        \n\n\n        \u003cimg\n          \n            src=\"/images/blog/baby-girl_hubc8c8bf1dbce7ea8090a078b282594c2_88626_420x0_resize_q90_h2_lanczos_3.webp\" loading=\"lazy\" decoding=\"async\"\n          \n\n          alt=\"\"\n          class=\"  img\"\n          width=\"420\"\n          height=\"236\"\n          onerror=\"this.onerror='null';this.src='\\/images\\/blog\\/baby-girl_hubc8c8bf1dbce7ea8090a078b282594c2_88626_420x0_resize_lanczos_3.png';\" /\u003e\n\n        \n      \n      \n    \n    \n  \n\n\n  \n","imageSM":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n  \n    \n      \n    \n\n\n    \n    \n\n\n    \n    \n      \n      \n    \n    \n    \n\n\n    \n    \n      \n      \n        \n        \n        \n        \n        \n        \n          \n          \n          \n          \n        \n\n\n        \n        \n\n\n        \u003cimg\n          \n            src=\"/images/blog/baby-girl_hubc8c8bf1dbce7ea8090a078b282594c2_88626_100x100_fill_q90_h2_lanczos_smart1_3.webp\" loading=\"lazy\" decoding=\"async\"\n          \n\n          alt=\"\"\n          class=\"  img\"\n          width=\"100\"\n          height=\"100\"\n          onerror=\"this.onerror='null';this.src='\\/images\\/blog\\/baby-girl_hubc8c8bf1dbce7ea8090a078b282594c2_88626_100x100_fill_lanczos_smart1_3.png';\" /\u003e\n\n        \n      \n      \n    \n    \n  \n\n\n  \n","searchKeyword":"","categories":"Life","tags":"lahiran, anak, perempuan","content":"Alhamdulillah segala puji bagi Alloh ‘azza wa jalla atas setiap nikmat yang Ia berikan. Di awal tahun 2022 ini Alloh anugerahkan kepada kami seorang anak putri, anak ke-3 kami. Jawaban dari doa-doa yang dipanjatkan walhamdulillah.\nMaa syaa Allah..\nSemoga menjadi anak yang sholihah, mentauhidkan Alloh dan menjauhi syirik, menjadi anak yang bertaqwa dan senantiasa berjalan di atas sunnah nabi shollallohu ‘alaihi wa sallam. Aamiin.\n"},{"section":"Blog","slug":"/blog/apa-itu-react/","title":"Apa Itu React ?","description":"Apa Itu React ?","date":"January 10, 2022","image":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n  \n    \n      \n    \n\n\n    \n    \n\n\n    \n    \n      \n      \n    \n    \n    \n\n\n    \n    \n      \n      \n        \n        \n        \n        \n        \n        \n\n\n        \n        \n\n\n        \u003cimg\n          \n            src=\"/images/blog/what-is-react_hu517253199f9d6012a9bb60025a15977f_33143_420x0_resize_q90_h2_lanczos_3.webp\" loading=\"lazy\" decoding=\"async\"\n          \n\n          alt=\"\"\n          class=\"  img\"\n          width=\"420\"\n          height=\"236\"\n          onerror=\"this.onerror='null';this.src='\\/images\\/blog\\/what-is-react_hu517253199f9d6012a9bb60025a15977f_33143_420x0_resize_lanczos_3.png';\" /\u003e\n\n        \n      \n      \n    \n    \n  \n\n\n  \n","imageSM":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n  \n    \n      \n    \n\n\n    \n    \n\n\n    \n    \n      \n      \n    \n    \n    \n\n\n    \n    \n      \n      \n        \n        \n        \n        \n        \n        \n          \n          \n          \n          \n        \n\n\n        \n        \n\n\n        \u003cimg\n          \n            src=\"/images/blog/what-is-react_hu517253199f9d6012a9bb60025a15977f_33143_100x100_fill_q90_h2_lanczos_smart1_3.webp\" loading=\"lazy\" decoding=\"async\"\n          \n\n          alt=\"\"\n          class=\"  img\"\n          width=\"100\"\n          height=\"100\"\n          onerror=\"this.onerror='null';this.src='\\/images\\/blog\\/what-is-react_hu517253199f9d6012a9bb60025a15977f_33143_100x100_fill_lanczos_smart1_3.png';\" /\u003e\n\n        \n      \n      \n    \n    \n  \n\n\n  \n","searchKeyword":"","categories":"Technology","tags":"javascript, react, declarative, imperative","content":"React adalah library javascript untuk membangun sebuah user interface (antarmuka). That’s it. Ok. Got it. Tiga hal tentang react yang perlu diketahui di awal belajar, yaitu dia (React) itu Declarative, Component-Based, dan Learn Once, Write Anywhere.\n1. React itu Declarative Declarative adalah lawan dari Imperative, Sebagai gambaran, Imperative itu seperti ketika ingin makan lalu kita akan bilang kepada seorang koki,\nPergilah ke dapur, buka kulkas, ambil ayam dari kulkas, masak, … , bawa hasil masakan ke atas meja.\nSedangkan Declarative itu seperti kita ingin makan lalu kita cukup bilang kepada seorang koki,\nSaya mau makan malam dengan ayam.\nDengan React yang Declarative kita bisa lebih mudah dalam membangun sebuah UI yang interaktif. Poin penting tentang Declarative adalah kita bisa membuat desain tampilan untuk setiap state di dalam aplikasi kita, dan React akan secara efisien meng-update dan me-render komponen yang sesuai, ketika state atau datanya mengalami perubahan. Pendekatan Declarative akan membuat kode kita lebih terprediksi dan lebih mudah untuk di-debug.\nBy the way, perbedaan pendekatan Declarative dan Imperative bisa kita lihat pada ilustrasi berikut ini.\nMisal, kita ingin membuat komponen UI, yaitu Like Button. Jika sebelumnya warna button-nya adalah abu-abu maka ketika kita klik warnanya akan menjadi biru, sedangkan jika sebelumnya warna button-nya adalah biru maka ketika kita klik warnanya menjadi abu-abu.\nPendekatan Imperative: if( user.likes() ) { if( hasBlue() ) { removeBlue(); addGrey(); } else { removeGrey(); addBlue(); } } Pendekatan Declarative: if( this.state.liked ) { return \u0026lt;blueLike /\u0026gt;; } else { return \u0026lt;greyLike /\u0026gt;; } Nah, bisa kita lihat bahwa dengan pendekatan Declarative kita hanya perlu meng-handle bagaimana seharusnya sebuah UI yang ditampilkan pada sebuah state (kondisi), sehingga dengan begitu mengembangkan sebuah komponen UI menjadi lebih sederhana dan mudah untuk dipahami.\n2. React itu Component-Based Dengan React kita membangun sebuah UI / antar muka dengan pendekatan komponen. Sebuah UI yang kompleks dibangun dari gabungan sekian komponen yang ada. Komponen tersebut ter-enkapsulasi dan memiliki state untuk dirinya masing-masing.\n3. React itu Learn Once, Write Anywhere Sebagai UI library javascript, React dapat dipasangkan dengan teknologi apa saja. React dapat di-render pada sisi server menggunakan Node dan juga dapat mendukung pengembangan aplikasi mobile menggunakan teknologi React Native.\n"},{"section":"Blog","slug":"/blog/namanya-zaid-semoga-allah-menjaganya/","title":"Anak ke-2, Namanya Zaid, Semoga Allah Menjaganya","description":"Anak ke-4, Namanya Zaid, Semoga Allah Menjaganya","date":"January 8, 2020","image":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n  \n    \n      \n    \n\n\n    \n    \n\n\n    \n    \n      \n      \n    \n    \n    \n\n\n    \n    \n      \n      \n        \n        \n        \n        \n        \n        \n\n\n        \n        \n\n\n        \u003cimg\n          \n            src=\"/images/blog/baby-boy-2_hu96f43cb3011c0b473fc2318711b01e7f_88503_420x0_resize_q90_h2_lanczos_3.webp\" loading=\"lazy\" decoding=\"async\"\n          \n\n          alt=\"\"\n          class=\"  img\"\n          width=\"420\"\n          height=\"236\"\n          onerror=\"this.onerror='null';this.src='\\/images\\/blog\\/baby-boy-2_hu96f43cb3011c0b473fc2318711b01e7f_88503_420x0_resize_lanczos_3.png';\" /\u003e\n\n        \n      \n      \n    \n    \n  \n\n\n  \n","imageSM":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n  \n    \n      \n    \n\n\n    \n    \n\n\n    \n    \n      \n      \n    \n    \n    \n\n\n    \n    \n      \n      \n        \n        \n        \n        \n        \n        \n          \n          \n          \n          \n        \n\n\n        \n        \n\n\n        \u003cimg\n          \n            src=\"/images/blog/baby-boy-2_hu96f43cb3011c0b473fc2318711b01e7f_88503_100x100_fill_q90_h2_lanczos_smart1_3.webp\" loading=\"lazy\" decoding=\"async\"\n          \n\n          alt=\"\"\n          class=\"  img\"\n          width=\"100\"\n          height=\"100\"\n          onerror=\"this.onerror='null';this.src='\\/images\\/blog\\/baby-boy-2_hu96f43cb3011c0b473fc2318711b01e7f_88503_100x100_fill_lanczos_smart1_3.png';\" /\u003e\n\n        \n      \n      \n    \n    \n  \n\n\n  \n","searchKeyword":"","categories":"Life","tags":"lahiran, anak, laki-laki","content":"Alhamdulillah segala puji bagi Alloh ‘azza wa jalla atas setiap nikmat yang Ia berikan. Di awal tahun 2020 ini Alloh anugerahkan kepada kami seorang anak lelaki lagi. Bismillah, namanya Zaid.\nZaid siapa ? Zaid aja. Panggilannya siapa ? Zaid ^^\nMaa syaa Allah..\nSemoga menjadi anak yang sholih, mentauhidkan Alloh dan menjauhi syirik, menjadi anak yang bertaqwa dan senantiasa berjalan di atas sunnah nabi shollallohu ‘alaihi wa sallam. Aamiin.\n"},{"section":"Blog","slug":"/blog/hanif-temukan-kajian-islam-di-sekitarmu/","title":"Hanif Mobile App: Temukan Kajian Islam di Sekitarmu","description":"Hanif Mobile App: Temukan Kajian Islam di Sekitarmu","date":"December 20, 2019","image":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n  \n    \n      \n    \n\n\n    \n    \n\n\n    \n    \n      \n      \n    \n    \n    \n\n\n    \n    \n      \n      \n        \n        \n        \n        \n        \n        \n\n\n        \n        \n\n\n        \u003cimg\n          \n            src=\"/images/blog/hanif-mobile-app_hu25650e54971267902c23969c2c04cb93_308692_420x0_resize_q90_h2_lanczos_3.webp\" loading=\"lazy\" decoding=\"async\"\n          \n\n          alt=\"\"\n          class=\"  img\"\n          width=\"420\"\n          height=\"236\"\n          onerror=\"this.onerror='null';this.src='\\/images\\/blog\\/hanif-mobile-app_hu25650e54971267902c23969c2c04cb93_308692_420x0_resize_lanczos_3.png';\" /\u003e\n\n        \n      \n      \n    \n    \n  \n\n\n  \n","imageSM":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n  \n    \n      \n    \n\n\n    \n    \n\n\n    \n    \n      \n      \n    \n    \n    \n\n\n    \n    \n      \n      \n        \n        \n        \n        \n        \n        \n          \n          \n          \n          \n        \n\n\n        \n        \n\n\n        \u003cimg\n          \n            src=\"/images/blog/hanif-mobile-app_hu25650e54971267902c23969c2c04cb93_308692_100x100_fill_q90_h2_lanczos_smart1_3.webp\" loading=\"lazy\" decoding=\"async\"\n          \n\n          alt=\"\"\n          class=\"  img\"\n          width=\"100\"\n          height=\"100\"\n          onerror=\"this.onerror='null';this.src='\\/images\\/blog\\/hanif-mobile-app_hu25650e54971267902c23969c2c04cb93_308692_100x100_fill_lanczos_smart1_3.png';\" /\u003e\n\n        \n      \n      \n    \n    \n  \n\n\n  \n","searchKeyword":"","categories":"Technology","tags":"hanif, aplikasi, mobile, kajian","content":"Bismillah, perkenalkan ini Hanif Mobile App: Temukan Kajian Islam di Sekitarmu. Aplikasi mobile yang memudahkan kaum muslimin untuk menemukan kajian islam di sekitar lokasi mereka. Tersedia pada platform Android maupun iOS.\nIni adalah sebuah project bersama dengan teman-teman. Semoga bermanfaat untuk kaum muslimin di manapun berada.\nSilakan download Hanif di https://hanifofficial.com . Temukan \u0026amp; hadiri kajian islam di sekitar Anda.\nBaarokallohu fiikum..\n"},{"section":"Blog","slug":"/blog/namanya-abdullah-semoga-allah-menjaganya/","title":"Anak ke-1, Namanya Abdullah, Semoga Allah Menjaganya","description":"Anak ke-1, Namanya Abdullah, Semoga Allah Menjaganya","date":"November 21, 2019","image":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n  \n    \n      \n    \n\n\n    \n    \n\n\n    \n    \n      \n      \n    \n    \n    \n\n\n    \n    \n      \n      \n        \n        \n        \n        \n        \n        \n\n\n        \n        \n\n\n        \u003cimg\n          \n            src=\"/images/blog/baby-boy-1_hued48776b200a42cdb0449827deb89bcb_86373_420x0_resize_q90_h2_lanczos_3.webp\" loading=\"lazy\" decoding=\"async\"\n          \n\n          alt=\"\"\n          class=\"  img\"\n          width=\"420\"\n          height=\"236\"\n          onerror=\"this.onerror='null';this.src='\\/images\\/blog\\/baby-boy-1_hued48776b200a42cdb0449827deb89bcb_86373_420x0_resize_lanczos_3.png';\" /\u003e\n\n        \n      \n      \n    \n    \n  \n\n\n  \n","imageSM":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n  \n    \n      \n    \n\n\n    \n    \n\n\n    \n    \n      \n      \n    \n    \n    \n\n\n    \n    \n      \n      \n        \n        \n        \n        \n        \n        \n          \n          \n          \n          \n        \n\n\n        \n        \n\n\n        \u003cimg\n          \n            src=\"/images/blog/baby-boy-1_hued48776b200a42cdb0449827deb89bcb_86373_100x100_fill_q90_h2_lanczos_smart1_3.webp\" loading=\"lazy\" decoding=\"async\"\n          \n\n          alt=\"\"\n          class=\"  img\"\n          width=\"100\"\n          height=\"100\"\n          onerror=\"this.onerror='null';this.src='\\/images\\/blog\\/baby-boy-1_hued48776b200a42cdb0449827deb89bcb_86373_100x100_fill_lanczos_smart1_3.png';\" /\u003e\n\n        \n      \n      \n    \n    \n  \n\n\n  \n","searchKeyword":"","categories":"Life","tags":"lahiran, anak, laki-laki","content":"Alhamdulillah segala puji bagi Alloh ‘azza wa jalla atas setiap nikmat yang Ia berikan. Di penghujung tahun 2017 ini Alloh anugerahkan kepada kami seorang anak lelaki. Bismillah, namanya Abdullah.\nAbdullah siapa ? Abdullah aja. Panggilannya siapa ? Abdullah ^^\nMaa syaa Allah..\nSemoga menjadi anak yang sholih, mentauhidkan Alloh dan menjauhi syirik, menjadi anak yang bertaqwa dan senantiasa berjalan diatas sunnah nabi shollallohu ‘alaihi wa sallam. Aamiin.\n"},{"section":"Blog","slug":"/blog/alhamdulillah-menikah-menjaga-diri-menjalankan-sunnah/","title":"Alhamdulillah Menikah, Menjaga Diri, Menjalankan Sunnah","description":"Alhamdulillah Menikah, Menjaga Diri, Menjalankan Sunnah","date":"November 19, 2019","image":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n  \n    \n      \n    \n\n\n    \n    \n\n\n    \n    \n      \n      \n    \n    \n    \n\n\n    \n    \n      \n      \n        \n        \n        \n        \n        \n        \n\n\n        \n        \n\n\n        \u003cimg\n          \n            src=\"/images/blog/wedding-day_hu122d94794e5ab96e598f707324ccd29b_1629122_420x0_resize_q90_h2_lanczos_3.webp\" loading=\"lazy\" decoding=\"async\"\n          \n\n          alt=\"\"\n          class=\"  img\"\n          width=\"420\"\n          height=\"236\"\n          onerror=\"this.onerror='null';this.src='\\/images\\/blog\\/wedding-day_hu122d94794e5ab96e598f707324ccd29b_1629122_420x0_resize_lanczos_3.png';\" /\u003e\n\n        \n      \n      \n    \n    \n  \n\n\n  \n","imageSM":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n  \n    \n      \n    \n\n\n    \n    \n\n\n    \n    \n      \n      \n    \n    \n    \n\n\n    \n    \n      \n      \n        \n        \n        \n        \n        \n        \n          \n          \n          \n          \n        \n\n\n        \n        \n\n\n        \u003cimg\n          \n            src=\"/images/blog/wedding-day_hu122d94794e5ab96e598f707324ccd29b_1629122_100x100_fill_q90_h2_lanczos_smart1_3.webp\" loading=\"lazy\" decoding=\"async\"\n          \n\n          alt=\"\"\n          class=\"  img\"\n          width=\"100\"\n          height=\"100\"\n          onerror=\"this.onerror='null';this.src='\\/images\\/blog\\/wedding-day_hu122d94794e5ab96e598f707324ccd29b_1629122_100x100_fill_lanczos_smart1_3.png';\" /\u003e\n\n        \n      \n      \n    \n    \n  \n\n\n  \n","searchKeyword":"","categories":"Life","tags":"menikah, sunnah, nazhor, ta'aruf","content":"Di sini saya mau cerita santai saja. Senyum.\nMenikah, alhamdulillahi ‘ala ni’mati hadza. Segala puji bagi Alloh ‘azza wa jalla atas nikmat ini. Alhamdulillah saya menikah pada Februari 2017 lalu. Bersyukur kepada Alloh subhanahu wa ta’ala atas segala proses perjalanan hidup sampai akhirnya dipertemukan dengan seorang muslimah di dalam ikatan pernikahan.\nSudah fitrahnya, akan ada masanya seorang lelaki atau perempuan akan galau tentang pernikahan, tetapi menampakkan kegalauan akan hal tersebut, itu adalah pilihan.\nAlhamdulillah saya -sepertinya- tidak terlalu menampakkan akan hal tersebut. Senyum.\nMenikah, niat itu dan jalan ke arah tersebut semakin kuat pada pertengahan-menjelang akhir tahun 2016. Bismillah, ketika itu saya luruskan lagi niat sembari belajar terus, tentang tuntunan nabi shollallohu ‘alaihi wa sallam bagaimana mencari pendamping hidup dan menjalani kehidupan pernikahan.\nBaik, saatnya mencari calon istri. Hmm, cari kemana? Tidak ada pikiran lain saat itu, kecuali meminta bantuan teman-teman yang baik, orang-orang baik dan salah satu nya adalah meminta bantuan kepada ustadz kami -hafizhohulloh-. Beliau adalah ustadz yang kami belajar bahasa arab kepadanya. Ustadz sudah cukup sering guyon dan menyindir saya tentang pernikahan, dan alhamdulillah akhirnya saya meminta bantuan beliau untuk mencarikan calon istri untuk saya. Singkat cerita, saya sampaikan bahwa saya ingin menikah dan meminta bantuan kepada beliau untuk mencarikan calon istri.\nSetelah itu apa ? Sabar. Setelah itu Sabar. Menunggu kabar dari ustadz dan terus memperbaiki diri dan berdoa kepada Alloh ‘azza wa jalla. Akhirnya, Oktober 2016 saya di WA oleh ustadz dan diberitahu kalau ada seorang muslimah yang in syaa Alloh juga siap menikah dan mencari calon suami. Bismillah, pendek cerita hal ini saya follow up terus dan alhamdulillah pada tahapan awal sama-sama cocok. Melalui mediasi ustadz, kami ta’aruf, dan alhamdulillah lancar. Saya cocok, muslimah tersebut pun cocok. Waktunya tidak terlalu lama, seingat saya kira-kira sekitar 2 minggu-an. Alhamdulillah.\nTiba Waktunya Nazhor (Melihat calon istri sebelum menikah) Ting! pagi itu tiba-tiba bunyi pesan WA masuk, ternyata dari ustadz. Beliau menanyakan kapan saya bisa nazhor. Muslimah ini siap untuk di-nazhor. Itu terjadi kira-kira pada awal Desember 2016. Saya pun menyambut hal tersebut dan sore ba’da ashar nya saya datang ke rumah ustadz untuk berangkat sama-sama ke rumah sang muslimah untuk nazhor.\nDeg-degan gak? Lumayan. Senyum Singkat cerita ana dan ustadz berangkat ke rumah sang muslimah. Di sana kami bertemu dengan Ibu, saudari dan saudara sang muslimah. Saya perkenalkan diri dan mencoba untuk mengobrol satu sama lain. Oh ya, di sana juga sudah ada sang muslimah yang bersangkutan. Yang agak bikin kaget, tiba-tiba ustadz pinjem kunci motor saya dan izin mau keluar sebentar. Mencoba untuk tetap tenang (padahal udah grogi banget) dan saya baru ngeh mengenai apa yang dilakukan ustadz. Jadi kebutuhan untuk nazhor kan kebutuhan saya sebagai pihak yang mau menikah, bukan kebutuhan beliau. Jadi beliau tidak mau melihat yang memang tidak butuh beliau lihat. Baarokallohu fiih.\nAkhirnya tinggal saya sendirian (tidak dengan ustadz). Agak krik-krik beberapa saat, tapi alhamdulillah akhirnya sudah terlaksana, yaitu saya nazhor (melihat) sang muslimah tersebut dan kami saling bertanya beberapa hal untuk menguatkan keputusan kami masing-masing setelah itu. Setengah jam sebelum waktu maghrib tiba, kami pamit untuk pulang. Lega.\nSelanjutnya Bagaimana Ustadz ? Di perjalanan pulang, saya bertanya kepada ustadz. “Bagaimana selanjutnya ustadz ?”. Beliau menjawab, “Ya nanti in syaa Alloh ana akan tanyakan ke pihak muslimahnya, apakah cocok dan mau lanjut. Kalau purnama gimana?” Maka saya jawab,\nIn syaa Alloh cocok dan bersedia lanjut ustadz.\nTernyata ustadz tidak menunggu lama. Malamnya langsung ditanyakan ke pihak sang muslimah dan di-forward ke saya mengenai keputusan muslimah tersebut via WA. Dan alhamdulillah kami berdua sama-sama berkeputusan untuk lanjut ke pernikahan.\nTiba Saatnya Khitbah Bismillah, kami putuskan untuk menikah, menyempurnakan agama, menjalankan sunnah nabi dan dalam rangka ibadah. Tiba saatnya khitbah dan saya perlu untuk menyampaikan kabar tentang semua yang saya ceritakan di atas kepada orang tua. Iya, dari proses ta’aruf sampai nazhor, tidak saya ceritakan ke orangtua (tapi kayaknya ibu uda tahu, mungkin melihat “gerak-gerik” saya ya, naluri ibu kuat banget. he3).\nOrangtua tidak saya beritahu, tapi secara umum ibu tahu kalau saya sudah mau menikah dan mencari istri. Kalau bapak, belum tahu. Singkat cerita, saya sampaikan ke orangtua begini dan begitu, dan Alhamdulillah respon mereka berdua positif dan senang, anaknya menikah.\nKhitbah dilakukan pertengahan Desember 2016. Saya bersama orangtua datang ke kediaman sang muslimah untuk melamar. Acaranya alhamdulillah lancar. Dan pihak keluarga sang muslimah menerima lamaran tersebut. Alhamdulillah, Lega.\nPersiapan Administrasi Nikah dan Walimatul ‘Ursy Setelah Khitbah, kedua keluarga saling berkomunikasi untuk menentukan tanggal pernikahan. Sembari mengurus administrasi nikah ke KUA serta persiapan acara akad nikah dan walimatul ‘ursy. Diputuskan Acara tersebut dilaksanakan Februari 2017. Ada waktu sekitar 2 bulan untuk mengurus semuanya. Alhamdulillah cukup lancar. Oh iya, dalam waktu 2 bulan itu juga saya gunakan untuk mencari tempat tinggal sendiri. Alhamdulillah Alloh mudahkan dapat tempat tinggal dekat masjid dan tempat kajian islam.\nMenikah Februari 2017 kami menikah. Alhamdulillahilladzi bini’matihi tatimmush sholihat.\nSemoga pernikahan kami membawa keberkahan di dunia dan di akhirat. Semoga Alloh karuniakan anak-anak yang sholih dan sholihah. Semoga kita bisa sama-sama berjalan di atas sunnah.\nSaya, Purnama Anaking Istri saya.. Mengucap syukur kepada Alloh ‘azza wa jalla, dan berterima kasih kepada,\nKedua orangtua saya -hafizhohumalloh- Kedua mertua saya -rohimahumalloh- Ustadz Ahmad Zaki Husni -hafizhohulloh- WO Syar’i Azyan Wedding Dan Semua pihak dan teman-teman yang membantu kami dalam doa. Jazaahumullohu khoiron..\n"}]